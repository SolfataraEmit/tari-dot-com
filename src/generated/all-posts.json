[
  {
    "slug": "2020-07-30-tari-protocol-discussion-53",
    "content": "\nOn Thursday the Tari community discussed potential improvements or new features for the Tari Aurora wallet, which serves as a reference-design for Tari. Some highlights below.\n\n\n*   Ability to log in without using biometrics on devices with biometrics enabled was suggested and well received.\n*   Potential ways to approach one-sided transactions were discussed \n*   Chat functionality that would allow people to send messages back and forth in app was well received by the community.\n\nPlease feel free to keep the conversation going by joining the discussion thread on [Telegram](https://t.me/tariproject) or #Tari on Freenode.\n\n\n\nBelow is a full transcript of the conversation.\n\n\n### **Transcript of Thursday discussion**\n\nThis is a snapshot taken of the Telegram conversation (bridged to #Tari on Freenode)  on Thursday, July 30th, 2020.\n\n```\n–Æ ‚óã‰∏â üêôÔºº(‚Çë‚ÇÇÃë·èà‚ÜÇÕ© ‚ÇÇÃë‚Çë), [Jul 30, 2020, 11:01:25 AM]:\naurora discussion? \npls builds on fdroid soonish, thnx\n\nRiccardo Spagni, [Jul 30, 2020, 11:02:13 AM]:\nfdroid that\n\nCayle, [Jul 30, 2020, 11:02:15 AM]:\nYes, The AURORA discussion starts now\n\nTal, [Jul 30, 2020, 11:02:44 AM]:\nWoohooooo\n\nlsquared, [Jul 30, 2020, 11:02:49 AM]:\nLitty\n\nTal, [Jul 30, 2020, 11:03:17 AM]:\nThe release that was mentioned in the last email is out on Android, btw, but is still in iOS review purgatory\n\nIn case anyone was confused\n\nVictor B, [Jul 30, 2020, 11:03:27 AM]:\nIs there any plan to implement login without biometrics?\n\nKutsal, [Jul 30, 2020, 11:03:48 AM]:\nIf you have biometrics disabled on your device it's possible already.\n\nWe think phone security is wallet security, so the way you secure your phone is the way you secure your wallet.\n\nVictor B, [Jul 30, 2020, 11:04:44 AM]:\nCan you access that feature at all if biometrics is enabled or is it hidden?\n\nTal, [Jul 30, 2020, 11:04:47 AM]:\nThe one aurora feature that's being worked on I am SUPER excited about is gifs in transaction notes\n\nRiccardo Spagni, [Jul 30, 2020, 11:05:09 AM]:\nVictor so you mean you unlock your phone with biometrics, but then Tari Aurora has a separate PIN?\n\n\nI could see that being useful\n\n... useful\n\nVictor B, [Jul 30, 2020, 11:05:31 AM]:\nCorrect\n\nRiccardo Spagni, [Jul 30, 2020, 11:05:39 AM]:\nthat's a great idea\n\nTal, [Jul 30, 2020, 11:06:00 AM]:\nIs that in case your biometrics get compromised?\n\nJohn Davies, [Jul 30, 2020, 11:06:25 AM]:\nnon-interactive (one-sided) txs please üòò\n\nVictor B, [Jul 30, 2020, 11:06:39 AM]:\nOr if you want additional security for a wallet app that‚Äôs holding funds\n\nTal, [Jul 30, 2020, 11:06:42 AM]:\nhahaha +100000000000000000\n\nVictor B, [Jul 30, 2020, 11:06:58 AM]:\nI don‚Äôt enable the biometrics on many of my financial apps\n\nlsquared, [Jul 30, 2020, 11:07:32 AM]:\nYes this would be nice\n\nJohn Davies, [Jul 30, 2020, 11:08:25 AM]:\nopenalias could improve the UX of sending to peopel\n\nKutsal, [Jul 30, 2020, 11:09:57 AM]:\n\nI'm not fully on top of how it could be possible, would the protocol allow it? @loopster\nKutsal, [Jul 30, 2020, 11:09:57 AM]:\n\n\nJason, [Jul 30, 2020, 11:11:05 AM]:\nSame, always worried my wife points my phone at my face when I'm not concentrating\n\nsw, [Jul 30, 2020, 11:11:15 AM]:\nNot that easy in MW...\n\nVictor B, [Jul 30, 2020, 11:11:24 AM]:\nü§£\n\nTariIRCBouncer, [Jul 30, 2020, 11:11:24 AM]:\n[irc] <stringhandler> \"would the protocol allow it?\" We are working on it\n\n[irc] <stringhandler> as in it's on the roadmap\n\nJohn Davies, [Jul 30, 2020, 11:12:03 AM]:\nim blocked from posting links but there is a LIP for it on litecoin\n\nJohn Davies, [Jul 30, 2020, 11:13:19 AM]:\ni believe gottscoin has another method for it as well\n\nsw, [Jul 30, 2020, 11:13:42 AM]:\nI know there are problems with the original proposal posted by grin.\n\nBut it is something I think we would all like if we can have it secure\n\nJohn Davies, [Jul 30, 2020, 11:14:03 AM]:\nand there's the less desirably half-built invoice txs that could be used by senders to pay recipients pre-defined values (not so bad for merchants, but not exactly what most users would want)\n\nJohn Davies, [Jul 30, 2020, 11:14:43 AM]:\n\ntheres a rogue key attack that has been solved but not updated on proposal yet because grin wont implement the method and litecoin wont need it for a few months\nJohn Davies, [Jul 30, 2020, 11:14:43 AM]:\n\n\nTal, [Jul 30, 2020, 11:15:13 AM]:\nhttps://github.com/DavidBurkett/lips/blob/master/lip-0004.mediawiki\n\nthx for pointing me to this @johndavies24\n\nIs this the one you were referring to? Or is there something more recent now?\n\nKutsal, [Jul 30, 2020, 11:16:17 AM (Jul 30, 2020, 11:17:04 AM)]:\n\nI think we have support for this with QR codes - one could embed the recipient and the amount, and the QR code will take you to the pre-completed add amount screen (with recipient selected).\n\n\n\nKutsal, [Jul 30, 2020, 11:16:17 AM (Jul 30, 2020, 11:17:04 AM)]:\n\n\nJohn Davies, [Jul 30, 2020, 11:16:30 AM]:\nthat is the one, david said he'd help me update it if I ported the LIP to a grin RFC but the belief is grin core wont implement it so thats why he hasnt done it\n\n*update it with the rogue key attack fix\n\nJohn Davies, [Jul 30, 2020, 11:17:41 AM]:\nproblem with this is you either need a large number of pre-built half-transactions OR you have to support replayable kernels and there are a slew of issues with replay attacks\n\nTal, [Jul 30, 2020, 11:17:59 AM]:\nthat's not the same as an invoice tx though, i think\n\nor are you saying that the tx itself would include a qr code\n\nBlue, [Jul 30, 2020, 11:19:05 AM]:\nI figured. Like I said yesterday, if Tari Labs isn't selling Tari directly to companies, someone else will.\nThey will buy directly off exchanges becoming the entire Tari ecosystem.\n\nJohn Davies, [Jul 30, 2020, 11:19:13 AM]:\nit shouldnt be a problem to fit a half-tx in a qr code\n\nsw, [Jul 30, 2020, 11:19:23 AM]:\nYou can do that, but then your qr code is only use once\n\nKutsal, [Jul 30, 2020, 11:20:20 AM]:\n\nhm i see, so you need to bind the tx to a specific invoice? so it's that for invoice only and not a generic payment?\n\nKutsal, [Jul 30, 2020, 11:20:20 AM]:\n\n\nJohn Davies, [Jul 30, 2020, 11:21:17 AM]:\nor you allow repayable kernels and it could be used many times\nor you have a connected device create new ones on demand, but that's interactive\n\nsw, [Jul 30, 2020, 11:21:25 AM]:\nYeah, but nothing stops you from doing that. You can do that and include all your \"receiving\" info in a qr. This is then your custom created invoice, and can be a one sided tx\n\nJohn Davies, [Jul 30, 2020, 11:22:38 AM]:\nduplicate outputs could be an issue with a reusable system as well, right? The recipient would have to define the output and blinding factor\n\nsw, [Jul 30, 2020, 11:22:40 AM]:\nwhat do you mean by a repayable kernel\n\nsw, [Jul 30, 2020, 11:23:05 AM]:\nyes it is, hence why its a custom created invoice\n\nJohn Davies, [Jul 30, 2020, 11:23:29 AM]:\nrecreating an output by using the same tx kernel that was previously used (but the output would have had to be spent to replay the kernel)\n\nsw, [Jul 30, 2020, 11:25:04 AM]:\nso your still creating a duplicate hash\n\nJohn Davies, [Jul 30, 2020, 11:25:18 AM]:\ni'll stop derailing, we can move on, but one-sided txs in this format seemingly either need duplicate outputs, replayable kernels or many of the half-built txs ready to serve and use once\n\nKutsal, [Jul 30, 2020, 11:26:06 AM]:\nalright thanks John, I can't say I understand it fully, but it sounds like the app would need platform support to implement that.\n\nall I can say is with the app as it is we can have more custom fields encoded in a QR\n\nSo some of the features we've been working on include tabbed navigation in home screen, updated transaction list design (more info visible for each transaction in the list) and Giphy integration for transaction messages.\n\nAnd before all this 0.3.0 releases contain automated and encrypted cloud backups. iOS is being reviewed literally now and Android is out already.\n\nOnce you turn on backups your wallet gets backed up automatically with every change in your wallet. These changes happen with visible and some invisible transaction events. And through the backup settings screen you can pick a passphrase for your backup that will be used to encrypt your backup.\n\nYet, the design and development process can sometimes feel like an echo chamber if the discussion is always internal, so for some time now we've been thinking about asking the users their ideas for cool new features.\n\nSo please let us know what functionality you think could make the app more useful, and the pains you might be having if you're already using it, and we'll be happy to discuss how to get there: )\n\nVictor B, [Jul 30, 2020, 11:38:06 AM]:\nAny plans to do a seed phrase wallet back up for those of us that don‚Äôt trust no damn cloud\n\nKutsal, [Jul 30, 2020, 11:41:41 AM]:\n\nYep, actually the product and design teams have already prepared the design for it, and we have implemented the non-functional screens, but AFAICT it's not trivial to do it with MimbleWimble and we need to put more work into the platform side of it. But yes, it's in our todo list: )\n\n\nJason, [Jul 30, 2020, 11:41:43 AM]:\nYes, there's just a few protocol changes required first as it's not something easily done with mimble wimble\n\nTariIRCBouncer, [Jul 30, 2020, 11:42:02 AM]:\n\n[irc] <stringhandler> I like the idea of sending a message with the transaction, is there anyone else who'd like to see a bit of chat functionality, or is it just me?\n\nTariIRCBouncer, [Jul 30, 2020, 11:42:02 AM]:\n\n\nKutsal, [Jul 30, 2020, 11:45:40 AM]:\nI find this really exciting.\n\nTariIRCBouncer, [Jul 30, 2020, 11:47:24 AM]:\n[irc] <stringhandler> No need to try compete with Telegram or Whatsapp, but I like the idea that if I send you money you can reply with a thumbs up or \"Thanks\"\n\nIdontKnow, [Jul 30, 2020, 11:47:59 AM]:\nsome sent msgs in txs that later where cancelled. \nhow long for a tx to be non-cancellable?\n\nüÜóI guess it would be untill block found?\n\nJason, [Jul 30, 2020, 11:51:31 AM]:\nUntil the receiver has signed their part and replied to the sender\n\nOnce that has been done the tx is considered \"complete\" and it's broadcast to the mempool where there's no stopping it\n\nKutsal, [Jul 30, 2020, 11:53:05 AM]:\n\nwhich means you cannot cancel a tx if you're the recipient.\n\n\nCayle, [Jul 30, 2020, 11:53:16 AM]:\nYes, while there‚Äôs no real roadmap, it‚Äôs on the radar\n\nVictor B, [Jul 30, 2020, 11:57:01 AM]:\nWill Aurora ever be a multicoin wallet or will it stay Tari only?\n\nRiccardo Spagni, [Jul 30, 2020, 11:57:24 AM]:\nno\n\nIdontKnow, [Jul 30, 2020, 11:57:27 AM]:\nThanks. it is still unclear to me, which means I don't understand the protocol. I'll look into it.\n\nRiccardo Spagni, [Jul 30, 2020, 11:57:30 AM]:\nTari only\n\nVictor B, [Jul 30, 2020, 11:57:47 AM]:\nNot even monero üòè\n\n?\n\nRiccardo Spagni, [Jul 30, 2020, 11:57:59 AM]:\n\nmaybe in future it'll allow Tari assets, maybe it'll allow atomic swaps with Monero (and thus *might* have to run a Monero wallet), but it's primarily meant to be a tech demonstrator\n\n\nJason, [Jul 30, 2020, 12:01:19 PM]:\nLooks like 0.3.0 for iOS was just approved üëç\n\nKutsal, [Jul 30, 2020, 12:02:28 PM]:\nphew üòÑüéâ\n\nSo this backup & restore feature was a large one and it took us some time to get to this initial version, really looking forward to feedback üëÄ\n\nCayle, [Jul 30, 2020, 12:08:16 PM]:\nI‚Äôm also interested to know how many people would find a chat feature useful, you can approximate it now by sending tiny amounts of Tari with your message, but that‚Äôs very much overkill just to say ‚ÄúHi what‚Äôs up?\"\n\nAnd what about better address book functionality? E.g. connecting the emoji ids with your actual devices contact list; So if you search your contact list, the ‚ÄúSend Tari‚Äù button is there alongside ‚ÄúSend text‚Äù or ‚ÄúMake call\"\n\nWho would like advanced coin selection when sending?\n\nOutput consolidation?\n\nCoin splits?\n\nDoes anyone point their wallet to their own base node? Or do you just use the default seed nodes?\n\nVictor B, [Jul 30, 2020, 12:13:54 PM]:\nI just use the defaults\n\nCayle, [Jul 30, 2020, 12:13:59 PM]:\nSend your answers to üå†üé≠üò±üêûüéßüêÄüåùüíäüåçüåùüé∑üêìüåäüé©üö≤üé∏üíäüö¢üå∑üåàüçöüö®üéµüìùüî•üèÅüíªüê∞üç¨üîßüêêüéÄüèâ\n\nüôÇ\n\njk. I mean you could, but here is good.\n\nJohn Davies, [Jul 30, 2020, 12:14:44 PM]:\ndefinitely this and the ones above it, also coin swap would be cool\n\nKutsal, [Jul 30, 2020, 12:14:59 PM]:\n@loopster I'm guessing it would introduce secure P2P chat over Tor?\n\nJohn Davies, [Jul 30, 2020, 12:15:08 PM]:\nmaybe a full mobile node that is maximally pruned\n\n(i.e. unable to seed new nodes but fully validating)\n\nCayle, [Jul 30, 2020, 12:15:38 PM]:\nThat‚Äôs already a feature BTW John. It‚Äôs just hidden away\n\nJohn Davies, [Jul 30, 2020, 12:15:48 PM]:\n\nwhich one, swaps or full node?\n\nCayle, [Jul 30, 2020, 12:15:53 PM]:\nfull node\n\nJohn Davies, [Jul 30, 2020, 12:16:09 PM]:\ncool, you guys just introduced prune and you already got it on mobile!?\n\nCayle, [Jul 30, 2020, 12:17:04 PM]:\n@kutsalkaan Tari already has this P2P messaging protocol  to send transaction messages. Text messages would just be another flavour,. The same privacy and security properties would apply.\n\nJohn Davies, [Jul 30, 2020, 12:17:48 PM]:\nthis is actually not a great idea, but maybe some people would want it for some reason, but bad for privacy\n\nLarry Cooke, [Jul 30, 2020, 12:18:19 PM]:\nI haven't been able to get Aurora 0.3.0 to open on Android 11 beta 2.5 (RPB2.200611.012). Loads splash screen then authenticates with PIN or bio-metrics, then immediately closes\n\nJohn Davies, [Jul 30, 2020, 12:18:28 PM]:\nso when i said the ones above your point to your own node message, i didnt mean that one, lol\n\nCayle, [Jul 30, 2020, 12:18:36 PM]:\n@johndavies24 Maybe I‚Äôve misundertood you. You can currently configure Aurora to use any full node, is what I meant.\n\nKutsal, [Jul 30, 2020, 12:20:08 PM]:\nthanks for the info Larry, was it a clean install or an update? I'm going through crash reports.\n\nCayle, [Jul 30, 2020, 12:20:35 PM]:\nFull mobile nodes are not likely any time soon. The battery consumption is pretty heavy already. I‚Äôm not sure users would tolerate a pocket warmer\n\nJohn Davies, [Jul 30, 2020, 12:22:24 PM]:\nbut raspberry pi, or tablets, or always plugged-in mobile devices would appreciate it.  Also, some might prefer that it if there was an option to only have it sync once a day or whenever the app is opened and they accept they'll have to wait\n\nCayle, [Jul 30, 2020, 12:22:50 PM]:\nI don‚Äôt know if everyone knows this. but the Aurora wallet backend is actually the same Rust code that you get in the CLI\n\nLarry Cooke, [Jul 30, 2020, 12:23:01 PM]:\nBoth the Android beta and Aurora were updates. Previous version of Aurora worked on 10 with no issues, then upgraded to Android 11 and previous Aurora would not load. Waited to upgrade 0.3 to re-check\n\nCayle, [Jul 30, 2020, 12:23:46 PM]:\nThe code is there though if anyone wants to try and pick it up to put a full node on mobile, the wallet_ffi crate is a great blueprint\n\nKutsal, [Jul 30, 2020, 12:26:21 PM]:\nI think instant messaging would add great value!\n\nKutsal, [Jul 30, 2020, 12:29:02 PM]:\nWe probably have found the crash report Larry, are you on a Pixel 3a? We will do some testing on Android 11 and hopefully fix it with a hotfix release.\n\nLarry Cooke, [Jul 30, 2020, 12:29:59 PM]:\nYes, 3a. Thanks!\n\nKutsal, [Jul 30, 2020, 12:31:33 PM]:\nnp!\n\nFlipchan, [Jul 30, 2020, 12:34:16 PM]:\nTari defined as the legal entity\n\nRiccardo Spagni, [Jul 30, 2020, 12:34:37 PM]:\nTari isn't a legal entity\n\nit's a protocol\n\nBlue, [Jul 30, 2020, 12:43:15 PM]:\nCan you make it so a 1 time small fee allows unlimited message transfer between users. \nIf you must spend tari and possibly wait 2 minutes for the block to confirm every time you want to send a single message, the only thing people would use it for is to send PGP keys. Hardly worth the development cost.\n\nKutsal, [Jul 30, 2020, 12:45:42 PM]:\nIt's meant to be free with the app I think.\n\nSo what other features do you all think should be built?\n\nOr ideas regarding the features that got mentioned: P2P chat?\n\nConnecting Aurora to your address book to easily send (testnet) Tari to your contacts?\n\nSelecting coins when sending? Viewing your UTXOs?\n\nBlue, [Jul 30, 2020, 12:55:02 PM]:\nI wasn't talking about Aurora P2P, rather Tari P2P.\n\nChat in Aurora sounds like a great idea. It wouldn't be necessary, but I'm sure people would use it if it was available.\n\n```",
    "title": "Aurora Improvement Community Discussion",
    "date": "2020-07-30T11:00:00.000Z",
    "excerpt": "On Thursday the Tari community discussed potential improvements or new features for the Tari Aurora wallet, which serves as a reference-design for Tari. Some highlights below.    Ability to log in...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-53.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "53"
  },
  {
    "slug": "2020-06-12-tari-protocol-discussion-52",
    "content": "\nOn Friday the Tari community discussed the Tari Proof of Work algorithm for mainnet on the Tari [Telegram](https://t.me/tariproject) (bridged to #Tari on Freenode).\n\nThe primary question discussed was **‚ÄúWhat does the proof-of-work algorithm for Tari mainnet look like?‚Äù**\n\nThe following options were proposed by Cayle Sharrock.\n\n\n1. Merge mine with Monero only.\n2. Hybrid mining, with 50% - 75% of blocks being mined through Monero merge mining and the remainder using a CPU/GPU-friendly algorithm to mine Tari directly.\n3. Hybrid mining: 50% - 75% of blocks merge mining Monero, and the remainder merge mining another coin.\n4. Other\n\nA pre-discussion update was available [here](/updates/2020-06-08-update-22.html).\n\nWhile a final conclusion was not reached, next steps were proposed by Cayle and confirmed by other community members.\n\n_We need to wrap up the formal part of this discussion._\n\n_While there hasn‚Äôt been a firm decision for the affirmative; I haven‚Äôt seen any screaming hate towards either the original proposal, or any of the tweaks that have been proposed here tonight._\n\n_May I propose the next step would be for the dev community to continue the discussion in #tari-dev over the next week or so; reach a broad consensus, and then drop that proposal here for another discussion?_\n\nBelow is a full transcript of the conversation.\n\n\n### **Transcript of Friday discussion**\n\nThis is a snapshot taken of the Telegram conversation (bridged to #Tari on Freenode)  on Friday, June 12, 2020.\n\n```\nCayle, [12.06.20 11:00]\n\nWelcome to the Tari Proof of work discussion\n\nQ: What does the proof-of-work algorithm for Tari mainnet look like?\n\nA: That‚Äôs what we‚Äôre here to find out!\n\nThe developer community discussed this topic late last year, but the broader Tari community has grown since then and we thought it would be prudent to re-open the discussion to determine whether the decision made in October still has broad consensus.\n\nThere are several options available to us:\n\n1. Merge mine with Monero only.\n\n2. Hybrid mining, with 50% - 75% of blocks being mined through Monero merge mining and the remainder using a CPU/GPU-friendly algorithm to mine Tari directly.\n\n3. Hybrid mining: 50% - 75% of blocks merge mining Monero, and the remainder merge mining another coin.\n\n4. Other\n\nOption 1 is the simplest.\n\nTari can instantly leverage Monero‚Äôs hash-rate security; and given the relationship between the Monero and Tari communities, we are optimistic that Tari will get the support of several large Monero pool operators.\n\nHowever, there are significant risks to ‚Äúputting all your eggs in one merge-mined basket‚Äù. Cheap 51% attacks are possible, as this report and a few members of the Monero development community have pointed out.\n\nOption 2 is the next easiest.\n\nTestnet is already a Tari-only Proof-of-work chain. Mainnet could mitigate the merge-mined 51% attack risks by hybrid mining using a Tari-only algorithm in addition to Monero merge-mining.\n\nThe choice of algorithm, and overall contribution to the block emission is yet to be decided. Testnet uses a double Blake hashing algorithm, but this isn‚Äôt an optimal choice for several reasons.\n\nA better choice would be a ‚Äúmemory hard‚Äù hashing algorithm, like Argon2; or go in the opposite direction and choose one that is likely to become an ASIC-based commodity in future, like SHA-3. \n\nAlgorithms that already have high hash rates on other coins, including SHA-256, Ethash, Scrypt and Equihash are not good choices (because you could buy an attack on nicehash).\n\nOption 3 is tougher\n\nMainly because it requires convincing an additional set of pool operators to support Tari. But it is not much more difficult to implement from a technical point of view.\n\nFYI - The result of the Development Discussion back in October was to take Option 2.\n\nJohn Tromp, [12.06.20 11:03]\n\nthe simplest is of course not to merge mine. but apparently that's off the table:(\n\nHansie Odendaal, [12.06.20 11:03]\n\nI think all options are open for discussion\n\nDominik F, [12.06.20 11:03]\n\n[In reply to John Tromp]\n\n4. Other\n\nlsquared, [12.06.20 11:05]\n\nCould 2 and 3 be combined together\n\nCayle, [12.06.20 11:05]\n\nYeah, so maybe a good starting point is to cover the risks of ONLY doing merge mining\n\nHansie Odendaal, [12.06.20 11:05]\n\nI think it can be put together in many different ways\n\nHansie Odendaal, [12.06.20 11:05]\n\nAgreed\n\nlsquared, [12.06.20 11:06]\n\nOnly merge mining with 1 coin or multiple coins?\n\nCayle, [12.06.20 11:06]\n\n@hansieodendaal can better explain\n\nCayle, [12.06.20 11:06]\n\n1 coin\n\nlsquared, [12.06.20 11:06]\n\nThat inherently sounds bad due to 51% attacks from a large mining pool\n\nHansie Odendaal, [12.06.20 11:06]\n\nLet me share this TLU: [Merged Mining Introduction](https://tlu.tarilabs.com/merged-mining/merged-mining-scene/MergedMiningIntroduction.html)\n\nsw, [12.06.20 11:06]\n\nHybrid mining allows you to try an leverage many differant types of pow, And hopefully get the best of both worlds\n\nlsquared, [12.06.20 11:06]\n\nWould it be possible to merge mine with a non PoW coin üòú\n\nHansie Odendaal, [12.06.20 11:07]\n\nThat will not be mining...\n\nsw, [12.06.20 11:07]\n\nI am not personally convinced in doing more than  50% mergeming as that to me negates the advtanges we have with hybrid mining.\n\nCayle, [12.06.20 11:07]\n\nGreat to have @johntromp here. You basically wrote the Grin PoW algos, am I right?\n\nHansie Odendaal, [12.06.20 11:08]\n\nThis is the best work I could find explaining risks and attack vectors of merge mining: Thesis by Alexei Zamyatin: [Merged Mining: Analysis of Effects and Implications](http://repositum.tuwien.ac.at/obvutwhs/download/pdf/2315652)\n\nJohn Tromp, [12.06.20 11:08]\n\nyes, i'm the author of Cuckoo Cycle\n\nsw, [12.06.20 11:08]\n\nMy biggest concern currently is the monero mining pool centralisation. 2 pools, have > 50% hash trate, 1 pool above 33% and 1 pool above 25%\n\nCayle, [12.06.20 11:08]\n\nWelcome üôÇ\n\nHansie Odendaal, [12.06.20 11:09]\n\nWhat were the objectives John?\n\nJohn Tromp, [12.06.20 11:09]\n\nmake a simple memory hard pow\n\nJohn Tromp, [12.06.20 11:09]\n\nthat's instantly verifiable\n\nHansie Odendaal, [12.06.20 11:10]\n\nPlease explain the last point?\n\nCayle, [12.06.20 11:10]\n\nSo @hansieodendaal, for everyone that‚Äôs not going to read that thesis right now, what‚Äôs the tl;dr of the single merge mining risks?\n\nHansie Odendaal, [12.06.20 11:11]\n\nDouble spend; alter history: \n\n- needs >50% hash power\n\nSelfish mining; Eclipse attacks: \n\n- needs >33% hash power for a poorly connected attacker (at ~10% network connectivity) \n\n- needs >25% hash power for a well connected attacker (at ~50% network connectivity)\n\nJohn Tromp, [12.06.20 11:11]\n\nverifying a PoW should take negligible resources, esp. if it's to be used as spam control\n\nJohn Tromp, [12.06.20 11:12]\n\nor to counter DDos attacks\n\nTal, [12.06.20 11:13]\n\n[In reply to Paull Smalls]\n\nThere's a fix for that going out next week ‚Äî low power mode for Android. Check out the Tari Android repo if you're interested in how it works exactly or have ideas\n\nHansie Odendaal, [12.06.20 11:13]\n\n@ cayle, all merged mined coins were highly exposed according to those indices, except Myriadcoin that has a hybrid mining strategy.\n\nHansie Odendaal, [12.06.20 11:13]\n\n[In reply to John Tromp]\n\nüëç\n\nTariIRCBouncer, [12.06.20 11:14]\n\n[irc] &lt;stringhandler> is the gist that if only say 40% of monero miners are mining tari and that's 2 pools, then one of those pools could have more than 51%?\n\nsw, [12.06.20 11:14]\n\n[In reply to John Tromp]\n\nIs there a specific reason why merge mining is bad? I know it has its caveats. But I think those can be overcome\n\nEdwin, [12.06.20 11:16]\n\nThere is a decentralised pool implementation for Monero that would improve things if the biggest pools could implement it\n\nHansie Odendaal, [12.06.20 11:16]\n\n[In reply to TariIRCBouncer]\n\nYes, one cannot control who will do merge mining\n\nCayle, [12.06.20 11:16]\n\nBasically, as @Lsquared pointed out, a large pool can come in and attempt a 51% attack, but _because it‚Äôs merge mined_ their opportuntity cost is relatively low. Normally if you attempt a 51% attack and fail, you lose all the block rewards that you would have received by just playing along. \n\nBy attacking the child chain in merge mining, the attacker does not risk the parent chain rewards\n\nTariIRCBouncer, [12.06.20 11:16]\n\n[irc] &lt;stringhandler> the size needed for the proof of work for merge mining is large\n\nEdwin, [12.06.20 11:16]\n\nOnly a few tiny pools use it currently\n\nEdwin, [12.06.20 11:16]\n\nSomeone called jtgrassie made it\n\nHansie Odendaal, [12.06.20 11:16]\n\n[In reply to sw]\n\nI think merge mining only with one algo is risky, exposed to being controlled\n\nsw, [12.06.20 11:16]\n\n[In reply to TariIRCBouncer]\n\nYip, if you have more than 1/3 of the hash rate, you can start mucking around. If you have 1/3 of the merge mined pow, and the pow is weighted to count more than 50%, you automatically get more than 51% hash rate.\n\nsw, [12.06.20 11:17]\n\n[In reply to Cayle]\n\nthats even worse than I had it\n\nTariIRCBouncer, [12.06.20 11:19]\n\n[irc] &lt;stringhandler> you need the whole monero header plus a fair amount extra, compared to a few inputs needed for a standard PoW\n\nEdwin, [12.06.20 11:20]\n\nhttps://github.com/jtgrassie/monero-pool/blob/master/stratum-ss.md\n\nCayle, [12.06.20 11:20]\n\nSo hybrid mining is an attempt to remedy that drawback. \n\nIn it‚Äôs simplest incarnation, half of blocks on average go to one chain (e.g. merge-mined XMR) and half to another (say, independent PoW)\n\nEdwin, [12.06.20 11:20]\n\nThat took forever to find\n\nHansie Odendaal, [12.06.20 11:20]\n\n[In reply to TariIRCBouncer]\n\n#### Additional Blockchain Storage Requirements\n\n- monero_coinbase_tx\n\n- tx_merkle_proof (one pathway of the tx_merkle_tree) - amount of hashes in a tx_merkle_proof is log2(Txs count)\n\nRiccardo Spagni, [12.06.20 11:20]\n\nalso it's not the same as BTC's stratum, I don't think\n\nRiccardo Spagni, [12.06.20 11:20]\n\n[In reply to Edwin]\n\n404\n\nDavid Main, [12.06.20 11:20]\n\n[In reply to Edwin]\n\n404\n\nEdwin, [12.06.20 11:20]\n\nDamn it\n\nJohn Tromp, [12.06.20 11:21]\n\nyou only need the parts of the monero header that commit to the tari chain state\n\nEdwin, [12.06.20 11:21]\n\nhttps://www.reddit.com/r/Monero/comments/cecmrf/can_this_be_done_to_monero_mining_pools_as_well/eu2g4j5\n\nJohn Tromp, [12.06.20 11:21]\n\nbut depending on implementation, that may be pretty much all of it\n\nEdwin, [12.06.20 11:22]\n\nThe repo is gone but I remember him talking about it\n\nTariIRCBouncer, [12.06.20 11:22]\n\n[irc] &lt;stringhandler> Not sure if it's a factor, but the miners may not refresh the transactions in both chains immediately\n\nTariIRCBouncer, [12.06.20 11:22]\n\n[irc] &lt;stringhandler> depending on the implementation\n\nsw, [12.06.20 11:23]\n\n[In reply to Hansie Odendaal]\n\nShort of this is, on merge mine. You need to prove the mined monero header. Then you need to prove the hash of your header is in the data that was just mined for monero. \n\nThats why you need the coinbase, and then the proof the coinbase is that mined monero block\n\nHansie Odendaal, [12.06.20 11:23]\n\n#### High Level Pseudo Code\n\n#process\n\n- tari_header_hash = hash(tari_header)\n\n- monero_coinbase_tx.include(tari_header_hash)\n\n- tx_merkle_tree = merkle_tree(monero_coinbase_tx).\n\n    include([txs])\n\n- tx_tree_root_hash = merkle_tree_root_hash(tx_merkle_tree)\n\n- block_hashing_blob = blob(monero_header).\n\n    append(tx_tree_root_hash, size(tree_root_hash)).\n\n    append(num_txs_in_block+1)\n\n- block_hash = hash(block_hashing_blob)\n\n- (achieved_difficulty, nonce) = random_x(block_hash, target_difficulty)\n\n#proof\n\n- proof_coinbase_tx(monero_coinbase_tx, tx_merkle_proof) == true\n\n- achieved_difficulty >= target_difficulty\n\n- achieved_difficulty == random_x_proof(block_hash, nonce)\n\nHansie Odendaal, [12.06.20 11:25]\n\nMerged mining provides cost of security almost for free, but not security itself._\n\nCayle, [12.06.20 11:25]\n\nBack to overall PoW strategies ‚Äî hybrid mining has its drawbacks too\n\nsw, [12.06.20 11:25]\n\nYip in dead pow\n\nHansie Odendaal, [12.06.20 11:26]\n\nYes it does\n\nCayle, [12.06.20 11:26]\n\nWould you mind elaborating on that a bit, @sw or @hansieodendaal\n\nHansie Odendaal, [12.06.20 11:26]\n\nThe selection strategy and difficulty algo block window is really important\n\nneonknight, [12.06.20 11:26]\n\nIf hybrid mining, how many PoW algos?\n\nsw, [12.06.20 11:26]\n\nIf you spike the hash rate of single pow, and you drop out. That algo is effectively dead\n\nJohn Tromp, [12.06.20 11:26]\n\ngrin has 34\n\nsw, [12.06.20 11:27]\n\n[In reply to John Tromp]\n\nalgos?\n\nJohn Tromp, [12.06.20 11:27]\n\nyes\n\nJohn Tromp, [12.06.20 11:27]\n\nC29 and C31,C32,...C63\n\nJohn Tromp, [12.06.20 11:28]\n\nof course most are not being solved since they take too much memory\n\nHansie Odendaal, [12.06.20 11:28]\n\n[In reply to neonknight]\n\nMyriadcoin has 5 algos running, with a limit on consecutive blocks\n\nEdwin, [12.06.20 11:28]\n\nhttps://mobile.twitter.com/jtgrassie/status/1150480615688609795\n\nHansie Odendaal, [12.06.20 11:28]\n\n[In reply to John Tromp]\n\nSo can you choose any one to solve?\n\nJohn Tromp, [12.06.20 11:29]\n\nyes\n\nsw, [12.06.20 11:29]\n\n[In reply to sw]\n\nThe reason for this is: The required difficulty will not drop until after you have mined a new block. If the one algo's delay in mining a new block is greater than the target of the other one, he will mine another block and you have to start over again.\n\nJohn Tromp, [12.06.20 11:29]\n\nbut nobody is choosing C33 or higher\n\nHansie Odendaal, [12.06.20 11:29]\n\n[In reply to John Tromp]\n\nüëç\n\nsw, [12.06.20 11:30]\n\n[In reply to Hansie Odendaal]\n\nIf you do hybrid mining, you will have to do something like this to stop dead algo's. Or you need a difficulty adjustment algo that takes into account the current time, like TSA\n\nCayle, [12.06.20 11:30]\n\nPErsonally I feel that if hybrid mining has a choice of algos that can be run with _the same hardware_ you don‚Äôt really gain much, and open yourself up to being gamed with large miners running up difficulty in one of them, and then flipping over to an alternative with a simple software config to grab a bunch of lower difficulty blcks.\n\nRiccardo Spagni, [12.06.20 11:31]\n\nyes I agree\n\nTariIRCBouncer, [12.06.20 11:31]\n\n[irc] &lt;stringhandler> agree\n\nRiccardo Spagni, [12.06.20 11:31]\n\nit would have to be Monero + ASICs or somethign\n\nHansie Odendaal, [12.06.20 11:31]\n\n[In reply to Cayle]\n\nAgreed\n\nTariIRCBouncer, [12.06.20 11:31]\n\n[irc] &lt;stringhandler> in fact, you want to ideally want there to be no overlap in miners\n\nCayle, [12.06.20 11:31]\n\n@fluffypony Are there GPU versions of RandomX yet?\n\nRiccardo Spagni, [12.06.20 11:32]\n\nnot that I'm aware of\n\nRiccardo Spagni, [12.06.20 11:32]\n\nand if there are then I don't think they'd be performant enough to warrant use\n\nsw, [12.06.20 11:32]\n\nIdeally I think we can go up to, one CPU, one GPU, one ASIC\n\nCayle, [12.06.20 11:32]\n\nSo potentially, CPU = RandomX + GPU Algo + ASIC Algo. But I wouldn‚Äôt choose more for my reasoning above\n\nCayle, [12.06.20 11:32]\n\nlol - snap\n\nRiccardo Spagni, [12.06.20 11:33]\n\nI would suspect that any GPU load we can come up with will become ASICable\n\nsw, [12.06.20 11:33]\n\nBut the GPU/ASIC one is diffcult as it could soon become asic\n\nRiccardo Spagni, [12.06.20 11:33]\n\nso I would say just skip that part and go RandomX + SHA3\n\nRiccardo Spagni, [12.06.20 11:33]\n\n[In reply to sw]\n\nprecisely\n\nCayle, [12.06.20 11:33]\n\nYes, it‚Äôs always a time-based thing\n\nTariIRCBouncer, [12.06.20 11:33]\n\n[irc] &lt;stringhandler> well you still need to get some adoption, so ASIC\n\nCayle, [12.06.20 11:33]\n\n+1\n\nsw, [12.06.20 11:33]\n\nYou could potentially do 2 ASIC's\n\nsw, [12.06.20 11:34]\n\nor more\n\nTariIRCBouncer, [12.06.20 11:34]\n\n[irc] &lt;stringhandler> * so asics would need to be merge mined with another coin\n\nsw, [12.06.20 11:34]\n\nBut there needs to some cap if go this route\n\nCayle, [12.06.20 11:34]\n\nYes, ‚Äòcos all ASIC hashpower is rentable on nicehash\n\nRiccardo Spagni, [12.06.20 11:34]\n\nnot for something like double-SHA3\n\nHansie Odendaal, [12.06.20 11:34]\n\nPersonally I like Myriacoin's approach to hybrid mining the best:\n\n- merged mined (sha256d, scrypt); \n\n- independent (groestl, yescript, argon2d).\n\nThese could be altered or swapped out for others of coarse\n\nRiccardo Spagni, [12.06.20 11:34]\n\nwhich would be GPU for now, and ASIC at some point in the future\n\nsw, [12.06.20 11:34]\n\n[In reply to TariIRCBouncer]\n\nIts not required\n\nRiccardo Spagni, [12.06.20 11:35]\n\nI don't like the idea of a memory-hard GPU algo that is just a band-aid and ends up with complex & expensive ASICs, I'd rather go for something cheap to ASIC\n\nCayle, [12.06.20 11:35]\n\nSo one parameter we haven‚Äôt discussed and this is a good segue, is that it doesn‚Äôt have to be a 1/n block split\n\nCayle, [12.06.20 11:36]\n\nWe _could_ have 75% XMR MM and 25% ASIC\n\nTariIRCBouncer, [12.06.20 11:36]\n\n[irc] &lt;stringhandler> interesting\n\nCayle, [12.06.20 11:36]\n\nfor instance\n\nRiccardo Spagni, [12.06.20 11:36]\n\nthat would be my preference\n\nRiccardo Spagni, [12.06.20 11:36]\n\nnot sure what split, but heavily Monero weighted\n\nCayle, [12.06.20 11:36]\n\n75% MM would require 2x the ‚Äúhonest‚Äù hashrate to execute an overall 51% attack\n\nEdwin, [12.06.20 11:36]\n\nIf you were to go for GPUs, what algorithm?\n\nCayle, [12.06.20 11:37]\n\n(if my memory serves)\n\nHansie Odendaal, [12.06.20 11:37]\n\nOpening up to attacks\n\nneonknight, [12.06.20 11:38]\n\nDoes that mean on average 3 blocks merged mined with Monero and then 1 block Asic mined\n\nRiccardo Spagni, [12.06.20 11:38]\n\n[In reply to Edwin]\n\nsomething like double-SHA3 would by GPU right now, but it's cheap and easy to produce ASICs in the future\n\nHansie Odendaal, [12.06.20 11:41]\n\nI do not understand the reasoning why 75% blocks for MM. Just making the attack vectors larger.\n\nCayle, [12.06.20 11:42]\n\nIt makes one set of vectors larger and others smaller.\n\nRiccardo Spagni, [12.06.20 11:42]\n\nyes\n\nsw, [12.06.20 11:44]\n\nThere might be some problems with the difficulty on the merge-mining. \n\nCurrently we have 2 min blocks, same as monero. \n\nI am just putting this at 50% for ease of use explaining. \n\nThat means we have one monero block every 4 min. This means that our difficulty will be much higher than the monero one. If we get all of the miners in. This wont be the case, I know. \n\nBut the problem is that if we have a higher diff than monero, the miner will find a monero block before a tari one. That means that the miner will start mining a new monero block. And start over mining again. Unless he gets lucky he will never find a tari block\n\nTariIRCBouncer, [12.06.20 11:44]\n\n[irc] &lt;moneromooo> If the main argument against merge mining only is \"one pool can get > 50%\", then 75% merged mining means the pool can get 3/4 of that still, so the proportion can't be too high. If a pool has 70%, 75% of 70% is 52%, which is still too much.\n\nTariIRCBouncer, [12.06.20 11:45]\n\n[irc] &lt;moneromooo> (70% of the merged mining hash rate, ie one large monero pool while the other large pool does not mine tari)\n\nHansie Odendaal, [12.06.20 11:54]\n\nGood observation\n\nTariIRCBouncer, [12.06.20 11:54]\n\n[irc] &lt;moneromooo> Blackwolfsa: in your example, he should fine a tari block every second block. Actual targets are randomly distributed.\n\nTariIRCBouncer, [12.06.20 11:55]\n\n[irc] &lt;moneromooo> (I think, but am not sure, that the argument was he'd find a monero block first, but that'll happen only half the time with those parameters, since the search is progressless. Sorry if I misunderstood the point).\n\nmr bulb, [12.06.20 11:56]\n\nw/ \"Hybrid mining: 50% - 75% of blocks merge mining Monero, and the remainder merge mining another coin\" what other coins are you considering?\n\nEdwin, [12.06.20 11:57]\n\nGrin\n\nDominik F, [12.06.20 11:57]\n\n[In reply to Edwin]\n\nüòÑ\n\nEdwin, [12.06.20 11:58]\n\nTari becomes the NFT MW bridge between Monero and Grin.\n\nmr bulb, [12.06.20 11:59]\n\ntriple threat\n\nCayle, [12.06.20 11:59]\n\n[In reply to TariIRCBouncer]\n\nCorrect; My comment was predicated on the assumption that you have an ‚Äúhonest‚Äù pool, and a large malicious pool(s)\n\nsw, [12.06.20 12:00]\n\n[In reply to TariIRCBouncer]\n\nNot per say? Because you are mining monero at the monero diff. \n\nThe idea being that if you find a monero header at a tari diff, you submit that to the tari chain as pow.\n\nsw, [12.06.20 12:00]\n\n[In reply to sw]\n\nBut if your tari diff is much higher you need to mine a monero block at that higher diff before you can submit it to the tari chain\n\nTariIRCBouncer, [12.06.20 12:01]\n\n[irc] &lt;moneromooo> Ah, I get it, it'll be monero block because you get the monero coinbase too. Ignore my comment.\n\nCye, [12.06.20 12:01]\n\nRecieved some tips, thanks guys/girlsüòÄüöÄüëç\n\nCayle, [12.06.20 12:09]\n\nWe need to wrap up the formal part of this discussion. \n\nWhile there hasn‚Äôt been a firm decision for the affirmative; I haven‚Äôt seen any screaming hate towards either the original proposal, or any of the tweaks that have been proposed here tonight.\n\nMay I propose the next step would be for the dev community to continue the discussion in #tari-dev over the next week or so; reach a broad consensus, and then drop that proposal here for another discussion?\n\nCayle, [12.06.20 12:10]\n\nThat proposal wouldn‚Äôt necessarily be asking for permission; but to see if there‚Äôs any major opposition\n\nsw, [12.06.20 12:10]\n\nüëç\n\nneonknight, [12.06.20 12:10]\n\nSounds good!\n\nRiccardo Spagni, [12.06.20 12:11]\n\nsounds good to me\n\nCayle, [12.06.20 12:11]\n\nGreat, then thanks to everybody who participatedm and have a lovely weekend!\n\nsalvo mantix, [12.06.20 12:11]\n\nüëè\n\nG C, [12.06.20 12:11]\n\nThanks Cayle and all üëèüèª\n\nDominik F, [12.06.20 12:12]\n\nüëç\n\nC.Lee Taylor, [12.06.20 12:36]\n\nüëå\n\n```",
    "title": "Tari Proof of Work Discussion",
    "date": "2020-06-12T11:00:00.000Z",
    "excerpt": "On Friday the Tari community discussed the Tari Proof of Work algorithm for mainnet on the Tari Telegram (bridged to #Tari on Freenode). The primary question discussed was ‚ÄúWhat does the...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-52.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "52"
  },
  {
    "slug": "2020-04-10-tari-protocol-discussion-51",
    "content": "\nOn Friday the Tari community discussed the meaning of digital asset ownership, what does it mean to own something that is digital in nature. Some highlights below.\n\n* There are cases where an individual will own the physical item but not the software that runs in it, this has created conflict over the \"right to repair\".\n* People want to own digital assets without having the current hassles of blockchain interaction (i.e. paying for transaction fees), blockchain abstraction seems to be the trend. Providing security and provable scarcity in a seamless UX.\n* What is the edge between digital asset and physical asset ownership?\n* People enjoy the concept of \"portability\" how one owns their asset independently of the game or world it was designed in, the asset lives on even if no one plays the game anymore.\n\nPlease feel free to keep the conversation going by joining the discussion thread on [Telegram](https://t.me/tariproject) or #Tari on Freenode.\n\n### Transcript of Friday discussion\nPlease note that unlike Telegram or IRC, Reddit threads are a living document. This is a snapshot taken 01:00:00 UTC\nTuesday, April 14, 2020.\n```\nlsquared, [10.04.20 07:09]\nTari discussion in several hours. \n\nPlease join us to share your thoughts on digital ownership and anything related to Tari. (16:00 UTC, 9:00 PDT, 18:00 SADT).\n\nYevhenii Kurtov, [10.04.20 07:10]\n[In reply to Riccardo Spagni]\nInteresting. How user will get their keys? Will they need to start by installing Tari wallet app?\n\nRiccardo Spagni, [10.04.20 07:11]\n[In reply to Yevhenii Kurtov]\nIf the vendor / issuer creates an app why wouldn‚Äôt the keys live in there?\n\nYevhenii Kurtov, [10.04.20 07:49]\ndoes this mean that security-wise users will have to rely on issuer's bona fides by default?\n\nNaveen Jain, [10.04.20 08:02]\n[In reply to Yevhenii Kurtov]\njust like anything else in the world, one has to trust the producer of creator of a thing. This doesn't have to due with security per say, but it certainly has to do with values, and integrity. IE if creator says that an asset will be scarce in X dimension, and they lie, they shouldn't be trusted going forward\n\nYevhenii Kurtov, [10.04.20 08:04]\nUnderstood. I'm more concerned about asset forfeiture when issuer will command an app to transfer them to a his vault for example\n\nNaveen Jain, [10.04.20 08:08]\n[In reply to Yevhenii Kurtov]\nThere are many ways for someone to be a bad actor. For example someone could create an asset that works in a particular way, and then create a new version of that same asset and demand that users pay or perform some action to get the new version. Ultimately a protocol cannot change the trust paradigm between users and creators. Creators that are bad actors shouldn't be supported by users.\n\nYevhenii Kurtov, [10.04.20 08:10]\nideally - yes üôÇ \nit's also interesting how far marketing can go  - can \"own your collectibles\" be a strong selling point or not?\n\nNaveen Jain, [10.04.20 08:20]\n[In reply to Yevhenii Kurtov]\nThe goal is for the protocol to eventually enable ownership of digital assets. Just like in the real world, if you buy something to own from a someone with low integrity, it doesnt matter if you own it. Eg. if you buy a poorly made physical product, does it matter that you own it? Or if you buy a physical product, and the social contract changes around the physical product, how would the user feel? In other words, there is the goal for the Tari protocol to one day support digital asset issuance, and ownership. And then there is the future trust paradigm between the digital asset issuer and the collector or purchaser of said asset.\n\nYevhenii Kurtov, [10.04.20 08:30]\nok, ok. I think we are getting to the core here, bear with me please :)) \n\nlet's look at a scenario when issuer decided to flip the table by coming up with unreasonable rules and decisions.\nwill users be able to migrate their collectibles to another platform?\n\nYevhenii Kurtov, [10.04.20 08:30]\nI'm really trying to understand what \"ownership\" means in Tari world.\n\nNaveen Jain, [10.04.20 08:40]\nthere is the concept of an issuer, and then there is the concept of the tool one uses to manage your private keys / assets. The goal here isn't to create a world where an issuer can change ownership of keys of a given user. The goal is to create a world where how a user manages their keys is their business. A world where an issuer can change the rules for how the asset works outside of ownership of it. If they are low integrity this could mean reducing access. For example if owning the asset previously gave you access to some other kind of content controlled by the issuer, the issuer could one day eliminate access. Or perhaps if they want to surprise and delight and enable new kind of access with the asset the user owns.\n\nNaveen Jain, [10.04.20 09:05]\nHello folks\n\nlsquared, [10.04.20 09:05]\nThese days ownership seems like an abstract concept. I've always thought that the world was trending to no longer owning anything\n\nlsquared, [10.04.20 09:06]\nIn a SaaS like future\n\nlsquared, [10.04.20 09:06]\nBut then again, SaaS is merely owning a digital license to access a product\n\nNaveen Jain, [10.04.20 09:06]\nI think ownership is really about security. A don't tread on me mentality. It doesnt matter how the rules of the game change. I'm in possession of the ball\n\nNaveen Jain, [10.04.20 09:06]\nAnd then I can decide what to do with said ball\n\nNaveen Jain, [10.04.20 09:07]\npass it on to heirs. Give it to a friend. Sit on it till the end of time\n\nNaveen Jain, [10.04.20 09:08]\nIn a digital context, I think this is a super cool idea to explore. There is a spectrum here though. One can own the asset. The issuer can change what you can do with said asset in the world they control on a centralized basis.\n\nlsquared, [10.04.20 09:08]\nDigital assets is a very broad space. Not sure why I keep on jumping back to \"right to repair\" topics\n\nlsquared, [10.04.20 09:09]\nWhere someone \"own\" the physical car, but doesn't have the ability to modify it's software\n\nNaveen Jain, [10.04.20 09:09]\nright to repair is interesting. You could imagine a world where users who own an asset are up in arms because the asset issuer changed some access condition\n\nNaveen Jain, [10.04.20 09:10]\nyah the ownership of physical object combined with software license thing is super weird\n\nlsquared, [10.04.20 09:10]\nIt's a buy product of making devices smarter and smarter.\n\nlsquared, [10.04.20 09:10]\nWait til your smart lock decides to lock you out of your house\n\nlsquared, [10.04.20 09:11]\nbecause you forgot to pay the annual subscription :)\n\nNaveen Jain, [10.04.20 09:11]\nyou certainly don't get the source code. And often times the software included is an amalgamation of a wide range of stuff. Some of it is open source. Some of it is closed source. The combination of it all is certainly closed source / proprietary\n\nRobin Rath, [10.04.20 09:11]\nyeah, lots of cases where that happened. The one about Jibo was fascinating as the robot was designed to be a partner of sorts. https://techcrunch.com/2019/03/04/the-lonely-death-of-jibo-the-social-robot/\n\nNaveen Jain, [10.04.20 09:12]\nyah perhaps the right thing to do in that case would have been for them to open source the server software so a user group could spring up to run it\n\nlsquared, [10.04.20 09:12]\nPerhaps we should be pushing for digital assets that are not subscription based. Where ownership is absolute and not conditional on some ongoing payment\n\nlsquared, [10.04.20 09:13]\nOR perhaps subscriptions are native for digital assets as controls can be revoked easily (assuming it was programmed beforehand)\n\nRobin Rath, [10.04.20 09:13]\nyeah, I think digital assets vs. digital licenses to things that are updated is still a necessary distinction\n\nlsquared, [10.04.20 09:14]\nTrue what I discussed above is a digital license... I guess the benefit of digital licenses on a blockchain is that the rules are more transparent\n\nlsquared, [10.04.20 09:14]\nbut digital assets > digital licenses in terms of interest for me at least\n\nRobin Rath, [10.04.20 09:14]\nand transferrable, yep\n\nJak, [10.04.20 09:20]\nCould you please give an update on Big Neon? How is the traction going with that?\n\ncoinspeed, [10.04.20 09:27]\nDamn, I got in late..\nIs a Tari based privacy stable coin feasible?\n\nlsquared, [10.04.20 09:30]\n[In reply to coinspeed]\nYes, we are still working out the specs for enabling privacy on the digital asset network layer\n\ncoinspeed, [10.04.20 09:30]\n[In reply to lsquared]\nCool. How far are you from an MVP?\n\nlsquared, [10.04.20 09:31]\nThe layer 2 is still in research phase. However you can play around with the base layer now.\n\nlsquared, [10.04.20 09:32]\nFor example create Mimblewimble transactions\n\nlsquared, [10.04.20 09:32]\nWhich are private\n\nNaveen Jain, [10.04.20 09:33]\n[In reply to Jak]\nThe live music industry has shut down largely for the time being. Big Neon is live, and kicking, but there are no events to sell tickets to right now\n\nNaveen Jain, [10.04.20 09:33]\nTickets are a really cool example of a digital asset\n\nNaveen Jain, [10.04.20 09:34]\nI personally think that live entertainment will come back at some point in the future. When that happens, an open source ticketing system like Big Neon may be useful. Especially when in future, those tickets could be issued on something like Tari\n\nNaveen Jain, [10.04.20 09:35]\nWho knows if that will be in 6 months, 12 months, 24 months or more, but eventually, I think it comes back\n\nlsquared, [10.04.20 09:35]\nFortunately digital assets can be used for more than just ticketing\n\nNaveen Jain, [10.04.20 09:36]\nso many possible things\n\nPhilip Haslam, [10.04.20 09:36]\nYou guys rock. Love the goal you guys are going after!\n\nNaveen Jain, [10.04.20 09:39]\n[In reply to Philip Haslam]\nüôè\n\nNaveen Jain, [10.04.20 09:39]\nlong way to go for this kind of thing to exist, and for it to be super useful\n\nNaveen Jain, [10.04.20 09:39]\none day hopefully soon\n\nNaveen Jain, [10.04.20 09:42]\nis anyone seeing other cool things in this space out there? What interesting things are people working on?\n\nPhilip Haslam, [10.04.20 09:47]\n[In reply to Naveen Jain]\nWe're busy working on a crypto project for Zimbabwe. ZIMBOCASH. Launching in the next few days.\n\nRobin Rath, [10.04.20 09:48]\nNice, what is launching?\n\nRichard Nava, [10.04.20 09:50]\nAfter playing blockchain based games like Gods Unchained, Relentless, Axie Infinity, along with digital ownership apps like Quidd and Topps, its difficult to truly feel a connection/owner to the asset. \n\nFor Quidd, its really just an art gallery. I ‚Äúown‚Äù a 3D Render of a limited edition Pop! Figure, but its nowhere near as satisfying as owning it in a physical space. \n\nThe other blockchain based games were difficult to connect with mostly because the games werent exciting and the lack of a mobile app experience. \n\nPokemonGo is the closet to feeling ive had to a true ownership of a digital collectible asset.\n\nPhilip Haslam, [10.04.20 09:52]\n[In reply to Robin Rath]\nCreating the token and listing on two exchanges.\n\nAlfred, [10.04.20 09:52]\n[In reply to Richard Nava]\nit's just that the game mostly sucks\n\nRichard Nava, [10.04.20 09:53]\nüëÜüèæ exactly. Mostly Hearthstone clones\n\nAlfred, [10.04.20 09:53]\ngods unchained suck and there's no real community playing it\n\nAlfred, [10.04.20 09:53]\notherwise I'd love owning my digital cards\n\nRichard Nava, [10.04.20 09:54]\nüëÜüèæAs would I! Its why I bought in initially, but trailed off back to Magic and Star Wars: Destiny (RIP)\n\nRichard Nava, [10.04.20 09:54]\n[In reply to Alfred]\nFinally discovered how to use the reply feature\n\nRichard Nava, [10.04.20 09:56]\nDigital collectible apps like Quidd and Topps capitalize on the addictiveness of opening packs. Gross (but effective)\n\nAlfred, [10.04.20 09:58]\nI don't think it's gross, I regularly sink decent amounts of money in various games where you don't even have ownership of your stuff other than your in game account (which is most of the time illegal to resell on the secondary market)\n\nSo having real ownership of my stuff is actually a net positive for me no matter what. The problem right now I think is that the UI builts around these games/collectible apps are plain awful and make it so that only very small niche of people can use them\n\nAlfred, [10.04.20 09:59]\nlike why tf do I need a metamask wallet or w/e to even start going with your game\n\nAlfred, [10.04.20 09:59]\ntokens should be abstracted way more\n\nRobin Rath, [10.04.20 10:00]\nso you are mainly challenged by the UI of getting started and buying, or are you also talking about the UI of organizing collectibles/assets?\n\nAlfred, [10.04.20 10:01]\nOnce \"blockchain games\" stop selling themselves as blockchain games and jsut as games\n\nAlfred, [10.04.20 10:01]\nit'll be a lot better\n\nAlfred, [10.04.20 10:01]\nthe design I'd love is the following :\n\nAlfred, [10.04.20 10:02]\nI'd love to be able to buy with bitcoin/credit card/paypal w/e like I can do in any other game, and don't need to even own a wallet to get started.\nBecause owning a wallet to get started creates additional friction.\n\nI need a wallet only if I decide to truly take ownership of my stuff.. in the meantime the game company should act as custody wallet\n\nRichard Nava, [10.04.20 10:02]\n[In reply to Robin Rath]\nMost of the reviews for Topps and Panini apps echo this. Terrible UI. I believe this is why Quidd is the top digital collectible app on the store\n\nRichard Nava, [10.04.20 10:03]\nQuidd's UI is quite beautiful\n\nNaveen Jain, [10.04.20 10:03]\nQuidd is dead. Sold to Animoco for pennies on the dollar\n\nRichard Nava, [10.04.20 10:05]\nRight. And I can understand why. 3D renders of Pop Figure arent as cool as the one on my desk\n\nNaveen Jain, [10.04.20 10:06]\nThats a perceptional thing. If its a static 3D thing, sure. If its dynamic in a manner using location, weather or some other dynamic data set. Or just pure entropy it could be cooler then anything on ones desk.\n\nNaveen Jain, [10.04.20 10:06]\nI also think it comes down to life experience and context. Kids seem to be a lot more interested and excited about purely digital experiences becuase they start there\n\nAlfred, [10.04.20 10:07]\nPurely digital also opens up whole lot of other possibilities than physical\n\nNaveen Jain, [10.04.20 10:08]\nif someone as an individual is really into collecting Funkos then they may not have interest in other things whether they be physical or digital\n\nAlfred, [10.04.20 10:08]\nThe ecosystem and integration  as well as interoperability for these stuff just isn't developed enough\n\nNaveen Jain, [10.04.20 10:08]\nand thats fine. Thats a matter of personal preference\n\nRobin Rath, [10.04.20 10:08]\nWhat kids are doing on zoom (quick changing the virtual backgrounds, which is basically digital asset sharing) is interesting. Of course I've seen it happening on work calls too.\n\nNaveen Jain, [10.04.20 10:08]\npersonally I think there is a world of possibility around purely digital assets that are dynamic, connected and interoperable\n\nRichard Nava, [10.04.20 10:08]\n[In reply to Naveen Jain]\nGood point. My cousins want nothing but v-bucks or steam cards.\n\nAlfred, [10.04.20 10:09]\nyea interoperability is key\n\nNaveen Jain, [10.04.20 10:09]\nthat is super fun and interesting\n\nRichard Nava, [10.04.20 10:09]\n[In reply to Naveen Jain]\ncompletely agree\n\nAlfred, [10.04.20 10:09]\ngods unchained somehow did something in this direction\n\nAlfred, [10.04.20 10:09]\nyou could have some cryptokitties featured in their game\n\nAlfred, [10.04.20 10:10]\ndisplayed on the side of your board\n\nRichard Nava, [10.04.20 10:12]\nDestiny did something similar this. Players were given access to limited edition merch by completing in-game achievements. Resulted in a longer than average ingame time\n\nAlfred, [10.04.20 10:15]\nAbout Tari btw, will there be the requirement to own Tari native token in order to transact the tokens?\n\nNaveen Jain, [10.04.20 10:34]\nrequirement to own. What do you mean by requirement?\n\nAlfred, [10.04.20 10:37]\nDo I need tari in order to transact tokens\n\nAlfred, [10.04.20 10:37]\nlike I need ETH to transfer an ERC token\n\nA F, [10.04.20 10:49]\nWhy would apps use Tari? can't they make their own digital assets which people pay for with Monero\n\nMax, [10.04.20 11:35]\nWhere is the edge between digital asset ownership and physical asset ownership? E.g. if that is a digital key which gives a right to stay in a house or drive that car.\n\nlsquared, [10.04.20 14:04]\n[In reply to Max]\nFirst do you actually own something? Or is it own by a bank or someone else?\n\nMax, [10.04.20 14:43]\n[In reply to lsquared]\nOwnership might be a temporary thing. If I bought holiday ticket and there is hotel room, I think that I own it for that time of a stay.\n\nNaveen Jain, [11.04.20 08:11]\n[In reply to Alfred]\nAn intent is for Tari to be the basic economic unit of the Tari network and ecosystem. Clearly this doesn't exist yet, but that is a goal. Tari as a basic economic unit is intended to be a privancy enhancing (via MW) digital currency. Its not intended to be viewed as gas like ETH.\n\nNaveen Jain, [11.04.20 08:12]\n[In reply to A F]\nIn order for the whole system to work there needs to be a basic economic unit that is native to the system. Thats what enables rules to be validated etc. etc. A goal is to make it as easy as possible for users to move between Tari and XMR\n\nmidipoet, [11.04.20 08:13]\nPrivancy by TARI: putting the fancy in your privacy\n\nmidipoet, [11.04.20 08:13]\nbtw I expect royalties if that ever gets used. ;-)\n\nNaveen Jain, [11.04.20 08:14]\n[In reply to Max]\nthe challenge with viewing digital assets as a proxy for physical ownership is the human factor. Someone needs to be trusted along the path. This is why the reference design apps that Tari Labs is working on tend to focus on natively digital assets. In other words assets that are born digital with no intended physical manifestation.\n\nNaveen Jain, [11.04.20 08:15]\n[In reply to midipoet]\nüòÇ\n\nNaveen Jain, [11.04.20 08:15]\nroyalties paid in testnet Tari? üôÇ\n\nAlfred, [11.04.20 08:17]\n[In reply to Naveen Jain]\nOk, so to send my transfer my token to someone else I don't need any Tari in my wallet ?\n\nmidipoet, [11.04.20 08:17]\nSure, whatever. I am easy\n\nNaveen Jain, [11.04.20 08:18]\n[In reply to Alfred]\nThere will be likely need to be some sort of transaction fee that is denominated in the BEU of the network (Tari). Otherwise how are merge miners or validator nodes compensated?\n\nAlfred, [11.04.20 08:24]\n[In reply to Naveen Jain]\nThat's what I thought too.\nThis seem to me, to be one the biggest hurdle for adoption NTFs.\nAs long as you keep using only custodial services then the need for Tari can be abstracted away from the user. \nBut can we realistically ask them to have to care about getting some cryptocurrency when all they want to do is playing their favorite card game?\nIs this issue tackled, or what steps can we take to make it as abstract and frictionless for users as possible, the ideal scenario being that they never need to know anything about Tari to use tari-based tokens\n\nNaveen Jain, [11.04.20 08:34]\n[In reply to Alfred]\nThis is a really great point. Its something I personally think about a lot. I couldn't agree with you more. Why would a user want to go through the trouble of getting a digital currency to participate in a card game? There are a few perspectives here:\n- If its a generic card game, then I don't think people will want to jump through hoops to participate. This is why I think its critical for a system like Tari to really support the needs of creators people already care about. What does a company with rich IP care about? From my experience, they care about making revenue in new ways, and enabling new ways to engage with consumers. This is where the concept of setting rules around digital assets becomes an important idea to consider. When I first started working in the music business, I saw how passionate people are for music they love. People get tattoos for artists they love. They wait in line for hours to try to get tickets, even though the show is sold out. They buy the merchandise, VIP packages etc. etc. They jump through hoops as needed because they care so deeply for the underlying art. It clearly must make a meaningful impact in their daily lives. How can a system like Tari engage with creators who make this kind of valuable stuff? In my view, that is a key idea to getting folks to engage with Tari as a digital currency on a broader level.\n- How can this be viewed as a progression? There is no doubt that people will want to use whatever medium of exchange they are most comfortable with out of the gate. Perhaps over time then there are ways to lead them down the road of using something like Tari. Perhaps its starts with exclusive things that can only be purchased with Tari as a precursor to a fully Tari enabled world.\n- There is no question that the UX of apps that make use of Tari has to be incredible. It has to be as easy as possible for people to engage with digital assets issued on Tari. And you are right, there needs to be obfuscation of as many blockchain bits as possible from the user. Few users care about what kind of database is powering a system. This seems to be one of the rare industries that tries to market the database to all constituents when only a few constituents care.\n\nAlfred, [11.04.20 08:43]\nYea your last point is what I'd like to see out of anything coming out of a token platform that will be successful in real life.\nStop selling yourself as a blockchain based game. Abstract that away from user up to a point they don't even know what they are using and only then you will be able to get massive success.\nRequiring a crypto wallet (usually metamask for ETH based thing which are the most commons) to get started is a big no-no, when that step could be abstracted and only giving the option for your user to create one later-on as opt-in when they really need it. What user want is using his debit card/paypal and be done with it, maybe in 50 years there will be crypto-native people.\n\nI suggest you read about \"meta transactions\" which is what Origin did to remove some of the hurdles for their ETH based token which I think is one step in the correct direction (although I don't think this applies to Tari) : https://medium.com/originprotocol/driving-user-adoption-with-meta-transactions-3539aa6c5ae3\n\nAlfred, [11.04.20 08:55]\ntl;dr: they basically pay for/enable some entities to pay for their user gas costs, so they don't have to worry about it\n\nNaveen Jain, [11.04.20 09:07]\n[In reply to Alfred]\nYes something like this idea is something that has been discussed I believe by folks in the Tari community. I am not positive, but it sounds familiar. Bottom line is this: there are a number of interactions that I personally consider to be less then user friendly in a game like this. I know there are folks who are thinking about these various interactions and creative ways to improve them. I don't think there are silver bullets here, but I think there is a possibility of apps that interface with a system like Tari that have far better overall user experiences then apps that interface with other similarly distributed systems.\n\nNaveen Jain, [11.04.20 09:08]\nHopefully whenever the testnet launches and a reference wallet app drops, some of the ideas that I've heard about from folks will come to light. Fingers crossed.\n\nAlfred, [11.04.20 09:09]\nGood thing !\nI'm a huge NFT enthusiast so I have good hopes to see a platform who can successfully tackles these issues :)\n\nNaveen Jain, [11.04.20 09:10]\nyou and me both. I am really really excited about a truly easier to use NFT system (both for creators and users), AND a digital currency project that is able to take advantage of such a thing to become more mainstream and \"default\"\n\nNaveen Jain, [11.04.20 09:10]\nIn my opinion, that could really be a next generation type project in this space\n\nNaveen Jain, [11.04.20 09:11]\nMaybe Tari will one day be such a system. I also personally think that default privacy is a critical element both for creators, and users.\n\nAlfred, [11.04.20 09:16]\n[In reply to Naveen Jain]\nYou don't want everyone to be able to peek into your $100k magic the gathering collection ahah.\n\nNFTs are the future of collectibles there's no doubt for me about that and it's a huge and diverse market.\n\nmidipoet, [11.04.20 09:58]\n[In reply to Alfred]\nPersonally, I reckon there will be a huge backlash against digital in ~20 years. You want to be holding those analogs about when that happens.\n\nmidipoet, [11.04.20 09:59]\nI reckon digital will become a byword for inauthentic.\n\nAlfred, [11.04.20 10:00]\n[In reply to midipoet]\nHow would there be a backlash when there's barely a market for it yet ?\n\nmidipoet, [11.04.20 10:01]\nNot necessarily a backlash against NFTs. A backlash against digitalism in general.\n\nAlfred, [11.04.20 10:02]\nno way ^^'\n\nRobin Rath, [11.04.20 10:08]\nYeah. I don‚Äôt see how a backlash against digitalism is even possible. How would that manifest itself? People refusing to use digital stuff to get their news, entertainment, and now more than ever even their food?\n\nRobin Rath, [11.04.20 10:09]\nNo midi music? ;)\n\nMax, [11.04.20 12:06]\nAirbnb recently launched online experiences service.. that's essentially a service selling calendar slots of experience creators, and they listed by centralized likes-based rating system. I think that in such world of remote experience, creators would get competitive benefit with decentralization at least being able to better target\n\nJeff W, [11.04.20 13:35]\nHow mucb did Tari raise from VCs?\n\nJeff W, [11.04.20 13:36]\nWill it have sufficient runway to complete everything in this new macroeconomic environment?\n\nNaveen Jain, [11.04.20 15:08]\n[In reply to Max]\nsuper interesting idea!\n\nNaveen Jain, [11.04.20 15:09]\n[In reply to Jeff W]\nthe current macroeconomic environment is concerning on all fronts. Thankfully Tari Labs is well supported.\n```\n",
    "title": "What is digital asset ownership?",
    "date": "2020-04-10T11:00:00.000Z",
    "excerpt": "On Friday the Tari community discussed the meaning of digital asset ownership, what does it mean to own something that is digital in nature. Some highlights below.  There are cases where an...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-51.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "51"
  },
  {
    "slug": "2020-03-27-tari-protocol-discussion-50",
    "content": "\nOn Friday the Tari community discussed how to bring privacy-enhancing technologies such as Monero and Tari into the mainstream. Especially in light of public mass surveillance to reduce the spread of COVID-19.\n\nPlease feel free to keep the conversation going by joining the discussion thread on [Reddit](https://www.reddit.com/r/tari/comments/fps2e2/tari_discussion_how_do_privacyenhancing/).\n\n\n### Transcript of Friday discussion\nPlease note that unlike Telegram or IRC, Reddit threads are a living document. This is a snapshot taken 19:11:37 UTC\nFriday, March 27, 2020.\n```\n[‚Äì]tarilabs[S]\nRelaying questions from Telegram: (From: Ad-Lib) (This time the discussion is on Reddit, therefore moving Telegram question to Reddit)\n\nThere‚Äôs no point building tools for businesses on top of bitcoin as bitcoin isn‚Äôt considerable to be used as transfer of value for b2b and b2c. Same about eth - whatever it does, it‚Äôs not usable for b2b and b2c because of the lack of fundamental properties. We need to have an infinite scalable and decentralized stablecoin backed with monero with value strictly balanced with basic necessities around the world. We need something fungible, fast, secure, cheap and 100% stable (compared to dollar) and we need to give it to businesses. I‚Äôd accept it today in my business. Tari will be as great as usable it will be for businesses. Monero is a great currency and I think Tari could help to bring it to businesses. Right now monero is (let‚Äôs be real) only usable for c2c and it‚Äôs already the greatest tool for that purpose. Adoption though hides in where the real deal is and the real deal is in economy where businesses using ‚Äúpotential currency‚Äù to exchange with other businesses and customers. And to bring that ‚Äúpotential currency‚Äù there, volatility and transparency has to be taken off somehow.\n\n\n[‚Äì]naveenspark\nI love the idea of a scalable, decentralized stablecoin backed by XMR. This is a future I would personally love to live in. Perhaps Tari as a protocol can be used to help bring this to life in the future. I know many businesses that would accept this flavor of stablecoin.\n\nWith regards to volatility, an interesting thing about digital assets is that each asset can have its own liquid market, and its own representative value. This may or may not have an effect on the volatility of underlying assets like XMR or Tari.\n\n[‚Äì]midipoet\nThe current debate on privacy (to me anyway) seems to centre around two key topics: data protection and digital identity.\n\nIt seems obvious that Tari might provide a mechanism for improved data protection (regardless of application or sector)\n\nHowever, i was wondering if Tari might be a platform for privacy-preserving digital identity, interoperable with the emerging identity management frameworks (which some view as somewhat lacking from a privacy perspective).\n\nIs this something that is being worked on/achievable?\n\n[‚Äì]naveenspark\nGreat question. I would personally agree that privacy-preserving digital identity has value. Others may not agree. From an implementation standpoint, I think many folks working on Tari are focused more on use cases that have the potential to create wide-scale adoption of this future underlying system. In your view, how would privacy-preserving digital identity work? I am assuming something that is fully permissioned by the user including time-based rules, granular controls on context of use etc. would be important features to consider?\n\n[‚Äì]midipoet\nIn your view, how would privacy-preserving digital identity work?\n\nThis is the million dollar question.\n\nAt the moment, the protocols are being written, standardised, and developed by a number of semi-competing entities (ID2020, DIF, Sovrin, RWOT, eIDAS, ESSIF, etc)\n\nThey all currently suggest little scope for anonymity (or at minimum user controlled pseudonymity).\n\nThe ideal solution in my view is some multi-sig solution that distributes identity de-anonymisation mechanisms across a number of entities (Government, Individual, Family, Orgs/Corps, and potentially Data Protection Commissioners) - with features built in so that revealing of identity is transparent when it happens (in the case of criminal investigation, for example).\n\nThe 'sub-identity' of an individual is then a Confidential Asset, while the 'master identity' is only revealed if necessary and when 3 of 5 (or some other variation) agree.\n\n[‚Äì]naveenspark\nI love the idea of applying multi-sig to digital identity. In a functioning government with a reasonably well functioning court system where there is an assumption of due process, one could imagine a scenario where law enforcement is procuring a warrant from a court as being a 2 of 5 in a multi-sig scenario. Who could the 3rd party be to unlock someone's master identity?\n\n[‚Äì]timee_bot\nView in your timezone:\nFriday, March 27th 14:30 UTC\n\n[‚Äì]tarinaut\nQuestion 1\nLooking back at the COVID-19 angle of the post, is there a case where undoing the privacy of all people to save more lives is worthwhile? I'm curious to see how many people agree to forfeit their location data in order reduce the spread of the pandemic.\n\nQuestion 2\nIn Westworld Season 3, there is an all knowing AI called Rehoboam. If it was possible for an AI to aid people in their lives (ex: career advice) without revealing it to the outside world, would that be acceptable? (more of an AI question not privacy)\n\nQuestion 3\nThis seems to be the reason why we need privacy coins https://twitter.com/lwsnbaker/status/1242484207051362306. TLDR:\n\nDollars are already digital. Banks have digital $ fed accts. Consumers have digital $ bank accts. Read: Digital dollar is about accounts, not dollars. Every consumer will get direct access to a Fed Account.\n\nSounds sort of bad :/\n\n[‚Äì]naveenspark\nReally good questions. I guess a perspective here is that there are middle grounds across the board. Privacy is a spectrum. Do we need absolute surveillance to achieve the goal of saving maximal lives? I don't think that's true. I think there is probably a middle ground where privacy is preserved at some level while ensuring the parties that need access to \"anonymized\" info around viral spread have it.\n\n[‚Äì]s-m-e-e-again\nQ1: would you undo the privacy of all people to save your life?\n\n[‚Äì]midipoet\nthat's a slightly disingenuous framing of the problem, though. as undoing the privacy all people, in this context, leads to saving more than one life.\n\nhttps://github.com/BDI-pathogens/covid-19_instant_tracing\n\n[‚Äì]s-m-e-e-again\nIt is still the privacy of all people\n\n[‚Äì]midipoet\ni never said it wasn't - just that your framing of the problem was disingenuous (in this context)\n\n[‚Äì]tarinaut\nI wonder if any governments have been pushing big tech companies to do this. It would be unprecedented though.\n\n[‚Äì]midipoet\nof course they have. its started already in a number of countries.\n\n[‚Äì]naveenspark\nRegarding the \"digital dollar\" proposal, I think there is a lot that needs to be fleshed out with regard to what the Fed is thinking. I personally don't have a lot of hope that it will be privacy-preserving. A story I make up is that there are many in government that fall down the law enforcement rabbit hole that privacy solely enables bad actors to do their dastardly deeds vs. preserving freedom. To me this is a foundational challenge.\n\n[‚Äì]thedictatertot\nRe: question 1‚Äôs framing: People are already forfeiting their location data, often to dozens of apps on their phones at once. It‚Äôs just a matter of optics as to how it‚Äôs presented to them.\n\n[‚Äì]naveenspark\nYes I think Moxie coined the term \"oblique surveillance\" aka surveillance by choice. We are all choosing to be surveilled 24/7 by carrying portable GPS trackers + WiFi-enabled devices in our pockets at all times. There is no way to anonymize this data. In my view, anyone who says that there is a way to accomplish this is disingenuous.\n\n[‚Äì]tarinaut\nThat's fair. In regards to u/midipoet earlier, I suppose government could just buy public data on people without having to go to big tech for location data...\n\n[‚Äì]naveenspark\nGovernments don't have to buy anything. They just have to \"ask\" for it.\n\n[‚Äì]thedictatertot\n‚ÄúIn our view, the only way for privacy-enhancing technologies to take off is if the intended user of the technology has meaningful societal and legislative influence and absolute privacy to conduct their affairs.‚Äù\n\nWhat do you mean by this?\n\n[‚Äì]naveenspark\nI'll answer by giving an example: copyright law in the US. Copyright law in the US has shifted a few times over the last century driven by the needs of large copyright owners. I am not suggesting this is a good or bad thing, I am simply stating it as fact. If large digital asset issuers require privacy to conduct their affairs, then that increases the utility of a default private digital asset system. Perhaps it makes privacy a pre-requisite vs. a nice to have. I personally can't think of a single business that owns IP that wants the world knowing about transactions involving their assets unless they can control that story. They are story owners and tellers after all.\n\n[‚Äì]rrath03\nCash is the historical private mainstream everyday medium of exchange. Would that model still apply for private cryptos, where private cryptos are good for small day to day transactions instead of large ones (where regulatory hurtles become a thing?)\n\n[‚Äì]tarinaut\nI've been thinking about the same from a regulatory standpoint, would it be easier to get private crypto acceptance by regulators if the cryptos were called \"digital cash\" and only used for small day to day transactions such as buying coffee. Coincenter has a good piece on this. https://coincenter.org/entry/the-case-for-electronic-cash\n\nI guess the downside is that this would rely on some L2 currency else you have to wait for several minutes for your coffee. Maybe it's not that bad since Tari has a 1 minute block time\n\n[‚Äì]naveenspark\nEDIT: As always, only speaking for myself here. I am not a lawyer or a regulator. I am a human on the internet with no credentials of any kind. All of that being said, as far as I understand it there are many types of transactions that have many different types of treatments by regulators. Someone can wire someone else $1MM USD with no pre-approval or authorization by a regulator. Does that transaction need to be reported in some fashion in the future? Yes, it does. And that is where I think there is an interesting debate. What exactly is wrong with a disclosure-based universe vs. one where every single transaction is automatically surveilled? Yes there will be people who fail to disclose. That is the case no matter what. Will some of those people run away without facing consequences for failing to disclose. Yes. But will we all be freer and treated more equally as a result? yes. To me thats worth the cost of some folks failing to disclose and therefore breaking some law of the land.\n\n[‚Äì]tarilabs[S]\nWhat are optimal form factors or \"trojan horses\" for private cryptocurrencies or even broader privacy-preserving technologies to become more mainstream?\n\nChat apps, for now, have had the most consumer adoption. Some of these chat apps are integrating crypto. Right now you can send XLM on Keybase, albeit it is not private.\nThere are blockchain storage apps like Sia's skynet\nWhat are other vehicles of privacy transmission?\n\n[‚Äì]tarinaut\nTBH I always am a big fan of private cryptos x chat. I saw mobile coin and I immediately thoughts of buying something anonymously on a chat app, then wondered about actual delivery if it's a physical good...\nPerhaps markets could be explored. If haven / Openbazaar supported private cryptos that would be great. Though there still is a shipping issue if it's a physical item.\nPrivate DeFi? idk how many people actually are interested in DeFi though\n```\n",
    "title": "Making Privacy Tech Mainstream",
    "date": "2020-03-27T11:00:00.000Z",
    "excerpt": "On Friday the Tari community discussed how to bring privacy-enhancing technologies such as Monero and Tari into the mainstream. Especially in light of public mass surveillance to reduce the spread of...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-50.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "50"
  },
  {
    "slug": "2020-03-20-tari-protocol-discussion-49",
    "content": "\nOn Friday the Tari community discussed potential use cases of the Tari blockchain. Below are a few questions from today‚Äôs discussion along with a complete transcript further below.\n\n* What unique functionality does Tari grant digital asset issuers?\n* Why will Monero miners merge mine with Tari?\n* How will the protocol scale as there are more digital assets issued on Tari?\n* What is the transaction throughput of Tari?\n\nPlease feel free to keep the conversation going by joining the Tari [Telegram](https://t.me/tariproject) or #Tari on Freenode.\n\n\n### Transcript of Friday discussion\n```\n10:30\nüëâTari Use Case Discussionüëà\nThings to ponder the next 30 minutes until 1600 UTC\n* There seems to be an endless list of blockchains with digital asset functionality. What is the proper mental model to evaluate these protocols?\n* What are Tari‚Äôs potential strengths and how does this translate to potential use cases?\n* What are Tari‚Äôs potential weaknesses and how does this affect potential use cases?\n10:48\nHenrik\nam i right assuming that tari is like ravencoin but private?\n10:53\nNaveen Jain\nI dont really follow ravencoin. The way I think about Tari is that its a DA focused protocol that is default private, and is attemping to make tradeoffs that support DA issuers in many ways they want to be supported\n10:53\nnot sure if that is the stance for ravencoin or other projects, but thats the headspace I personally am in with regards to thinking about Tari\n10:54\nNyzoshi Sun\nWhen main net ?\n10:55\nNaveen Jain\nwhen chicken or egg? testnet has to come first. And as always the answer for anything is \"soon\"\n10:55\nthe good news is you can follow along with progress on the project repos\n10:55\nCryptoNT\nYou dont think tari claiming to \"inherit moneros security\" is a bit disingenuous?\n10:56\nNaveen Jain\nis it disingenuous? It only inherits XMR security if XMR miners and pools decide it should\n10:56\notherwise it has no security\n10:56\nand it flops around like a fish\n10:56\nCryptoNT\nThen it's a false assumption lol\n10:56\nBTC Lovera\nGood point\n10:56\nNaveen Jain\nI dont think its a false assumption. The hope is that XMR miners and pools will want something like Tari around\n10:57\nCryptoNT\nIts like namecoin saying it inherits bitcoins security\n10:57\nNaveen Jain\nif thats not true, well then its certainly not going to be secure\n10:57\nCryptoNT\nIt's simply wrong lol\n10:57\nNaveen Jain\n:)\n10:57\nperhaps it could be framed better, thats good feedback\n10:57\nthe intent is simply this: if XMR folks like this thing, cool. If not, then its not going to get very far\n10:58\nCryptoNT\nUnless merge mining is enforced in monero protocol then it will never be as secure\n10:58\nŸà–Æ ‚óã‰∏â üêôÔºº(‚Çë‚ÇÇÃë·èà‚ÜÇÕ© ‚ÇÇÃë‚Çë)\nsecurity meaning what exactly? i think you do get network security automagically from merge mining but maybe im missing something\n10:59\nNaveen Jain\nsure, but from an alignment standpoint, merge mining doesnt cost miners much, and they get paid for it in Tari\n10:59\nCryptoNT\nHow ever you frame it its wrong I'm afraid\n10:59\nEven economically\n10:59\nThere is no peg\n10:59\nNaveen Jain\nno there is no peg. Its up to XMR folks to decide to do it or not.\n11:00\nOscar Pacey\nI'm only familiar with the basics of Tari (MW for DA), and love that idea. I have helped quite a few companies build schemes for issued assets onto blockchains and they are always a fairly shoddy set of tradeoffs.\n\nIssuers usual requirements:\n- High tx througput\n- Privacy for all\n- (...except between them and all particpants!)\n- Would rather not have to pay tx fee in chains native asset\n\nMW enables a tiny footprint (scale) & pretty good privacy,. Can it remain a public chain and support high throughput though? Most corporate token features are quite basic (expiry date etc)\n11:00\nŸà–Æ ‚óã‰∏â üêôÔºº(‚Çë‚ÇÇÃë·èà‚ÜÇÕ© ‚ÇÇÃë‚Çë)\na peg to what? exchange rate to xmr or fiat\n11:00\nCryptoNT\nThen it's basically like namecoin crossed with raven. It's not technically even a sidechain\n11:01\nNaveen Jain\nwell, I think there are some other interesting elements here too\n11:02\nultimately what is the goal. The goal is to make a default private financial system a mainstream thing\n11:02\nand to hopefully make XMR the flagship economic unit of that financial system\n11:02\nCryptoNT\nI've heard that somewhere before from someone who once was part of bitcoin lol\n11:03\nNaveen Jain\nat the end of the day, this group of folks thats working on this project is attemping to achieve a particular goal. There is no guarantee of success with that goal\n11:03\nif the goal has merit to you, great. If not, thats understandable too\n11:03\nCryptoNT\nJust pointing out it mirrors alot of what has come before like even ethereum\n11:04\nJason van den Berg\nThe asset issuing will be on the second layer, so MW itself doesn't require such high throughput\n11:04\nOscar Pacey\nIs Tari planed to have some kind of scriptless script based LN network on top?\n11:04\nlsquared\nIt's a shoddy set of trade offs if everything is constrained to one chain. The base chain should be highly secure, whereas you can build a layer 2 on top that is fast and scalable\n11:04\nYevhenii Kurtov\nhow much Rust and cryptography it will be required to know to program against Tari?\n11:05\nsw\nNot rust per say\n11:05\nNaveen Jain\nsure, no one said that this project is \"revolutionary.\" What I think is important here is like in all cases, trust has to be earned. Hopefully this becomes a project worthy of trust\n11:05\nI am well aware that many projects are not worthy of trust.\n11:05\nlsquared\nConceptually similar to that, we're writing a paper on this and it is currently undergoing external review. Once it is a better state we will share it.\n11:05\nPhilip\nThe whole back backend code base is written in Rust so will need to know it to contribute but the cryptography is fairly well abstracted\n11:05\nsw\nAs long as your program cab speak the protocol it should be compatible\n11:05\nOscar Pacey\nGreat.\n11:06\nJason van den Berg\nWe're hoping to have wrapper libraries for a lot of languages. Currently we have Swift and Kotlin, if either of those are what you're interested in\n11:06\nRiccardo Spagni\nno\n11:07\nyou can't attack Tari's security without attacking Monero first\n11:07\nthat's an inheritence\n11:07\nTariIRCBouncer\n[irc] <jwinterm> if most miners simply choose to ignore tari, then that isn't necessarily true, is it?\n11:07\n[irc] <jwinterm> if it has 1% of monero hashrate, you can attack tari without attacking monero, no?\n11:08\nRiccardo Spagni\nwhy would miners ignore free money?\n11:08\nTariIRCBouncer\n[irc] <jwinterm> there's lots of merge mined sha256 or scrypt coins with miniscule fractions of their parent coin\n11:08\nsw\nAnd Tari has more than one pow\n11:08\nRiccardo Spagni\nyes but that's hardly comparable\n11:08\nthis isn't Scamcoin #7\n11:09\nCryptoNT\nThis makes zero sense fluffy. You'll have to explain why\n11:09\nOscar Pacey\nas i understand Merge Mining, it becomes secure once miners start depending on the extra income. Until their expenditure requires the income from the merged chain it they are not comitted to the chain.\n11:10\nRiccardo Spagni\nmost miners dgiaf and will do whatever the pool does\n11:10\nNaveen Jain\nThe insights that I think are interesting here are as follows:\n1. DA issuers actually need privacy in order to run successful businesses. Having competitors surveil transactions involving your assets is a non starter. This creates an opportunity to align interest between DA issuers and default privacy as an overall mission critical feature.\n2. There are many kind of DAs that people are deeply passionate about. In an ideal world, if those DAs are issued on Tari, then people are inherently using privacy preserving software\n3. There are a number of interesting business problems that issuing DAs on Tari can solve for DA issuers. Opportunities for new revenue, and opportunities to create better digital products for consumers that provide a real sense of ownership\n11:10\nOscar Pacey\ndgiaf?\n11:10\nCayle\nRust is pretty cool, you should check it out; but that aside, there are already C bindings for a lot of the base layer functionality ‚Äî with a particular emphasis on wallets. So if you like python, node.js, Java etc., you can code in those languages and make use of the Tari APIs. You‚Äôll need to write some wrappers, obviously, and those would be welcome additions to the code base. So far we‚Äôve used these bindings to build the Android and iOS wallet apps.\n11:11\nIn terms of cryptography, there are some good primers onn tlu.tarilabs.com\n11:11\nRiccardo Spagni\nBitcoin and Monero work, not because miners are ideological, but because they're capitalists - merge-mining *when it's a project that actually provides value* takes advantage of the same characteristics\n11:11\ndon't go into a furnace\n11:11\nlsquared\nWhen it comes to digital asset issuers, we want them to be first class citizens. They are afraid of losing control when they issue their IP onto permissionless networks. But they don't have to feel this way, features such as versioning of assets, expiry dates, etc allow them to still have control of their \"public assets\"\n11:11\nRiccardo Spagni\ndoughnuts greatly indicate a flex\n11:12\nOscar Pacey\nmakes sense. Good way to design.\n11:12\nŸà–Æ ‚óã‰∏â üêôÔºº(‚Çë‚ÇÇÃë·èà‚ÜÇÕ© ‚ÇÇÃë‚Çë)\nhow long will this discussion go on for? i have a question about use cases but need to hop on a call soon\n11:12\nRiccardo Spagni\nthe discussion may end, but the Telegram goes on forever\n11:12\nNaveen Jain\nthis discussion is like the never ending story minus the flying dog\n11:12\nTal\nLet‚Äôs hear it\n11:13\nRiccardo Spagni\nand minus the dying horse\n11:13\nNaveen Jain\nhahaha\n11:13\nTal\nBut that‚Äôs the best part. Don‚Äôt leave him out\n11:13\nRyan O'Connor\nüòÇ\n11:13\nRiccardo Spagni\nRIP Atreyu\n11:13\nArtax I mean\n11:13\nJason van den Berg\nspoiler alert, he comes back\n11:14\nMike M\nI always make that mistake as well\n11:14\nRyan O'Connor\nwhy not throw your question to the group and we'll keep the reply on this thread.\n11:14\nYevhenii Kurtov\nI would love to! Tried 3 times already - manual memory management is what sets me off. I really do love to stay on a higher level of abstractions and think more about meat-space problems.\nThus having an external interface would be of a great help‚Ä¶ or it can be a chance to get into Rust for real :)\n11:14\nŸà–Æ ‚óã‰∏â üêôÔºº(‚Çë‚ÇÇÃë·èà‚ÜÇÕ© ‚ÇÇÃë‚Çë)\nis tari more like colored coins on monero or is it more like counterparty with some simple functionality built in around named/unnamed assets\nfor some reason i associate tari with like ticketing and more corporate use cases vs the \"\"nft\"\" market over in eth-land where it's about digital art, artist remuneration and provenance\n11:15\nRiccardo Spagni\nmore like Counterparty\n11:15\nNaveen Jain\ncorporate use cases. Well, its more about use cases where there appear to be large pools of existing users\n11:15\nRiccardo Spagni\nwe've considered doing coloured coins on Monero, but that adds metadata to a transaction that makes it hard to create indistinguishable transactions that all look the same\n11:15\nso bad for Monero's privacy\n11:16\nalso storing every asset tx on the blockchain is just dumb\n11:16\nthat sort of idiotic thinking belongs with Craig Wright and the BSV morons\n11:16\nNaveen Jain\nTicketing is a use case with lots of users. So is digital collectibles, and gaming assets\n11:17\nbut if someone wants to use Tari to issue digital art like folks are doing on ETH, thats cool too\n11:18\nlsquared\nSome interesting requirements of ticketing:\n* high throughput\n* Privacy of purchaser\n* tradable\n* original asset issuers want a percentage of trade value\n11:18\nŸà–Æ ‚óã‰∏â üêôÔºº(‚Çë‚ÇÇÃë·èà‚ÜÇÕ© ‚ÇÇÃë‚Çë)\none of the hot topics right now in that space is forced artist royalties for re-sales of [whatever]. not something i'm a fan of, but is that level of control possible for an asset on tari\n11:18\nyea, the % of trade value is exactly it\n11:19\nNaveen Jain\nyes thats an interesting idea for sure. Allowing digital asset issuers to set rulesets around assets including economic oriented rules\n11:19\nthats the kind of thing that from the conversations Tari Labs folks have been having, DA issuers seem excited about\n11:20\nTal\nTell us more about your dream external interface\n11:21\nCryptoNT\nAs much as I'm a fan of merge mining. In reality the incentives never align in this way. Just look at namecoin as I say\n11:21\nNaveen Jain\nthat rhymed\n11:21\nlsquared\nWhat would you suggest as an alternative?\n11:21\nNaveen Jain\nüòú\n11:21\nRiccardo Spagni\nNMC is - again - a terrible comparison due to its incredibly limited ecosystem value compared to Tari\n11:22\nit also hasn't really progressed much in 8 years\n11:22\nCryptoNT\nIf we had a perfect alternative we wouldn't use proof of work\n11:22\nTariIRCBouncer\n[irc] <jwinterm> which merge mined coin would you point to as \"having value\"? only le doge?\n11:22\nRiccardo Spagni\nENS has made more strides than NMC, sadly\n11:22\nYevhenii Kurtov\n@talmahaj I can tell about use case that I‚Äôm thinking about but hardly about an interface yet. From my experience with Monero it would be definitely great to have endpoints for batch operations to avoid IO penalty when rotating wallet keys for example\n11:22\nRiccardo Spagni\nyes - Doge is a great example\n11:22\nhttps://bitinfocharts.com/comparison/hashrate-ltc-doge.html\n11:23\nCryptoNT\nNoone cares about \"utilities\" they care about number go up lol. In the case of monero they care it has good privacy as money\n11:23\nTal\nWhy not a fan? I guess it depends on the use case for sure. Seems to make sense if someone buys your $100 ticket and then turns around and resells it for $2000 you should benefit from that demand as an artist\n11:23\nCryptoNT\nNamecoin hashrate isn't even all mergemined\n11:23\nRiccardo Spagni\nprecisely my point\n11:23\nCryptoNT\nSome of it was used against bcash sv\n11:23\nRiccardo Spagni\nbecause number stopped going up, due to a lack of progress, which made it disinteresting\n11:24\nCryptoNT\nNamecoin still has utility and people still work on it with number go down. Miners are no different to traders\n11:24\nThey dont care wtf any coin does\n11:24\nNaveen Jain\npeople care about what ever they care about. I care about how the hell do we get mainstream people to care about privacy. History shows us that they will choose convenience over privacy every time. Tari DAs are intended to get more mainstream people engaged with default private economic infrastructure with a path to getting them into the XMR ecosystem.\n11:25\nRiccardo Spagni\nwell now you're arguing *for* merge-mining lol\n11:25\npick a lane\n11:25\nTal\nWhat‚Äôs the use case?\n\n@loopster will talk to you all about those endpoints if he‚Äôs still around...\n11:26\nCryptoNT\nIt's the same thing mergemining ideally should be enforced on monero for it to actually be considered secure as monero\n11:26\nTariIRCBouncer\n[irc] <jwinterm> Not sure if this is really a strength or weakness, but tari is essentially a corporate blockchain, right? So is the corporation hoping to make money by selling consulting services, dev tax on block reward, something else?\n11:26\n[irc] <jwinterm> also, do you think that perception of being a corporate blockchain will make it difficult to attract enthusiast developers and users?\n11:26\nCayle\nThat sounded very much like a super power-user use case than a Mike-on-the-street use case\n11:27\nRiccardo Spagni\nehhhh I don't know if I agree - Dogecoin isn't enforced on Litecoin, but the majority of the hashrate merge-mines it\n11:27\nCryptoNT\nMemes are a powerful thing I guess lol\n11:27\nRiccardo Spagni\nI wouldn't say it is per se - but you're right in that there's a company that provides support for it, and we haven't figured out how to monetise it yet, lots of options on the table\n11:28\nthe idea is not for that company to necessarily exist forever, tho\n11:28\nMike M\n0_o\n11:28\nNaveen Jain\nA corporate blockchain. Well. All the software is open source, so if at anytime anyone doesnt like whats happening, they can fork off. If the project is successful in getting popular DAs issued on Tari, and is successful in expanding awareness and usage of XMR, then many folks will probably want to contribute to it\n11:29\nYevhenii Kurtov\nI definetely won‚Äôt mind to make my income on consulting around Tari üòçüòÑ üé©\n11:29\nTariIRCBouncer\n[irc] <jwinterm> rootstock is doing pretty decent actually, 48% of btc hashrate\n11:30\n[irc] <jwinterm> sparkslice, fair enough, but presumably the corporation controls the github repos, probably branding intellectual property, etc.\n11:30\nNaveen Jain\nOver time hopefully there will be lots of opportunities for folks to contribute and earn a living around a Tari ecosystem. That would be an incredible outcome\n11:31\nCayle\n+1\n11:31\nC.Lee Taylor\n+1\n11:31\nDan Teree\nNo shame in that outcome !\n11:31\nŸà–Æ ‚óã‰∏â üêôÔºº(‚Çë‚ÇÇÃë·èà‚ÜÇÕ© ‚ÇÇÃë‚Çë)\nyea it depends on use case, it's all very silly to me to sell receipts containing links to images on a server somewhere but if the metaphor is supposed to be bridging digital and physical \"asset\" ownership: once i own a painting i can do whatever i want with it, enforcing a middleman on every transaction is lame and what if i want to gift an asset will i be charged the royalty there? if not then a 3rd party arrangement can be made to \"gift\" but sell elsewhere (both parties will be economically incentivized to do so)\n11:32\nRiccardo Spagni\nI've made the same argument, but Stubhub takes a bunch for secondary sales and people don't complain about that, so it varies from use-case to use-case\n11:33\nNaveen Jain\nFair points. As Ric said, its not necessarily the intent for legal entity to exist forever. It is definitely difficult to get a project like this off the launchpad. Ultimately trust is earned over time. The Tari Labs groups goal is to earn trust, and contribute in meaningful ways to the Tari and XMR ecosystems\n11:33\nCayle\nI mean the mission is that i) asset issuers find it really easy (much easier than writing Simplicity contracts for example) to issue assets on Tari, b) developers contribute and add to the types of assets that Tari supports, and iii) users find working and using the assets natural and adds value to their lives.\n11:35\nNaveen Jain\noh and I forgot to mention: and to have fun while doing it :)\n11:35\nCayle\nI realise that I‚Äôm a slow typer and that this comment seems out of place in the conversation flow right now üò± Mentally push it up a page or two :)\n11:36\nTariIRCBouncer\n[irc] <jwinterm> well, you guys certainly seem to have assembled a large team to launch something with no clear path to monetization and with the potential end goal of dissolution of corporate entity\n11:36\nNaveen Jain\nCayle is transitioning to a dvorak so he is pecking away\n11:36\nTariIRCBouncer\n[irc] <jwinterm> bold strategy cotton, let's see how it works out\n11:37\nNaveen Jain\nyes its a large team building a path to nowhere :)\n11:37\nTariIRCBouncer\n[irc] <fluffypony> send Cayle back to typing school\n11:37\nTal\nCalling it a flow seems overly generous. You‚Äôre fine.\n11:37\nNaveen Jain\nthats exactly whats happening!\n11:37\n:P\n11:37\nCayle\n> Cayle is transitioning‚Ä¶\nImportant to read the whole sentence\n11:37\nNaveen Jain\nLOL\n11:38\nTal\n\n11:38\nClearly he didn‚Äôt have Mavis to teach him American-style keyboarding like us 90s kids did\n11:39\nTariIRCBouncer\n[irc] <fluffypony> oh man I remember Mavis Teaches Typing\n11:40\n[irc] <fluffypony> I used to do that straight after playing Where in the World is Carmen Sandiego\n11:40\n[irc] <jwinterm> I too am only where I am today because of Sir Beacon\n11:40\nNaveen Jain\njwinterm: if the outcome of this project is that a LOT more people are using a default private financial system, and there is more awareness of XMR then its a success\n11:40\nTal\nAnd right before dying of dysentery in Oregon Trail\n11:40\nTariIRCBouncer\n[irc] <jwinterm> Madam Beacon?\n11:40\n[irc] <fluffypony> LOL\n11:41\nCayle\nSir Francis Beacon?\n11:42\nMake no mistake, it‚Äôs a super-ambitious project.\n11:42\nTal\nBeacon is a higher being unfettered by social constructs like gender\n11:43\nTariIRCBouncer\n[irc] <jwinterm> ;p\n11:43\nTal\nüòÇ\n11:43\nOscar Pacey\nWhats your view on likely throughput of TXs on mainnet?\n11:43\nTariIRCBouncer\n[irc] <havik> <-sparkslice. one cool idea that has been floating around is this idea of how digital asset issuers monetize affinity. Right now they monetize affinity through selling widgets\n11:43\nOscar Pacey\nCTs are pretty phat\n11:43\nTariIRCBouncer\n[irc] <havik> 239472394729473924729743 tx/s\n11:43\nTal\nCan you give an example\n11:43\nTariIRCBouncer\n[irc] <jwinterm> what is the expected blockchain growth dynamics or projections for the wildly successful case where tari baselayer becomes vehicle for company that overtakes ticketmaster?\n11:44\n[irc] <jwinterm> does it end up being terabytes per month or something?\n11:44\nCayle\nThe mainnet layer will handle 10s of tx/s. Scaling happens on the digital asset layer\n11:44\nTariIRCBouncer\n[irc] <havik> But imagine if they could earn a rake from existing DAs issued. And because the system is permission less, others can accept those DAs within their own ecosystems. In other words the DA becomes more valuable because its overall utility increases\n11:44\nOscar Pacey\nOkay, thanks.\n11:46\nTariIRCBouncer\n[irc] <havik> no the base layer is for check pointing DA transactions that occur on a second layer. The base layer won't require petabytes of storage\n11:46\n[irc] <havik> in a world where there are billions of transactions\n11:47\nsw\nThat will be gb of storage\n11:47\nlsquared\nUnless everyone decides to increase the block size :p\n11:47\nTariIRCBouncer\n[irc] <jwinterm> ic\n11:47\nsw\nSecond layer will be per accept and that could be peta per asset\n11:48\nCayle\nFFWD to the Tari blocksize wars of 2024\n11:49\nlsquared\nTari Unlimited!!\n11:50\nAlso the base layer has a concept of cut-through (kind of like pruning) where the blockchain is able to be compressed\n11:50\nWe have have done some modeling on on Tari's blockchain size given had the same number of UTXOs as BTC (as of last month)\n11:50\nŸà–Æ ‚óã‰∏â üêôÔºº(‚Çë‚ÇÇÃë·èà‚ÜÇÕ© ‚ÇÇÃë‚Çë)\nwondering about the gaming assets use-case, how variable can the privacy controls be? one of the fun things from back in the days of tf2 trading was you could see anyone's inventory if they hadn't made it private. would something like a public inventory per asset class tied to your in-game account even be possible on layer 2, don't see how if it is MW\n11:52\nlsquared\nPruning reduces chain state by a factor of 5 which is nice. (Using BTC assumptions on the number of inputs/tx + utxos/tx\n11:53\nYevhenii Kurtov\nI‚Äôm working in betting and now we can see that virtual competitions are expected to increase their market share in coming years. Business would like to be able to operate even when athletes are not on the field.\nHence I‚Äôm thinking if there would be an opportunity for a Fantasy League manager app where users will be able to control their assets.\n11:53\nTariIRCBouncer\n[irc] <havik> @lessless that sounds like a really cool use case\n11:54\nYevhenii Kurtov\nLike build your team, compete against other teams, trade players, coaches etc. And betting can be piggybacked on top of that\n11:54\nTariIRCBouncer\n[irc] <havik> @pussinboots DA issuers are using templates to define the nature of their DAs issued on a second layer that lives on top of the Tari base layer. MW only applies to the base layer\n11:54\nCayle\nDefinitely\n11:54\nYevhenii Kurtov\nhavik, it will be hard to enter the market hehe, the business model should be really stellar to make it possible to profit\n11:55\nTariIRCBouncer\n[irc] <havik> yes agreed, the business model stuff is challenging. There are many ideas floating around about how to create new avenues for revenue around DAs issued on something like Tari. And how to cut out intermediaries that sit between users and issuers\n12:00\nTal\nFantasy apps print money too, so that totally makes sense. Great idea\n12:00\nTariIRCBouncer\n[irc] <havik> a general question: what themes are folks thinking about with regards to a new post C19 world? Ex: does commercial real estate perform as well going forward once everyone optimizes how they work from home?\n12:01\n[irc] <havik> Obviously anything that is connected to improving how people communicate in isolation is catching fire\n12:01\n[irc] <havik> what other themes are people seeing?\n12:01\nYevhenii Kurtov\nold-skool business models are ripe for disrutption. the industry is just waiting for someone to properly leverage network effect and knock down centralized models where punters are playing against bookie instead of playing against each other\n12:01\nG C\nand cutting out the middle man\n12:01\nTariIRCBouncer\n[irc] <havik> yes that speaks to cutting out intermediaries. Tari will be really good for that\n12:01\nOscar Pacey\nre: Scalability (as discused above). MW is pretty good at staying lean - one of its strengths. The chain can shrink in size over time. Its more akin to a UTXO Set or State than a ledger as the old records can eventually (often) be cut out entirely. Despite that, its the bandwidth which is the ultimate contraint, like in all chains. PAssing millions of hefty CTs around which take time to broadcast and process will contrain it.\n12:02\nTal\nYeah, video chat is def having its moment. All the headlines are ‚Äúbuy zoom stock gogogogo‚Äù\n12:02\nTariIRCBouncer\n[irc] <havik> yes but individual DA transactions are not intended to hit the underlying MW chain\n12:02\nŸà–Æ ‚óã‰∏â üêôÔºº(‚Çë‚ÇÇÃë·èà‚ÜÇÕ© ‚ÇÇÃë‚Çë)\nhavik: got it, thnx. maybe it should be called layer 2.5 so i dont conflate the two üòÖ\n12:03\nTariIRCBouncer\n[irc] <havik> haha yes exactly\n12:03\nOscar Pacey\nThats wha I was gathering. So each asset has its own isolated 'zone' as some kind o high layer protocol, which gets settled to the chain, is that right?\n12:04\nTariIRCBouncer\n[irc] <havik> something like that. There is this idea of validator node committees that are responsible managing the state and enforcing rulesets around individual DAs. Someone who is thinking about that more can provide more details\n12:04\nŸà–Æ ‚óã‰∏â üêôÔºº(‚Çë‚ÇÇÃë·èà‚ÜÇÕ© ‚ÇÇÃë‚Çë)\ni am closely following the hype around virtual worlds/meetups. the advantages are obvious but participation is low and open-source solutions cannot handle anything at scale atm\n12:04\nTariIRCBouncer\n[irc] <havik> but that's an idea that's floating around\n12:04\nRobin Rath\nBlue apron was hot for like 2 seconds. Tele-health. Tele-education and tele-entertainment with efficacy is huge for kids. Parents will struggle with kids at home during the work day.\n12:05\nOscar Pacey\nokay, thanks. No need to eplxain to me in detail now.\n12:05\nTariIRCBouncer\n[irc] <havik> right because the experience is still sub par. There is no ready player one world yet\n12:05\n[irc] <jwinterm> robinrath, fucking tell me about it\n12:05\nŸà–Æ ‚óã‰∏â üêôÔºº(‚Çë‚ÇÇÃë·èà‚ÜÇÕ© ‚ÇÇÃë‚Çë)\nthe metaverse is already here we just can't see it yet\n12:05\nTal\nMakers and open source hardware folks are having their moment too.\n\nThe supply chain disaster that‚Äôs already leading to PPE (personal protective equipment) shortages on the front lines at hospitals is contrasted by the willing and able army of makers armed with 3D printers ready to spit out 10,000 valves at the ready. Who don‚Äôt care about the legal repercussions. We‚Äôll be hearing a lot about Good Samaritan laws as the supply chain tries to litigate.\n12:06\nlsquared\nI wonder how well blue Apron is doing right now during the Covid-19 Era\n12:06\nRobin Rath\nDisney will probably enter the EDU market, lol\n12:07\nTal\nYeah I‚Äôve seen a ton of virtual conferences pop up too. Anyone doing it well that you‚Äôve seen?\n12:07\nTariIRCBouncer\n[irc] <havik> we are all living in the matrix obviously\n12:07\n[irc] <havik> :)\n12:08\n[irc] <havik> the most successful thing of late is marshmallow \"performing\" in fortnite\n12:08\n[irc] <havik> I mean pushing the play button. I mean performing\n12:08\nRobin Rath\nI also see a shift in value in general, if this happened to us when we were 10-15 years old it would def have an impact on what we spend our money on long term. Our grandparents saying \"I remember the depression...\" certainly carries way more meaning now.\n12:08\nTariIRCBouncer\n[irc] <havik> :P\n12:08\n[irc] <jwinterm> what is the \"other\" PoW?\n12:08\n[irc] <jwinterm> doesn't seem to be mentioned in RFC-0001\n12:09\nTal\nOh for sure, they‚Äôd be dumb not to\n12:09\nTariIRCBouncer\n[irc] <havik> @opacey check this out for more ideas re: how the second layer bit might work: https://rfc.tari.com/RFC-0300_DAN.html\n12:10\n[irc] <havik> I dont think there is any other PoW contemplated at this time other then merge mining with XMR\n12:10\nOscar Pacey\nThanks!\n12:11\nŸà–Æ ‚óã‰∏â üêôÔºº(‚Çë‚ÇÇÃë·èà‚ÜÇÕ© ‚ÇÇÃë‚Çë)\nvirtual market (Vket), comiket may even be forced to be a part of it this year\n12:11\nTariIRCBouncer\n[irc] <jwinterm> <tar1b0t> [telegram] <Blackwolfsa> And we have more than one pow\n12:11\n[irc] <jwinterm> so that was just misinfo?\n12:11\n[irc] <jwinterm> I thought it was fluffypony that said that\n12:12\n[irc] <fluffypony> mainnet isn't out\n12:12\n[irc] <fluffypony> so nothing's been decided\n12:12\n[irc] <fluffypony> FWIW I'm against another PoW\n12:12\n[irc] <fluffypony> but I was also against the Monero community not committing to a SHA3 implementation date\n12:12\n[irc] <fluffypony> can't always have what we want :-P\n12:13\n[irc] <jwinterm> got it, sha3 is the other PoW\n12:13\n[irc] <havik> yes fluffy you can. In the meta verse, anything is possible.\n12:13\n[irc] <havik> :P\n12:13\nTal\nYeah, if this happened back then I‚Äôd now have a luxury eco-friendly artisanal underground doomsday bunker and vegetable garden instead of ~82 pairs of shoes I don‚Äôt wear\n12:14\nTariIRCBouncer\n[irc] <fluffypony> jwinterm: I wish\n12:14\nOscar Pacey\nOkay I get it. Anyone can run a DA Validator, choose their Validator Peers ( a bit like Ripple/stellar), and between them run the asset (constructed in the form of a preset template), run txs through channels (I guess) and then settle at some point.\n12:14\nTal\nSomeone would have a startup to buy and sell spots in doomsday bunkers. They can build it on Tari so bunker builders get a cut on resale obvi.\n12:15\nTariIRCBouncer\n[irc] <havik> yap and then transactions are settled on base layer\n12:15\n[irc] <havik> err check pointed\n12:15\nOscar Pacey\nokay thats v helpful. Thanks\n12:15\nchekpointed?\n12:15\nAre the DANs an actaul blockchain?\n12:15\ncheckpointing (attesting?) block hashes onto mainnet?\n12:15\nTariIRCBouncer\n[irc] <havik> if you have feedback on any of the RFCs please feel free to let folks know\n12:16\n[irc] <havik> this is all ideation phase stuff\n12:16\nPhilip\nyes, second layer states will periodically be commited to on the base layer for immutability\n12:16\nOscar Pacey\naaah i see\n12:17\nso swapping assets might be a bit convulted would it? Essentially cross chain atomic swaps?\n12:17\nEthereum (monolitic architecture) at least has the advantgae that you can trade asset for asset, atomically, in a single TX.\n12:18\nPhilip\ncorrect, it will have to be an atomic swap between the two asset committees who wil each have to validate it\n12:19\nsw\nYip but this way rhw base layer does not have to care at all..\n12:19\nOscar Pacey\nOkay, I guess that would be my feedback then... atomic swaps, though amazing, are a bit of a PITA becuase of the implied call option, and the coordination required. Not a serious criticism, but just something that would be nice to improve on if the opportunity arose\n12:29\nTariIRCBouncer\n[irc] <zkao> @opacey, u mean u quit the swap midway because the price changed unfavorably, for example?\n12:29\nOscar Pacey\nprecisely\n12:31\n...can be mitigated a bit using short timeout horizons.\n12:34\nTariIRCBouncer\n[irc] <zkao> what did u mean by implied call option, @opacey?\n12:35\nOscar Pacey\nyes like you said above. That one party fails to sign off their side of the swap, becuase at some point after the initation of the process they decide the price isnt good anymore.\n12:52\nTariIRCBouncer\n[irc] <zkao> @opacey, pretty convinced an atomic swap protocol can be devised using discreet log contracts, an oracle and no timelocks. but a large range of pairs of potential txs (with different exchange rates) have to be signed by the counterparties, with the third signature coming from the oracle. preagree on all potential prices, let the oracle tell the price. then eithe counterparty can publish the tx\n12:59\nOscar Pacey\nWow, nice. I'd have to think that through to form an opinion on it but I like the fancy!\n13:02\nmidipoet\nThis might be a stupid question, but does a miner have to continue to validate Monero transactions in all circumstances in order to mine Tari?\n13:02\nRiccardo Spagni\nyes\n13:02\nthey can't cheat and only mine Tari with no benefit to Monero\n13:02\nOscar Pacey\nEven me?\n13:02\nmidipoet\nCool. Thanks\n13:03\nTariIRCBouncer\n[irc] <havik> there are no dumb questions :)\n13:04\nRiccardo Spagni\nwell except for that one dumb question that was asked, but that was like 2 months ago\n13:05\nbut we don't talk about that anymore\n13:09\nNaveen Jain\nüòÇ\n13:09\nThe one I asked. Yes let‚Äôs not talk about that\n13:49\nmidipoet\nHas the Tari emission schedule been finalised?\n13:51\nTariIRCBouncer\n[irc] <havik> no not yet\n15:04\nAd-Lib\nThere‚Äôs two kinds of monero miners - the ones mining it to get monero and the ones mining it to get bitcoin or dollars. I can‚Äôt represent the mining farms doing it as a business, but it‚Äôs quite obvious they‚Äôre going to mine whatever is profitable, so Tari should be welcome for them. I‚Äôm quite for some time supporting monero miners in @xmrmine channel and I can confirm that Tari is well awaited by monero mining community as well.\n15:06\nThere isn‚Äôt consequence about it in Tari community\n15:14\nAd-Lib\nPhilip 17.02.2020 06:23:24\nSo even if Tari PoW was only using the merge mined RandomX algorithm a miner is not forced to attempt to construct valid Monero blocks. The Tari Base nodes do not validate the Monero block at all. So hypothetically a Tari-only miner could ignore Monero if they wanted to but we are banking on them putting in the effort to construct a valid Monero block for the chance that they earn some Monero for their mining effort. The second PoW algorithm shouldn't impact that behaviour. An assumption you are making is that all Monero miners will want to merge mine because they will get Tari for their efforts but it is a non-trivial effort to integrate merge mining into their pool software so it is quite likely that only a portion of the Monero mining community will also mine Tari and we want to mitigate the risk that in that subset there will be a single large player that could have the opportunity to attack Tari\n15:24\nDavid Burkett\nI asked in the dev channel, but I think I just missed everyone. How does Tari commit to the lock heights of UTXOs?\n15:24\nhttps://github.com/tari-project/tari/blob/51ac76abc054152b0e01710e28dfa418692718d2/base_layer/core/src/transactions/transaction.rs#L90\n15:24\nIt seems like that field would be malleable\n15:29\nmidipoet\nAre you saying that it is not necessary to construct a valid Monero block to obtain Tari?\n15:32\nTariIRCBouncer\n[irc] <jwinterm> midipoet, that is true of any merge-mined coin afaik\n15:32\nAd-Lib\nWell - coming from monero community, I‚Äôm saying it should be necessary to construct a valid Monero block to obtain Tari.\n15:32\nTariIRCBouncer\n[irc] <jwinterm> but it makes no sense, because why wouldn't you try to get free monero as well\n15:32\n[irc] <jwinterm> the only cost is running a monerod instance basially\n15:33\nRiccardo Spagni\nYes but you can‚Äôt have it as a block validation as that would require all Tari nodes to also be Monero nodes\n15:33\nDavid Burkett\nBut a Tari block with an invalid Monero block would quickly be reorged away\n15:34\nAd-Lib\nTari May become more interesting for miners over time\n15:34\nRiccardo Spagni\nSo yes as jwinterm points out - also bear in mind that you have to do the work for the fake Monero block, so that would be pretty pointless\n15:34\nThat too\n15:34\nMiners wouldn‚Äôt build on it as they *are* running Monero nodes\n15:36\nJohn Tromp\nthey won't monero-build on it, but they still tari-build on it\n15:36\nDavid Burkett\nYou would have to have enough hash power to continue mining faster than Monero in perpetuity to sustain it, when there's no financial gain to that, and a huge loss actually (they could've had xmrs for no real additional cost) . The game theory just does not support such a scenario.\n15:38\nEither that, or I completely misunderstand how merged mining works (it's possible, I'm dumb)\n15:46\nAd-Lib\nMaybe I‚Äôm too optimistic in Tari, but with ‚Äúfresh‚Äù emission vs tail emission mining interest will soon be on Tari side.\n15:47\nWhich means Tari will literally steal RX provided security from Monero if Tari only block validation is allowed\n15:51\nSo there‚Äôs very good vs very bad scenario for Monero\n16:42\nAd-Lib\nJust did a quick research. If we believe the average cpu gives ~ 40hs/watt on RandomX - around 25MW of power secures Monero. For comparison I took Grin which seems to be the most successful PoW project from new ones. Grin takes around 11MW right now which is almost the half of what Monero has while Grin is only worth ~ 2% of Monero‚Äôs market cap.\n16:55\nJohn Tromp\nit's not about mcap but about daily emission in $\n16:57\ngrin's is nearly 20% lower than Monero's\n17:08\nTariIRCBouncer\n[irc] <w0rlds> anyone know if/where the Tari meeting from earlier today will be posted?\n17:10\nAd-Lib\nAll I wanted to show is that new project can attract reasonable amount of mining power. I think it must be defined at the very beginning - will there be the United miners community or not to avoid future hash fights.\n17:35\nJeff W\nHow is Tari different than Beam creating Confidential Assets on top of Beam blockchain?\n17:38\nJohn Tromp\nbeam is not merge-mined with monero:)\n17:38\nbeam is not (yet) written in rust\n17:39\nbeam has mining tax\n17:39\nbeam has no tail emission\n17:45\nAd-Lib\nAbout use cases - I‚Äôd love to use it for my car wash stations and car parts shop to allow clients to collect loyalty points and use them in various ways. Like if he spends 15‚Ç¨ in shop he can wash his car for free once. Or he can wash the car with credit points and later I can write an invoice to him.\n17:47\nIt doesn‚Äôt need decentralization at all tho, but if it‚Äôs relatively easy and inexpensive to set up - it‚Äôd be cool.\n17:51\nI‚Äôd definitely evaluate some kind of rpi and arduino support for IO.\n18:55\nNaveen Jain\nA key difference is approach. Tari Labs is also working on reference design applications that will ultimately make use of the Tari protocol. For example Big Neon (www.bigneon.com). The idea here is that from the TL perspective its very difficult to design a distributed, decentralized state machine without knowing how it will be used in the real world. Hence why some members of the TL team are working on these reference design applications concurrent to the community developing the underlying protocol.\n18:55\nnow all of this is subjective so pls make up your own mind on whether this holds any water, but its another difference worth considering.\n```\n",
    "title": "Tari Use Cases",
    "date": "2020-03-20T11:00:00.000Z",
    "excerpt": "On Friday the Tari community discussed potential use cases of the Tari blockchain. Below are a few questions from today‚Äôs discussion along with a complete transcript further below.  What unique...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-49.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "49"
  },
  {
    "slug": "2019-10-15-tari-protocol-discussion-47",
    "content": "\nOn Monday, the Tari community discussed proof of work strategies.\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday discussion\n```\n18:02 <@CjS77> Hi everybody\n18:03 <simian_za> Heya\n18:03 <neonknight64> Hi\n18:04 <Blackwolfsa> Hi\n18:05 <stanimal6> Hey\n18:06 <@CjS77> I know we're having a discussion around PoW next monday, but it won't hurt to get some context out of the way now\n18:06 <@CjS77> So tl;dr, Tari's original plan was to go 100% merge mined with Monero\n18:07 <@CjS77> However, that strategy has some significant risks, particularly wrt 51% attacks.\n18:09 <Blackwolfsa> How does monero's pool devision look these days\n18:09 <@CjS77> Essentially, if you don't have the majority of the network \"on your side\"; you can be 51% attacked by the remainder of the Monero hashrate.. _with very little opportunity cost_ (because normally, a 51% attack means a miner is giving up mining rewards by not co-operating; in this case he's still getting his Monero, and is only potentially losing out\n18:09 <@CjS77>  on Tari)\n18:09 <@CjS77> I don't know -- neonknight64 might have some numbers\n18:10 <Hansie> Hi\n18:10 <@CjS77> hey Hansie\n18:10 <neonknight64> https://minexmr.com/pools.html\n18:11 <@CjS77> Hansie did some nice work on 51% attacks here: https://tlu.tarilabs.com/merged-mining/merged-mining-scene/MergedMiningIntroduction.html#51-attacks\n18:11 <simian_za> Wow that is actually a better distribution than the last time we looked at the Monero hashrate\n18:12 <neonknight64> Jip, the distribution of hashrate looks good.\n18:13 <simian_za> but either way if we don't get the buy in of the majority of those pools we will be vulnerable and that will be quite a task\n18:14 <@CjS77> It'll be very interesting to see what happens when RandomX goes live\n18:14 <Hansie> Did some digging into Myriad, which was reported on in the TLU report mentioned\n18:15 <Hansie> Myriad has 3 PoW and 2 merged mined PoW algos\n18:16 <Hansie> Seems to be very 51% resistant\n18:16 <Blackwolfsa> We need to simulate that\n18:17 <Hansie> https://yac.metalworks.tarilabs.com/uploads/c46de3c2d4837f3a/BlockExplorers.ods\n18:17 <Hansie> https://yac.metalworks.tarilabs.com/uploads/e301f69d2ec27e60/BlockExplorers.xlsm\n18:17 <simian_za> Myriad seems very interesting but the variance in blocktime is pretty extreme\n18:17 <Hansie> Depends on the value system I guess\n18:17 <Blackwolfsa> From the newest data their variance is, I agree\n18:18 <Hansie> Myriad PoW was designed to be 51% attack resistant, not necessarily with smooth block times\n18:19 <Hansie> The spreadsheet shows history of a thousand blocks\n18:20 <@CjS77> How does their algo work?\n18:20 <Hansie> Each of the 5 algos has equal probability to solve the PoW\n18:20 <Hansie> Difficulty adjusted to 5 min for each\n18:20 <Blackwolfsa> Having block times that almost 50% in the low end opens you up toe other attacks \n18:20 <Hansie> Target block rate at 1 min\n18:21 <Hansie> Any algo can build on top of the longest chain, even consecutively\n18:21 <Blackwolfsa> We need to simulate it too see if it's more stable if it's more active \n18:22 <@CjS77> Ok, so the consensus rules just accept any PoW at the requisite difficulty\n18:22 <Hansie> So with the 5 algos, any 1 pool can only achieve 20% of the efficient hash rate\n18:22 <Hansie> Yes cjs77\n18:22 <Hansie> https://cryptapus.org/myr/myrstat/\n18:23 <Hansie> See above for share of algos that solved the PoW\n18:23 <Hansie> Yes blackwolfsa, agreed\n18:24 <Hansie> We can do some studies\n18:24 <simian_za> I look forward to a parametrised sim of this approach. I suspect that it can be tuned to be far better than that data shows\n18:25 <tar1b0t_> [mattermost] <stringhandler> We need to investigate how it is affected by selfish mining\n18:25 <simian_za> indeed, I suspect it will be fine but the sim should be able to show the effect of that\n18:26 <@CjS77> So if we went for 1x merge-mined and 1x PoW (where the PoW is not necessarily ASIC resistant but is unique -- i.e. not currently available on hashnice), would could have good 51% attack resistance too? One doesn't need to have 5x algos I'd say\n18:26 <@CjS77> *nicehash*\n18:27 <Hansie> So quoted from the web: \"Myriadcoin has 5 algorithms (SHA256d, Scrypt, Skein, Qubit, and Myriad-Groestl) that can independently solve blocks. They have independent difficulties that are adjusted using the same formula. Any algorithm can solve the next block even if it is the same algorithm. Each algorithm targets the same block time and the block r\n18:27 <Hansie> ewards are the same no matter which algorithm solves the block. From Multi-vPoW: Myriadcoin's Solution to Merge-Mining https://99bitcoins.com/myriadcoin-merge-mining/\"\n18:27 <Hansie> cjs77, I think more than 2 is better\n18:28 <Blackwolfsa> But I suspect their will be a thing as too much as well\n18:30 <Hansie> Yes, one has to be practical\n18:30 <sarang> Jumping in after lurking... has anyone followed the earlier Zcash discussion where they were also investigating the use of multiple mining algorithms?\n18:30 <@CjS77> Hansie, my gut says that 1x merge mined and 2x PoW is worse than 1-1.\n18:30 <sarang> They called it \"harmony mining\" (because why not have a classy name too)\n18:30 <@CjS77> If you go for 3, you should have 2x MM and 1x PoW\n18:31 <@CjS77> Hey sarang\n18:31 <Hansie> cjs77, maybe merged mined with Monero, Bitcoin and then standalone\n18:31 <@CjS77> But do you see why I say that?\n18:32 <Hansie> Hi sarang, I did not\n18:32 <@CjS77> It's a hunch though, and not fully thought through\n18:32 <sarang> I _think_ that this is the GitHub thread I am thinking of: https://github.com/zcash/zcash/issues/3672\n18:32 <sarang> They concluded the risk of 51% was too great to adopt at the time\n18:32 <sarang> It is absolutely worth a read\n18:32 <sarang> (Daira had run some simulations as well)\n18:32 <@CjS77> Thanks Sarang. I've got to go, but I think we've set up a good platform for next week\n18:33 <Hansie> No cjs77, I do not. In essence if you have 1 GPU mining standalone, it has equal probability to solve the PoW to say a pool of Monero miners\n18:33 <Hansie> Thanks sarang, will definately look at it\n18:35 <@CjS77> If we assume merge miners don't want to leave the parent chain; and the fact that GPU PoW algos are pretty fungible, so you can grab 66% of the hashrate in a 1-2 split. Whereas in a 1-1 split, you have at most 50%.\n18:36 <@CjS77> In a 2-1 split, you have at most 33%\n18:37 <Blackwolfsa> You just have to whatch that each pow has enough pow to keep it secure... \n18:37 <Hansie> And it works the other way round as well, depending on which pools will do the mining\n18:38 <tar1b0t_> [mattermost] <simian> That'd only if the algos are run in sequence if any algo can solve a given block and the difficulty retargeting is applied correctly I don't think those assumptions are strictly correct\n18:38 <Blackwolfsa> If a pow has too little one can easily mine a few blocks in a row cheaply... \n18:39 <tar1b0t_> [mattermost] <stringhandler> The difficulty would need to be adjusted every block to stop 6 blocks being mined by the same algo\n18:39 <Hansie> See here for dangers of merged mining: https://tlu.tarilabs.com/merged-mining/merged-mining-scene/MergedMiningIntroduction.html#analysis-of-mining-power-centralization-issues\n18:40 <tar1b0t_> [mattermost] <stringhandler> You actually want consensus to be achieved only when every algo has a block\n18:40 <tar1b0t_> [mattermost] <stringhandler> So perhaps 2 * num algos\n18:42 <tar1b0t_> [mattermost] <simian> I think that if you get the difficulty adjustment right you don't need that. However we are speculating, a sim would answer a lot of these questions\n18:43 <Hansie> stringhandler I guess it depends on the strategy. Different options definitely worth looking into\n18:43 <tar1b0t_> [mattermost] <stringhandler> The thing is that if not all the algos are included then you only need to control 51% of the algos that are\n18:43 <Hansie> simian yes, I agree we need to do the simulations\n18:44 <tar1b0t_> [mattermost] <simian> But the difficulty of those algorithms will go up\n18:44 <tar1b0t_> [mattermost] <stringhandler> Just some ideas to add to the simulations\n18:44 <Hansie> stringhandler see Myriads \"Algorithm Share\" graph - link above. They have very few transactons, but it seems all 5 algos are always represented\n18:45 <tar1b0t_> [mattermost] <stringhandler>  The difficulties must go up, but they only provide a probability of finding a block\n18:45 <tar1b0t_> [mattermost] <stringhandler> But I'm saying that if you have 7 algos then 6 blocks is not enough for consensus\n18:46 <tar1b0t_> [mattermost] <stringhandler> Just my gut feeling though\n18:47 <Hansie> Ok, so you are talking about confirmation times. Makes sense\n18:47 <Blackwolfsa> I think I follow your reasoning \n18:47 <Blackwolfsa> And I tend to agree\n18:48 <Hansie> I have to run, thanks for the chat\n19:17 <moneromooo> Would someone not need 50% of the monero network to double spend on tari if it were merged mined ?\n19:18 <moneromooo> Oh, because most of the network will not care. OK. You still need the attacker to have more than the part of the monero network which merges mines (though variance is higher) AFAICT.\n19:19 <moneromooo> And therefore better than not merge mining, presumably.\n19:20 <moneromooo> I'm assuming that if someone tries to double send some tari, the part of the monero network that merge mines will reject it, the part controlled by the attacker will try to mine it, and the remainder of the monero network will ignore it.\n19:20 <moneromooo> Is that correct ?\n19:25 <tar1b0t_> [mattermost] <stringhandler> I think the remainder of the network will mine non Tari blocks, but there could be a problem where a large percentage of the miners mine valid monero blocks but alternate between 2 chains of Tari in each block\n19:25 <tar1b0t_> [mattermost] <stringhandler> Kind of hedging\n19:26 <tar1b0t_> [mattermost] <stringhandler> The same problem that PoS has. Then only the miners that choose a particular chain are contributing to the hash rate\n19:26 <tar1b0t_> [mattermost] <stringhandler> Not 100% sure though\n19:27 <moneromooo> You mean... if the \"neutral\" miners could be paid off by the attacker to mine the double spending tx ?\n19:27 <moneromooo> Effectively becoming the attacker.\n19:29 <tar1b0t_> [mattermost] <stringhandler> Thinking about it, I dont think my scenario makes financial sense\n19:29 <tar1b0t_> [mattermost] <stringhandler> Think we need cjs77 to elaborate a bit\n19:31 <tar1b0t_> [mattermost] <stringhandler> But there definitely is a case where an attacker can delay or confuse the Tari chain while still earning monero\n06:51 <Hansie> If Tari is merged mined with Monero, and only one pool is interested, Tari will be at the mercy of that pool. The hash power distribution that Monero has will not be a given for Tari.\n08:00 <tar1b0t_> [mattermost] <the_square> Hmm is it easy to merge mine multiple chains at the same time?\n08:02 <tar1b0t_> [mattermost] <the_square> Oh I guess it would be trivially easily\n08:25 <@CjS77> Not trivially easy, there's work that goes into it; and every merge mined coin needs pools to buy into it\n08:26 <@CjS77> i.e. Monero pool operators have to change their pool software to merge mine Tari\n08:26 <@CjS77> same for Bitcoin, if we choose that\n```\n",
    "title": "Proof of Work for the Tari Chain",
    "date": "2019-10-14T11:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed proof of work strategies. Join us for our next discussion on Freenode in #tari-dev. Discussion times proposed by the Tari community: Mondays: 6pm CAT (12pm...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-47.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "47"
  },
  {
    "slug": "2019-10-15-tari-protocol-discussion-48",
    "content": "\nOn Monday, the Tari community discussed proof of work strategies.\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday discussion\n```\n18:04 <Hansie> Hi there\n18:04 <@CjS77> Hi everyone\n18:05 <@CjS77> Let's wait a few more minutes for folks to check in\n18:05 <Hansie> Cool\n18:06 <@CjS77> The transcript of our previous discussion is here for anyone who needs to catch up: https://www.tari.com/2019/10/14/tari-protocol-discussion-47.html\n18:11 <@CjS77> All right, let's begin.\n18:12 <@CjS77> I think there's broad community support for a hybrid mining strategy.\n18:13 <Hansie> Agreed\n18:14 <@CjS77> What the specifics of the strategy are, are still TBD. I think a little bit of modelling on what the costs for attacking different strategies would look like are a good idea\n18:15 <Hansie> What options for strategies are there\n18:15 <Hansie> ?\n18:15 <@CjS77> It'll certainly please the folks who are constantly asking whether it'll be possible to mine \"Tari only\"\n18:16 <Hansie> True\n18:16 <@CjS77> ITO strategies, I think it just coes down to picking n merge-mined algos, and m standalone algos.\n18:17 <@CjS77> My hunch says n=2, m=1 is best.; but we may not have time to convince another non-Monero currency to adopt Tari merge mining\n18:18 <Hansie> There is also whether difficulties are adjusted independently, or alternating algos get a chance, foced blocks, etc.\n18:19 <@CjS77> Yup.\n18:21 <Hansie> Also targeted block time\n18:22 <tar1b0t_> [mattermost] <stringhandler> Will wallets have to download n extra blockchains to verify?\n18:22 <Hansie> I guess because we do not have a solution yet, it will be simpler to select the best outcome of all cost, dynamic and security analyses\n18:24 <@CjS77> But I think a simple thought experiment might kill alternate blocks in some scenarios (n=0, m>1). In an alternating block scenario, you may as well  stop mining after mining a Block on Algo A and wait for a B block to arrive; otherwise you just waste power. But let's say that it's cheap to flip between algo A and B (because they're all GPU- or CPU-\n18:24 <@CjS77> friendly). Then once an A block is found, you direct all your cycles to mining on Algo B. And so on. Each miner just flips the algo they mine on every block. So having 2 algos on alternate blocks is really just the same as having a single algo.\n18:25 <Hansie> Yes cjs77, that seems to be the overriding sentiment\n18:28 <@CjS77> So Q for the community - is there any point in supporting an Asic-based in \"standalone\" mode, like Sha256, Scrypt, or Equihash?\n18:30 <Blackwolfsa> But having two cpu/gpu bound algo sounds very dangerous, so I think we have to have one cpu/gpu combined with either a merge mine or asic\n18:31 <@CjS77> 1x Merge Mined is basically a definite  (XMR)\n18:32 <neonknight64> With time, any cpu/gpu PoW algo will end up with an asic implementation.\n18:34 <Hansie> How easy/difficult will it be to change one or more mining algos?\n18:34 <@CjS77> Hard fork\n18:34 <Hansie> So when Monero changes, does a network upgrade, it is a hard fork for Tari?\n18:34 <@CjS77> Indeed\n18:35 <Hansie> What is the sentiment w.r.t. regular network upgrades/hard forks for Tari?\n18:36 <Blackwolfsa> I am not persay against them\n18:36 <Blackwolfsa> They acn be useful if we need to change consensus rules\n18:36 <@CjS77> It depends\n18:37 <@CjS77> Contentious forks are very bad. Luckily in Monero, there haven't been many of them\n18:37 <Hansie> So if we do merged mining with say Monero and SHA256d, I guess the stable hash rate will come from SHA256d\n18:38 <Hansie> And we would only need to dove tail Monero's mining strategy\n18:39 <Blackwolfsa> Ja, hard forks kan have bad consequences.. \n18:46 <Hansie> Looking at some stats for Myriad: SHA->7,540.17 Ph/s   |    Scrypt->85.19 Th/s   |   Yescrypt->2.79 Mh/s\n18:46 <Hansie> Could not find the other 2 quickly\n18:49 <moneromooo> With a traditional merge mining scheme, you are free to mine the merged mined coin only, right ? Mining the \"parent\" is optional AFAIK, but I just have this notion from general background, not having looked at it myself.\n18:50 <Hansie> Yes, that is how I understand it as well\n18:51 <Hansie> Usually the rewards are such that one would want to do both all the time\n18:51 <Hansie> Have to go now, buy\n19:08 <@CjS77> Unf the hashrates of the Myriad algos are not directly comparable\n```\n",
    "title": "Proof of Work for the Tari Chain",
    "date": "2019-10-21T11:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed proof of work strategies. Join us for our next discussion on Freenode in #tari-dev. Discussion times proposed by the Tari community: Mondays: 6pm CAT (12pm...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-48.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "48"
  },
  {
    "slug": "2019-07-22-tari-protocol-discussion-44",
    "content": "\nOn Monday, the Tari community discussed a few technical things around proofs.\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday discussion\n```\n17:51 <Hansie>  Hi there\n17:52 <Hansie>  I thought we could open the floor tonight for any off the cuff or other tar-dev related matter to be discussed\n17:55 <sarang>  Hi, sarang here lurking and observing :)\n17:59 <Hansie>  Hi Sarang, watched a video on one of your talks at the Monero conference, was really good, about optimizations.\n17:59 <sarang>  Great, glad you enjoyed it\n18:03 <Hansie>  Maybe to throw something out there, could there possibly a way to compress MW kernels and provide some sort of ZK proof for that? Each kernel has unique signatures and contributes to verifying zero inflation.\n18:04 <sarang>  Compress in what way?\n18:06 <Hansie>  Let us say there is a MW block and we want to condense all inputs, outputs and excesses in the kernels into a single MW Tx\n18:09 <sarang>  So what's the statement you want to prove with a zk/wi proving system?\n18:10 <sarang>  If it's general but neatly algebraically defined, a bulletproof could be useful (but costly in verification)\n18:10 <sarang>  anything smaller/faster is going to be far more specialized or require trust\n18:11 <sarang>  (which I assume is an absolute no-go here)\n18:11 <tar1b0t>  [mattermost] <stringhandler> What's a use case hansie?\n18:12 <Hansie>  Ok, so a base node can validate a block by `sum(outputs) - sum(inputs) = sum(excesses in all kernels)`\n18:12 <sarang>  (purely looking at pedersen commitments, right?)\n18:13 <Hansie>  Yes\n18:13 <sarang>  Fortunately you can do nifty small proofs involving pedersen commitments...\n18:13 <sarang>  depending on what you wish to show\n18:13 <Hansie>  Use case stringhandler: Wondering if the block validation can be converted into a single Tx with a single kernel\n18:15 <Hansie>  Each Tx's excess can be proved by verifying the signature in its kernel, so this may involve some sort of a super kernel\n18:16 <Hansie>  Sarang, does my question make sense? Any ideas?\n18:17 <Hansie>  I do not think this use case is \"neatly algebraically defined\" as you out it\n18:17 <Hansie>  put^\n18:18 <sarang>  I'm still not seeing the total picture of the formal statement you'd want to prove\n18:19 <sarang>  but I'm far less experienced in MW than others in this room\n18:20 <sarang>  I suspect this is not possible non-interactively, or without either knowledge of all input secret data or a suitable MPC\n18:20 <sarang>  (and those are notoriously tricky to get right while maintaining proper security)\n18:21 <Hansie>  Yep, the Schnorr signatures in the kernels have different challenges, specifically designed to guard against inflation.\n18:22 <sarang>  I see\n18:26 <Blackwolfsa>  What about if you have multiple commitments, that you have aggregated by summing them (vH+kG = v1H+k1G + v2H+k2G .. etc). If all those have valid commitments and bulletproofs. And you as prover only wants to give the aggregated commitment to a verifiy, is there someway you can provide a rangeproof of a kind to the verifier to prove that aggregared commitment is 0<v<2^n ?\n18:29 <sarang>  Are you assuming a single range proof by someone with knowledge of all commitment secret data?\n18:29 <sarang>  Or an MPC bulletproof\n18:29 <sarang>  Which has very tricky security properties\n18:30 <Blackwolfsa>  a singe rangeproof. \n18:31 <Blackwolfsa>  I am trying to see if there is a way to calculate such a rangeproof, without providing the verifier all the commitments and their individual rangeproofs \n18:31 <sarang>  Depends on how you want to aggregate the proof\n18:31 <Blackwolfsa>  is there a way?\n18:32 <Blackwolfsa>  I am trying to find a way that can be done.\n18:32 <sarang>  There's aggregation in the sense of proving range of separate commitments efficiently\n18:32 <Blackwolfsa>  The idea behind it is, that the prover only has the commitments with their bulletproofs (or some other rangeproof). He does not know the v's or the k's\n18:32 <sarang>  And aggregation in the sense of proving the range of a sum of commitments, which does not prove range for any of the subcommitments\n18:33 <Blackwolfsa>  aggregation is proving the sum of the commitments\n18:33 <sarang>  That shows nothing about the individual commitment ranges\n18:33 <Blackwolfsa>  the verifier does not need to know the individual commitments, or if possible that they even exists\n18:33 <Blackwolfsa>  the verifier does not care about the individual ones, he only cares about the aggregated one\n18:36 <sarang>  What does the prover know?\n18:36 <sarang>  If you sum a bunch of commitments and know _all_ secret data, you can of course construct a range proof showing the value sum is within a given range, but nothing more\n18:36 <Blackwolfsa>  he can see the individual commitments and their rangeproofs. \n18:36 <sarang>  If the prover only has the individual commitments and bulletproofs, you can't do anything\n18:37 <sarang>  The closest you can come is an MPC on the individual commitments, but it's interactive\n18:37 <sarang>  (and, again, perilous)\n18:38 <Blackwolfsa>  darn...\n18:38 <Blackwolfsa>  There is not some other rangeproof you can use?\n18:39 <sarang>  How inefficient do you want to be? =p\n18:39 <sarang>  Bulletproofs are the most efficient that I know of\n18:39 <Blackwolfsa>  well first I want it to be secure and useable... :P\n18:39 <sarang>  But no, I don't see a way it's possible to generate such a rangeproof with access to no secret data\n18:40 <sarang>  or interactivity among the original committers\n18:43 <Blackwolfsa>  darn it, because the prover should not have access to those values, since they become vulnerable. \n18:45 <sarang>  I would love such a technique for Monero too...\n18:45 <sarang>  even ignoring the idea of summing commitments, of course\n18:45 <sarang>  We have a whole block of bulletproofs\n18:46 <sarang>  FWIW the bulletproofs MPC was written with CoinJoin in mind (although the security model is a bit wonky)\n18:47 <Blackwolfsa>  mmm but thats interactive. we require something non-interactive\n18:47 <sarang>  yup\n18:47 <sarang>  and therein lies the problem\n18:47 <sarang>  If you ignore the interactivity (or handle it poorly) you break the zk property\n18:48 <sarang>  (and possibly WI too, dunno)\n19:00 <Hansie>  Thanks guys, we some really interesting discussions here! Thank you sarang, for humoring us.\n19:01 <Blackwolfsa>  yes thanks for the time\n```\n",
    "title": "Proofs",
    "date": "2019-07-22T11:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed a few technical things around proofs. Join us for our next discussion on Freenode in #tari-dev. Discussion times proposed by the Tari community: Mondays: 6pm...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-44.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "44"
  },
  {
    "slug": "2019-07-22-tari-protocol-discussion-45",
    "content": "\nOn Monday, the Tari community discussed multiparty payment channels\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday discussion\n```\n18:03 <@CjS77> Evening, everyone\n18:03 <Hansie> W.r.t. scaling, I am not overly optimistic that the MW base layer can sustain a vibrant DAN.\n18:04 <@CjS77> You're being a bit kind :) I'd say it's impossible\n18:04 <Hansie> Current throughput in practice of MW is around 17 tps\n18:05 <Hansie> cjs77: Agreed\n18:05 <@CjS77> You simply can't map the type of throughput a digital asset like a set of tickets for a popular event going on sale to a PoW blockchain\n18:05 <@CjS77> I think this is discussed in one of the RFCs..\n18:06 <Hansie> So how do we scale?\n18:06 <@CjS77> https://rfc.tari.com/RFC-0001_overview.html\n18:07 <@CjS77> The RFC mentions payment channels as a means of bridging payments on the DAN to the base layer\n18:08 <@CjS77> Obv Lightning is the most well-known payment channel solution\n18:08 <Hansie> Something like Lightning perhaps?\n18:08 <@CjS77> Yeah\n18:09 <@CjS77> But I think we can take advantage of Mimblewimble's properties to come up with something a little more ergonomic.\n18:09 <Hansie> Agreed, Lightning to my mind is somewhat complicated and restricted for the DAN\n18:09 <@CjS77> Possibly with a different set of guarantees, but one that is still fast, secure and essentially trustless\n18:10 <Blackwolfsa> the only problem with lighting is the that it can be seen as many strings with beads on them, not very flexable..\n18:10 <@CjS77> Yeah, only allowing bilateral channels is something of a deathknell for non-fungiblr token\n18:10 <Blackwolfsa> and its only two parties\n18:10 <Hansie> The lack of scripting system in MW could be a potential drawback\n18:10 <@CjS77> And the routing is very complicated\n18:11 <@CjS77> Hansie - yes it makes things trickier..\n18:11 <Blackwolfsa> technically its very possible to do two party payment channels in mw\n18:12 <@CjS77> Indeed, are you referring to Beam's recent release?\n18:13 <Hansie> Beam has a demo at this stage, with plans to take it to testnet then mainnet\n18:13 <@CjS77> For Tari, I think it would be preferable for the payment channel topology to map the validator node topology very closelt\n18:14 <@CjS77> i.e. multiparty payment channels, with parties being able to join (deposit) and leave (withdraw) roughly at will\n18:14 <Hansie> Do you mean permissionless?\n18:14 <Hansie> Ah ,ok\n18:14 <Blackwolfsa> not even, the math/tech/know how to do it there\n18:14 <Blackwolfsa> but I dont think its really the best of ideas\n18:15 <Blackwolfsa> having a \"built in\" multiparty payment channel is a much better idea I think\n18:15 <Hansie> \"built-in\" or \"bolt-on\"?\n18:16 <@CjS77> What do you mean by built-in?\n18:19 <Blackwolfsa> natively supported\n18:19 <Blackwolfsa> its not just some extra after though or hacked on feature\n18:20 <Hansie> Ah, do you mean with all the proper hooks?\n18:20 <@CjS77> I see. yeah, although that said, the less you have to add to standard MW consensus rules, the better\n18:21 <Blackwolfsa> true..\n18:21 <Hansie> Lobbyists have been advocating for a long time now to add hooks to Bitcoin in support of side channels\n18:21 <@CjS77> lol. \"Lobbyists\"\n18:22 <Hansie> Ok, enthusiasts then?\n18:22 <@CjS77> I'd love to see Paul Storcz's reaction at being called a lobbyist :)\n18:23 <Hansie> oops\n18:23 <@CjS77> Too funny\n18:23 <Hansie> I can only claim to be native Afrikaans\n18:23 <@CjS77> sarang, have you given any thought to this at all? We have some ideas that we can bounce off you\n18:25 <@CjS77> We can expand on this next week perhaps. Seems you're not around today.\n18:27 <Hansie> Yip, maybe enough food for thought for now?\n18:28 <@CjS77> üëç\n18:50 <sarang> I'm here, for a bit\n18:51 <sarang> We've looked into sidechannels and PCNs for Monero... there's a preprint out with an idea for how to do it with a modification to our tx protocol, but it has big drawbacks and doesn't have an obvious crossover to MW\n18:51 <sarang> But yes, it's the lack of scripting that gets ya\n\n2019-08-12\n\n18:03 <Hansie> Hi there, time for another dev chat. If anyone is present, I thought we could continue where we left of last week, i.e. further discussing permissionless multiparty payment channels as scaling solution.\n18:13 <Hansie> If we could have any number of these payment channels, managed by committees that must some consensus voting mechanism for those transactions, what would the scaling issues be?\n18:17 <neonknight64> When these committees want to submit an accumulated transaction to the base layer such as a checkpoint transaction. The size of the transaction will be limited by the block size.\n18:17 <Hansie> Let us assume we can have a small footprint  (i.e. commitment) of the state of the payment channel represented in the base layer at certain checkpoint intervals, and that we could have a 1-1 peg.\n18:18 <Hansie> neonknight64: Please explain what you mean by `accumulated transaction`\n18:20 <Hansie> And yes, block size is certainly a limitation\n18:20 <neonknight64> Potentially, a single large transaction that spends to large number of outputs.\n18:22 <Hansie> Ah ok, so large numbers of outputs contain an equal amount of Bulletproof range proofs, thus the size limitation.\n18:24 <Hansie> If I am not mistaken, a quick calculation reveals ~2,000 new UTXOs created per block\n18:24 <Hansie> That is 17 tps, assume 2 outputs per transaction, x 60s.\n18:25 <Hansie> With ~1,000 kernels\n18:25 <Hansie> ^ as upper limit\n18:28 <simian_za> So what would make up all these transaction outputs in a payment channel checkpoint?\n18:28 <simian_za> individual withdrawals?\n18:29 <Hansie> We could have deposits, withdrawals and possibly refunds.\n18:35 <neonknight64> A committee with a large user base might have to split these base layer transaction into separate transactions to ensure they fit into blocks\n18:38 <Hansie> Ok, so is it practical to assume that whatever scheme employed it will be limited by a collective creation of ~2,000 new UTXOs and ~1,000 transactions per block? As a sustained throughput.\n18:40 <simian_za> Sure, so a Channel will be have to stagger/cascade a large amount of withdrawals, deposits or refunds across multiple blocks\n18:41 <Hansie> Great. If the network is not busy a burst of activity could be staggered and after a while all will be dealt with.\n18:43 <stanimal> Agree, greater throughput could potentially be achieved by splitting up transactions that would exceed these limits across more than one block - seems like a nice solution\n18:45 <Hansie> So we have discussed block size and/or tps as an upper limit for payment channels' scaling issues. This can be used to calculate a theoretical sustained maximum throughput for all payment channels combined.\n18:46 <simian_za> Well not exactly, we have discussed the throughput of deposits, withdrawals and refunds\n18:47 <simian_za> if the transactions stay in the payment channel thats a different story?\n18:50 <Hansie> I was trying to deduct scaling issues for payment channels from this discussion. There is a definite limit, depending on its design, if checkpoints involve multiple UTXOs from multiple users.\n19:01 <Hansie> Thanks guys, this is then the end of the regular chat.\n```\n",
    "title": "Miltiparty Payment Channels",
    "date": "2019-08-05T11:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed multiparty payment channels Join us for our next discussion on Freenode in #tari-dev. Discussion times proposed by the Tari community: Mondays: 6pm CAT (12pm...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-45.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "45"
  },
  {
    "slug": "2019-07-22-tari-protocol-discussion-46",
    "content": "\nOn Monday, the Tari community discussed potential verification times of multiparty payment channels.\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday discussion\n```\n18:03 <Hansie> Hi there, time for our Monday dev chat.\n18:04 <Hansie> We have explored bounding cases for checkpoint transactions w.r.t. block size. There are also validation time and data transmission size limitations.\n18:12 <Hansie> I have refined the numbers a bit, and have a low and high throughput scenario:\n18:13 <Hansie> Low\n18:13 <Hansie> Transactions/CP               1 440 000\n18:13 <Hansie> Transactions/s                    16.00\n18:13 <Hansie> Gearing                            1.10\n18:13 <Hansie> UTXOs per CP                    432 000\n18:13 <Hansie> Kernel data to hash (MB)/CP      146.94\n18:13 <Hansie> UTXO data to hash (MB)/CP        293.75\n18:13 <Hansie> Data to hash (MB)/CP             440.69\n18:13 <Hansie> Data to hash (MB)/min              0.31\n18:13 <Hansie> Bulletproof verify (h)            0.054\n18:13 <Hansie> Signature verify (h)              0.012\n18:13 <Hansie> Hash verify (h)                 0.00013\n18:13 <Hansie> Total validation time (h)         0.066\n18:13 <Hansie> Validation time/block (s)         0.165\n18:13 <Hansie> High\n18:13 <Hansie> Transactions/CP             144 000 000\n18:13 <Hansie> Gearing                          117.40\n18:13 <Hansie> Transactions/s                 1 666.00\n18:13 <Hansie> UTXOs per CP                 43 200 000\n18:13 <Hansie> UTXO data to hash (MB)/CP     29 374.69\n18:13 <Hansie> Kernel data to hash (MB)/CP   14 694.21\n18:13 <Hansie> Data to hash (MB)/CP          44 068.91\n18:15 <Hansie> Validation times estimated based on single core operation of an Intel Core i7-6820HQ clocked at 2 GHz.\n18:16 <Hansie> For 14 400 000 users in the DAN\n18:16 <Blackwolfsa> is an i7 not a bit too highpowered for this test?\n18:18 <Hansie> Maybe, maybe not, just a peg in the sand.\n18:18 <Hansie> Refunds for both scenarios looks as follows:\n18:18 <Hansie> Transactions/CP             14 400 000.00\n18:18 <Hansie> UTXOs per CP                14 400 000.00\n18:18 <Hansie> Kernel data to hash (MB)/CP      1 469.42\n18:18 <Hansie> UTXO data to hash (MB)/CP        9 791.56\n18:18 <Hansie> Data to hash (MB)/CP            11 260.99\n18:18 <Hansie> Bulletproof verify (h)               1.80\n18:18 <Hansie> Data to hash (MB)/min                7.82\n18:18 <Hansie> Signature verify (h)                 0.12\n18:18 <Hansie> Hash verify (h)                    0.0029\n18:18 <Hansie> Total validation time (h)           1.923\n18:18 <Hansie> Validation time/block (s)           4.807\n18:19 <Hansie> Blackwolfsa: This is just to get a feel for the size of the problem.\n18:26 <Hansie> The premise of this scheme is for users to pay funds into a single committee controlled UTXO (checkpoint UTXO), and to get an equal amount of funds available in the payment channel. This peg-out to be atomic, with a commitment to the payment channel state. The committee will ever only have one checkpoint UTXO on the base layer, always spending the\n18:26 <Hansie> previous checkpoint UTXO.\n18:26 <Hansie> Base nodes are then required to validate the supporting data set for the checkpoint.\n18:30 <Hansie> Checkpoints involve committing to the set of information that fully describes the state of all payment channel transactions and UTXOs at a certain point in time, and to immutably add that result to the Mimblewimble blockchain.\n```\n",
    "title": "Verification Times of Multiparty Payment Channels",
    "date": "2019-08-26T11:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed potential verification times of multiparty payment channels. Join us for our next discussion on Freenode in #tari-dev. Discussion times proposed by the Tari...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-46.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "46"
  },
  {
    "slug": "2019-07-18-tari-protocol-discussion-43",
    "content": "\nOn Thursday, the Tari community discussed what we need to commit to. Below is the TL;DR on Thursday's conversation (full transcript included below):\n\n* We need to commit to rangeproofs\n* We need to commit to UTXO's and not TXO's\n\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday discussion\n```\n11:06 <@CjS77>  Welcome to Thursday's dev discussion\n11:08 <Blackwolfsa>  are we continuing monday's discussion? \n11:08  * Kellanved (~Kellanved@41.217.127.241) has joined the channel\n11:11 <@CjS77>  Yes, let's wrap up a few points on that\n11:11 <Blackwolfsa>  I have a proposal to ensure that we commit to the UTXO set and not the TXo set\n11:12 <Blackwolfsa>  In the header, we usually put the mr (merkle root) to the txo set\n11:12 <@CjS77>  So one thing that's not provable at the point we left of is, given a Merkle proof that a TXO is in the set, we _still_ can't tell if it is spent or not\n11:12 <@CjS77>  Right, so go ahead Blackwolfsa\n11:13 <Blackwolfsa>  that commits to the txo set. But if we add a roaring bitmap of index (as the leaves of the MMR) to keep track of all the positions of the UTXO's in the MMR. We know which ones are STXO, and which are UTXO\n11:14 <Blackwolfsa>  So we modify the field that whould have been MR of TXO, to be Hash(MR_TXO||Hash(roaring bitmap of UTXO positions))\n11:14 <Blackwolfsa>  that should gives a commitment to the TXO and the UTXO...\n11:14 <@CjS77>  Right\n11:16 <@CjS77>  So a UTXO proof now consists of the commitment hash (from the block header), the merkle proof for the MMR, and the Roaring Bitmap. You can verify that the TXO is in the MMR, and use the bitmap to confirm that it is unspent; and also that the H(MMR root || H(RB)) equals what's in the header\n11:19 <Blackwolfsa>  yes\n11:23 <@CjS77>  And the bitmap isn't that big a data structure; 80 million TXOs would be ~10 MB, and probably get very good compression of 80%+ (thumb sucked), so about 2MB\n11:24 <@CjS77>  And presumably it doesn't grow indefinitely -- as older TXOs all become spent, there will be times when you can prune those \"all-spent\" part off the MMR for good. Correct?\n11:25 <Blackwolfsa>  should be yes\n11:36 <Blackwolfsa>  What about rangeproofs, should be commit to those as well?\n11:43 <tar1b0t>  [mattermost] <stringhandler> Committing to a roaring bitmap seems very implementation specific\n11:44 <Blackwolfsa>  it does, I agree. but we need a condeced way of commiting to the UTXO somehow thats fast and compact, roaring bitmap solves this\n11:45 <tar1b0t>  [mattermost] <stringhandler> and limits others from adopting different techs as they arise\n11:45 <Blackwolfsa>  Its kinda the same, we dont commit to a merkle tree root, or hash of all txo's etc. We commit to a merkle mountain range root for the txo\n11:47 <tar1b0t>  [mattermost] <stringhandler> Rangeproofs are proofs of other data, if you have a commitments to that data already, do you need to have a commitment to the proof as well?\n11:50 <Blackwolfsa>  rangeproofs can be mutable...\n11:50 <Blackwolfsa>  https://github.com/mimblewimble/grin/issues/627\n\nRemove the range proof MMR ¬∑ Issue #627 ¬∑ mimblewimble/grin\nIt occurred to me today that committing to range proof hashes in a MMR doesn&#39;t really help us for anything except malleability. And that we didn&#39;t really care about range proof malleability...\n11:56 <Blackwolfsa>  my opinion of this is, we need to commit to them as well. \n12:03 <Hansie>  Blackwolfsa: Committing to range proofs seems to be a good idea yes, as per info above, specifically Apoelstra's comment.\n12:06 <Hansie>  And the overlay of TXO Merkle tree with Roaring Bitmap and committing to it seems like a great idea as well. Can be really usable functionally.\n12:08 <tar1b0t>  [mattermost] <stringhandler> Whatever you commit to you will have to transfer over the network at some point\n12:08 <tar1b0t>  [mattermost] <stringhandler> are we saying we will transfer the full roaring bitmap on the network?\n12:18 <@CjS77>  Yes, you have to commit to the range-proofs, but I believe you only need to commit to the proofs *per block*; comitting to every single range proof in every block is overkill imo\n14:15 <Blackwolfsa>  stringhandler: you only need full bitmap when syncing...\n14:15 <Blackwolfsa>  If you sync and the block was constructed correctly the bitmaps should sync up. \n\n```\n",
    "title": "What Needs Committing",
    "date": "2019-07-18T04:00:00.000Z",
    "excerpt": "On Thursday, the Tari community discussed what we need to commit to. Below is the TL;DR on Thursday's conversation (full transcript included below):  We need to commit to rangeproofs  We need to...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-43.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "43"
  },
  {
    "slug": "2019-07-15-tari-protocol-discussion-42",
    "content": "\nOn Monday, the Tari community discussed UTXO commitment. Below is the TL;DR on Monday's conversation (full transcript included below):\n\n* We only require a TXO, but a UTXO can be beneficial \n* A MMR looks to be the best compromise between the ways to commit a UTXO\n\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday discussion\n```\n14:05 <Blackwolfsa>  Hi Everyone, I thought perhaps we can talk a bit about the need to commit to the UTXO set for later's discussion at 16:00 UTC\n14:06 <Blackwolfsa>  If you want a bit more background info on this, these are good reads to quickly get some good info: https://sanket1729.github.io/utxo-commitments\nA survey on UTXO commitments schemes for bitcoin\n\nThe Unspent Transaction Output (UTXO) set is the subset of Bitcoin transaction outputs that have not been spent at a given moment. Whenever a new transaction...\n14:06 <Blackwolfsa>  https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-May/012715.html\n[bitcoin-dev] Making UTXO Set Growth Irrelevant With Low-Latency Delayed TXO Commitments\n\n14:08 <Blackwolfsa>  Basic problem we need to discuss is how do we commit to the UTXO set, we have a few options: naive hash, merkle tree, MMR, rolling utxo hash, or a mix of the previously mentioned. All have advantages and disatvantages\n14:10 <Blackwolfsa>  A big constraint we have on it, is that we need to be easily able to rewind it, so we can handle reorgs\n16:19 <tar1b0t>  [mattermost] <Cayle> We also need to efficiently implements a `is_in_utxo_set(this_utxo)`, i.e. a proof that a given utxo is in the current set\n16:19 <tar1b0t>  [mattermost] <Cayle> And of course, provide a commitment to the UTXO set\n16:27 <@CjS77>  Side note: If I can get some agreement on this small PR, that'd be üíØ- https://github.com/tari-project/tari/pull/510\n\nRemove RFC-315 by CjS77 ¬∑ Pull Request #510 ¬∑ tari-project/tari\nDescription Transfers are a privilege, not a right ;) There is no requirement that assets be transferable, therefore this shouldn&#39;t be a generic RFC, but soemthing that is left to the individua...\n18:02 <Blackwolfsa>  I forgot about prooving a utxo in a spesific set\n18:03 <Blackwolfsa>  but then we can leave out naive hashing, I dont think thats possible\n18:04 <@CjS77>  Yeah, it's the worst from a performance pov\n18:04 <Blackwolfsa>  if want to proove a utxo I think the only real contenders is merkle tree and MMR\n18:04 <@CjS77>  I've been grokking Grin's code a bit more and it actually looks like they commit to the entire TXO set, not just UTXOs\n18:05 <@CjS77>  I agree Blackwolfsa\n18:05 <Blackwolfsa>  I read around that they where looking at commiting to the stxo as well\n18:05 <simian_za>  Why commit to those?\n18:06 <Blackwolfsa>  but a MMR well indirectly commit to the whole txo\n18:06 <Blackwolfsa>  I could not really pickup why\n18:06 <@CjS77>  ^ this, so that's why I think grin does it\n18:07 <@CjS77>  It's easier? ü§∑‚Äç‚ôÇÔ∏è\n18:07 <simian_za>  So you mean they don't ever discard the data in the leaves of the MMR even if a whole subtree is spent?\n18:07 <Blackwolfsa>  no you can\n18:08 <Blackwolfsa>  but only if the whole sub tree is spent can you remove\n18:08 <Blackwolfsa>  and only the leaves then\n18:08 <simian_za>  depends on the height of the subtree surely?\n18:09 <neonknight64>  If one utxo is abandoned then the sub tree can never be removed?\n18:09 <Blackwolfsa>  yes\n18:09 <simian_za>  but ok I see that you are commiting to the spent TXOs in that case essentially\n18:10 <Blackwolfsa>  if you spent the two leaves, you can prune the two leaves and leave the root\n18:10 <Blackwolfsa>  till you spent the sub tree next to it etc\n18:14 <@CjS77>  So my question is (and maybe I'm answering it as I write, but anyway).. if we are committing to the whole TXO set (not just UTXOs), is this even safe? (ignoring info leaking concerns)..\n18:14 <neonknight64>  It would be nice if people can be encouraged to coin join dust utxos rather than abandoning them.\n18:15 <@CjS77>  e.g. Set at t0 = 1 2 3 4 5 => Commit a1b2...\n18:15 <Blackwolfsa>  neonknight64 grin was discussing some insentive to encourage it\n18:16 <Blackwolfsa>  CjS77 I am missing why it is unsafe? I think its the safest we can be\n18:16 <@CjS77>  Now if 2 is spent, we have 1 x 3 4 5 6 => H(a1b2..| H(6))\n18:17 <@CjS77>  Ok, let me say it this way. Changing a UTXO to a STXO doesn't actually change the local peaks hash, correct?\n18:18 <@CjS77>  i.e. Hash(1 2 3 4 5) = Hash(1 x x 4 5)\n18:18 <@CjS77>  where x is a STXO\n18:19 <Blackwolfsa>  yes\n18:19 <@CjS77>  Our protection from malleability attacks is that you always need a NEW utxo to prevent inflation, so the root hash still changes\n18:19 <Blackwolfsa>  correct\n18:19 <@CjS77>  Ok, so if we had zero-valued commitments, you could potentially play some games\n18:20 <@CjS77>  That's thebasic core point I need to be convinced about before agreeing that MMRs are the way to go\n18:20 <Blackwolfsa>  well if you add a zero-value commitment you still need to add it the utxo set\n18:21 <Blackwolfsa>  and you cant just delete a utxo so you will spend it to something if not just a zero value commitment\n18:22 <@CjS77>  I was thinking when the zero-valued UTXO gets spent; but I get you always have the Coinbase UTXO in a block anyway\n18:22 <@CjS77>  *guess\n18:23 <Blackwolfsa>  yes, there is no way where you can just spend any utxo without adding one as well\n18:23 <Blackwolfsa>  MMR's are add only by design\n18:23 <Hansie>  Which games cjs77?\n18:24 <Blackwolfsa>  but because we spend some leaves over time, we can delete some old data since they will never get asked for anymore\n18:24 <@CjS77>  Ok, now what are the downsides of a straight MMR or sparse MMR?\n18:25 <@CjS77>  I beg your pardon. Strsight Merkle Tree or Sparse Merkle tree\n18:26 <Hansie>  Blackwolfsa so the pruning happens randomly as it goes along, but more with older UTXOs?\n18:27 <Blackwolfsa>  pruning happens with spent utxo's thats random\n18:27 <Blackwolfsa>  CjS77 I dont see how we can effectivly use sparse tree's\n18:27 <Blackwolfsa>  and comparing a straight merkle tree to a MMR, the MMR is the the way better one\n18:28 <@CjS77>  well besides the fact that you must keep hashes of all our TXOs\n18:28 <Blackwolfsa>  Yes but you dont have to hash the whole utxo every time\n18:28 <Blackwolfsa>  with a merkle tree you have to\n18:30 <@CjS77>  For completeness, here's a decent write-up of sparse merkle trees, https://medium.com/@kelvinfichter/whats-a-sparse-merkle-tree-acda70aeb837\n\nWhat‚Äôs a Sparse Merkle Tree? - Kelvin Fichter - Medium\nIf you‚Äôve been around the Ethereum research community lately, you might‚Äôve heard of something called a sparse Merkle tree. They might sound‚Ä¶\n18:30 <@CjS77>  and I tend to agree that this isn't the right use case for them\n18:31 <Blackwolfsa>  comparing hashes, at this moment, grin has 5762 utxo's, the last block had 5. You on a worst case senario, you are hashing 25 hashes, compared to 5762 hashes\n18:31 <Hansie>  They talk about `Proving Non-inclusion` - do we need that?\n18:32 <@CjS77>  So Blackwolfsa, if we commit to the TXO, and not the UTXO, how do you validate that your UTXO set is correct when you're syncing -- is it indirect?\n18:32 <Blackwolfsa>  compare merkle roots\n18:33 <@CjS77>  You know that the UTXO set that you have is _at least_ a subset of the full UTXO set,\n18:33 <Blackwolfsa>  we commit to that every block\n18:33 <@CjS77>  That includes Spent and Unspent\n18:33 <@CjS77>  You can't calculate the root from just a UTXO set, you need the merkle proof as well, no?\n18:34 <Blackwolfsa>  they are the same\n18:34 <Blackwolfsa>  the proof of the MMR/tree is the merkle root, and the utxo proof is that as well\n18:35 <@CjS77>  Hear me out -- the MMR looks like (1 x x 4 5) with root b1a1\n18:35 <@CjS77>  Now I'm syncing with you, so you send me (1 4 5).\n18:35 <Blackwolfsa>  no\n18:36 <Blackwolfsa>  I will have to send you (1, null, null, 4, 5)\n18:36 <@CjS77>  Ok, sure. But also 1, null's parent and null,4's parent surely\n18:36 <Blackwolfsa>  or something like (1,1; 4,3;5,5)\n18:37 <@CjS77>  Cool, that's what I was calling amerkle proof\n18:37 <Blackwolfsa>  with this tree spesifically you will actually send 1,2,3,4,5\n18:37 <@CjS77>  You'll send the STXOs?\n18:38 <Blackwolfsa>  because 1 and 4 was not spent you cannot prune 2,3 yet\n18:38 <@CjS77>  Do you send the whole thing, or just heir hashes?\n18:38 <Blackwolfsa>  just the hashes\n18:39 <Blackwolfsa>  you dont need to send the actual utxo\n18:39 <@CjS77>  stxo\n18:39 <Blackwolfsa>  yes\n18:40 <@CjS77>  right, so you could lie to me and *say* that 3 was spent when it wasn't; just send me the hash and I'd be non-the-wisert\n18:40 <@CjS77>  The hash would be the same\n18:40 <@CjS77>  The only time I'd eventually figure out something was wrong was when I summed the UTXOs and checked the accumulated excess\n18:41 <Blackwolfsa>  potentially\n18:41 <Blackwolfsa>  but you have to check that anyway I think\n18:41 <@CjS77>  Yes -- I was being a bit Socratic, but wanted to follow the logic through\n18:42 <@CjS77>  The point is that you can't actually trust that the UTXO set is complete from the commitment and a provided set when using an MMR\n18:42 <@CjS77>  you have to do the inflation check too, and then you're ok\n18:43 <Blackwolfsa>  the mmr proof of the utxo will only help you syncing a block or so, I think it will help you just syncing the whole chain\n18:44 <Hansie>  Interesting conclusion, that the Merkle proof does not proof the UTXO set.\n18:44 <@CjS77>  When you sync, you get the UTXO set at a given block, don't you?\n18:44 <Blackwolfsa>  yes\n18:45 <@CjS77>  Hansie, only because it's a commitment to the whole TXO set, not just UTXOs\n18:45 <Blackwolfsa>  But that might be why grin was investiagting commiting the stxo\n18:46 <@CjS77>  I've got to run, but it would be great to continue this line of thinking.\n18:46 <Blackwolfsa>  https://github.com/mimblewimble/grin/issues/859\n\nQuestion - STXO MMR (aka the rm_log)? ¬∑ Issue #859 ¬∑ mimblewimble/grin\n[Just thinking out loud here, but wanted to put it somewhere for reference.] Right now we have a &quot;remove log&quot; and a &quot;prune list&quot; but we do not explicitly commit to these anywher...\n18:46 <Hansie>  Makes sense, thanks for the interesting discussion\n18:46 <Blackwolfsa>  thats them discussing the issue, they have some solution to it, but I have not yet completly dug through how it works\n18:46 <@CjS77>  ^^ Nice, thanks\n\n```\n",
    "title": "UTXO Commitment",
    "date": "2019-07-15T11:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed UTXO commitment. Below is the TL;DR on Monday's conversation (full transcript included below):  We only require a TXO, but a UTXO can be beneficial   A MMR...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-42.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "42"
  },
  {
    "slug": "2019-07-08-tari-protocol-discussion-41",
    "content": "\nOn Monday, the Tari community discussed RFC-340. Below is the TL;DR on Monday's conversation (full transcript included below):\n\n* HotStuff looks promising for the DAN's BFT.\n* DAG is not required as there cannot be conflicting states\n\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday discussion\n```\n17:56 <@CjS77>  I propose we discuss the proposal ni https://github.com/tari-project/tari/pull/475 tonight\nRFC-340 VN Consensus overview by CjS77 ¬∑ Pull Request #475 ¬∑ tari-project/tari\nDescription Provide an overview for a proposal for smart contract consensus in Tari. This PR also removes some RFC stubs that are either no longer relevant or cannot be defined at this time. Types...\n18:00 <simian_za>  sounds good\n18:04 <Blackwolfsa>  It looks good\n18:04 <@CjS77>  Let's take some time to read thru it if you haven't already and then ask Q's / make comments / suggestions\n18:04 <Hansie>  Cool\n18:07 <Hansie>  Looks good. Some questions...\n18:07 <Hansie>  How is `super-majority of these messages` determined?\n18:07 <Hansie>  ... as `proposal for the next state`\n18:14 <simian_za>  I am guessing that the number of members of the committee is known before hand\n18:14 <@CjS77>  All the details are in the HotStuff paper, basically when we move to a view _v_, replicas send a `NewView` msg to the leader waits for that view. The leader waits for at least (n - f) NewView messages before proceeding with its proposal. where f is  (n-1)/3\n18:14 <Blackwolfsa>  Members should know who are in the commitee at a time\n18:14 <@CjS77>  n is known and fixed\n18:15 <simian_za>  You mention in the report that a fork can only be a mximum of 3 views deep, is this another implementation detailof HotStuff?\n18:16 <@CjS77>  Beyond 3 views, the state has been finalised; so as long as we have 2/3 honest nodes, they'll never try to branch off a finalised state and produce incompatible states (i.e. a fork)\n18:17 <simian_za>  oh is that because of the three phases of the view pipeline?\n18:17 <@CjS77>  yes\n18:17 <simian_za>  I see\n18:17 <@CjS77>  Yeah, it's quite slick\n18:17 <Blackwolfsa>  Only problem there I acn see is with branching... \n18:17 <Blackwolfsa>  But that should be minor \n18:18 <@CjS77>  Branching?\n18:18 <Hansie>  Seems to me `super-majority of these messages` will be the collection of instructions for a next block, am I right?\n18:19 <Blackwolfsa>  What Cpus do with if statements \n18:19 <Blackwolfsa>  Eg it makes an assumption on a future state based on the current state \n18:20 <@CjS77>  We require that Every replica must deterministically get the same state when running the same input over  the same smart contract. Therefore they'll all select the same branches on conditionals, surely\n18:20 <Blackwolfsa>  Yes but of we try to run the states in a pipeline\n18:21 <Blackwolfsa>  If it's run single staged, it should never give issues\n18:21 <@CjS77>  @hansie there are several places where a super-majority of votes are required.\n18:22 <Hansie>  Ok, so practically, will a bunch of instructions be collected as a proposal for a new state?\n18:22 <neonknight64>  I like the idea of running parallel leaders for different instructions as mentioned in the rfc.\n18:23 <@CjS77>  In the pipeline, there could be temporary forks with competing states, yes; but the HotstuffBFT algo guarantees that this will be resolved. So VN's might have to temp run multiple copies of the contract until one of them gets selected as the \"truth\"\n18:24 <@CjS77>  @hansie, yes, each proposal consists of: We had state at view n, I ran these k instructions, rejected these r instructions and achieved state n+1. Do the rest of you agree?\n18:25 <@CjS77>  Then the replicas check this and vote Yes or No.\n18:25 <simian_za>  neonknight64: I don't think there was mention of parallel leaders? There is only one leader per view?\n18:26 <@CjS77>  Yes, one leader per view\n18:26 <Hansie>  cjs77: Great, that makes sense yes. So the `super-majority of these messages` for a new state change can be tweaked for throughput.\n18:27 <simian_za>  The signature aggregation that is discussed is it done to produce a single aggregate signature or is it essentially a concatenated list of partial sigs?\n18:27 <@CjS77>  That's up to us\n18:28 <@CjS77>  We need a k-of-n signature scheme\n18:29 <@CjS77>  If that can be done without an array of sigs, it makes communication much more efficient. LinBFT uses BLS threshold sigs, for example\n18:29 <neonknight64>  Sorry, I misinterpreted the \"possible to stagger and layer these rounds on top of each other, so that there are always four voting rounds\n18:29 <neonknight64>  happening simultaneously\"\n18:30 <@CjS77>  yes, at different stages\n18:30 <simian_za>  Think you can get away without a full array of sigs but you will need a list of which members signed to produce a given sig but that could be a list of member indices or something much smaller than sigs\n18:31 <Hansie>  Yip, the signature scheme must be as efficient as possible while still being secure\n18:31 <@CjS77>  Agreed. HotStuff leaves that implementation detail out\n18:31 <Blackwolfsa>  Personally I think we should keep the multiple stages as a later rivision and not 1st release \n18:34 <Hansie>  Just to be clear, no DAGs anymore?\n18:34 <@CjS77>  I recommend everyone go and read the HotStuff paper. You get the gist on the first reading; I'm still synthesising some of the nuances myself; but it resonates on an intuitive level\n18:35 <tar1b0t>  [mattermost] <stringhandler> Tried to find an ELI5 of it\n18:35 <@CjS77>  I spent a lot of time on my vacation thinking about DAGs, and I cam to the conclusion that this achieves almost the same degree of performance and throughput while being way simpler\n18:36 <Blackwolfsa>  Agreed... \n18:36 <neonknight64>  A great property of using the XOR Metric(Not Hamming Distance) for distance is that you can never have duplicate distances except if they have the same Node ID\n18:36 <Blackwolfsa>  Dag might have a get a simple mayorrity and not bft and still be secure. But this has alot less messages and is much simpler \n18:36 <Hansie>  cjs77: Seems like a reasonable conclusion yes\n18:36 <stanimal>  \"the leader expects a set of `NewView` messages from the other replicas\" - will read the paper but what is the purpose of the NewView message? Could there be a disagreement in leader election?\n18:37 <@CjS77>  The problem I always came up against with DAG was how to effectively re-order things when branches were being joined;\n18:37 <@CjS77>  No, the leader is chosen deterministically, but the leader must wait until 67% are ready for her\n18:38 <Hansie>  DAG: With HotStuff correct ordering is guaranteed after forks\n18:38 <stanimal>  Ah so a kind of stage synchronisation\n18:41 <@CjS77>  I need to run, but great chat guys!\n18:42 <Hansie>  Thank you for the effort!\n\n```\n",
    "title": "RFC-340 Consensus",
    "date": "2019-07-08T11:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed RFC-340. Below is the TL;DR on Monday's conversation (full transcript included below):  HotStuff looks promising for the DAN's BFT.  DAG is not required as...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-41.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "41"
  },
  {
    "slug": "2019-06-03-tari-protocol-discussion-40",
    "content": "\nOn Monday, the Tari community discussed Multi party UTXO's. Below is the TL;DR on Monday's conversation (full transcript included below):\n\n* Bulletproofs are a key part of MW transactions\n* Signatures of transactions are only used in the construction of the current transaction\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday discussion\n```\n30-05-19\n11:00 <neonknight64>  Maybe we can continue with the Consensus Mechanism discussion of Monday..\n11:03 <neonknight64>  I like the idea of the single leader based consensus where some mechanism is used to select a new sequence of leaders for each submitted instruction. This will reduce the number of messages dramatically compared to Leaderless bft.\n11:23 <Blackwolfsa>  mm could help reduce traffic quite a bit, which will help with latency which is going to be a big problem for us\n11:33 <Blackwolfsa>  leaderless communication seems to be O(n^2) while leader based look likes O(4n)\n11:34 <simian_za>  In the second case the coefficient (O(xn)) x might even be bigger than 4 but that scales better than 0(n^2)\n11:37 <Blackwolfsa>  yes\n11:37 <neonknight64>  My only fear is that a single leader would result in a single point of failure. Luckily the single leader cant fake the signatures of the committee member, so as long as leader switching is easy and fast when an issue occurs it should be ok.\n11:38 <simian_za>  LinBFT seems to have a very loose leadership concept that makes moving on to the next leader very cheap\n11:49 <Blackwolfsa>  I think a difficult question to ask is in leader based bft, what do we do about nodes that sign last on the last due to latency, that signature is probably better to have later on but for speed reason I think we should not add that in immediately by waiting for it. \n11:56 <simian_za>  I think it will resolve itself during the proposal process, little hard to visualize here\n11:58 <stanimal>  Can I get another +1 on this: https://github.com/tari-project/tari/pull/329 ?\n\nControl service, refactor dispatcher, partial refactor IMS by sdbondi ¬∑ Pull Request #329 ¬∑ tari-project/tari\nDescription Apologies for the huge PR, there&#39;s a lot of code to be written and smaller PRs will be easier once more components are in place. Added a control service which listens for and handl...\n11:59 <simian_za>  man, quite a beast\n12:11 <stanimal>  I know right?!\n03-06-19\n18:13 <simian_za>  Heya\n18:16 <Hansie>  Any ideas about a Mimblewimble multiparty UTXO/Bitcoin like multisig? Important? How to? Use case?\n18:18 <simian_za>  So just to confirm but MuSig is not directly compatiable with an MW transaction right?\n18:19 <Blackwolfsa>  As far as I have yes\n18:20 <simian_za>  Ok, so lets start with the easier case of n-of-n. The threshold multisig tends to produce more technicalities\n18:21 <Hansie>  Agreed, there is the non-linear property of MuSig that is not compatible with a MW transaction signature.\n18:21 <Hansie>  n-of-n, right\n18:22 <Hansie>  Bitcoin uses Pay to Script Hash (P2SH) functionality as a means to send funds to a P2SH payment address\n18:23 <Hansie>  A redeem script sets the conditions that must be fulfilled for the UTXOs linked to the P2SH payment address to be spent\n18:23 <Hansie>  And the miners can verify all of that\n18:25 <simian_za>  So we could use a consensus rule and just have each member tag on their public key to the output as a list. The list will need to be in the clear for miners to vaidate it though so that makes the output large AND leaks a lot of info publically\n18:27 <Blackwolfsa>  That's all for bitcoin type utxos I don't that will work for mw style utxos \n18:27 <simian_za>  With a concensus rule and custom data in the outputs Message it could but really not ideal for MW\n18:28 <Hansie>  Agreed\n18:29 <Hansie>  A MW UTXO does not need a signature to be spent, though\n18:30 <simian_za>  It needs the knowledge of the blinding factors to be demonstrated with a signature though\n18:32 <Hansie>  As far as I have it the signature for a spend Tx is not linked to the UTXO to be spent in any way, right? One must just be able to open the commitment to create a valid Tx.\n18:35 <Blackwolfsa>  In a way yes.... \n18:36 <Hansie>  ...?\n18:37 <simian_za>  the sender in a TX needs to sign their output with the blinding factor on the output\n18:38 <Hansie>  Cool, so no knowledge or proof of a previous signature is needed\n18:40 <Blackwolfsa>  Yes\n18:40 <Hansie>  simian_za, I am sure you have some ideas about that MW n-of-n, and m-of-n\n18:41 <simian_za>  So in MW the knowledge of the blinding factors and the signing is closely linked so I am guessing we can leverage the ability to add pederson style commitments together for the parties to \"combine\" their own private blinding factors into an aggregated blinding factor\n18:42 <simian_za>  Schnorr signature can also be aggregated for the signing part\n18:42 <Hansie>  And keep it secret?\n18:42 <Hansie>  The blinding factors I mean\n18:43 <Hansie>  Oh I see, it is private\n18:45 <simian_za>  The parties can supply the public key of their blinding factors and then when they add them they should end up with a usable public blinding term\n18:46 <Hansie>  Yip, makes sense\n18:46 <Blackwolfsa>  Okay but how about m of n\n18:47 <Hansie>  Blackwolfsa, I remember you speaking about the Bulletproof as well. What about that? And how to construct for n-of-n?\n18:49 <Hansie>  ^range proof^\n18:49 <Blackwolfsa>  As far as I have you can construct a bulletproof for that if you share some of the inner details\n18:49 <Blackwolfsa>  But you add extra rounds of communication to the TX construction \n18:52 <Hansie>  But that is important, right?\n18:55 <Blackwolfsa>  Define important? \n18:55 <Blackwolfsa>  A rangeproof is a crucial part of a the mw system\n18:56 <Hansie>  Ok, so we need that, even with some comms overhead\n18:57 <Blackwolfsa>  Yeah\n18:58 <Hansie>  So that just leaves the m-of-n. Maybe some people can share some parts of the a missing person's blinding factor\n18:59 <sarang>  I only caught the last bit of this... was the question about aggregating Bulletproofs?\n18:59 <simian_za>  sounds like a job for Shamir Secret Sharing\n19:00 <Blackwolfsa>  No not really, the idea is that you construct a bulletproof where your commitment is vG + (k1+k2) H \n19:00 <Blackwolfsa>  But not single party has k1 and k2\n19:01 <Hansie>  simian_za: Yes, that's it! And with Pedersen Verifiable Secret Sharing shenanigans can be ruled out, dealer and receiving parties alike.\n19:01 <sarang>  Ah, so a different \"level\" of MPC, in effect, from the existing method\n19:02 <Hansie>  sarang: Yip, that is it\n19:03 <Hansie>  Range proofs cannot be constructed without knowledge of the commitment, so we need to keep the secrets and be able to construct it\n19:04 <Blackwolfsa>  Yes you have to share the variables t1, t2 and TX as far as I know \n19:05 <sarang>  I don't have the paper in front of me, but are those terms homomorphic in gamma (the mask)?\n19:07 <Blackwolfsa>  in a sense, but not really\n19:08 <sarang>  By that I mean that I'm wondering if those terms could be jointly computed without player trust\n19:08 <Blackwolfsa>  like MPC someone takes the lead to publish the final bulletproof but every party still has to compute part of it\n19:08 <sarang>  Similarly to how they're done for the full MPC\n19:08 <sarang>  Blackwolfsa: sure\n19:08 <sarang>  the question is whether or not that can be done within a single commitment\n19:08 <sarang>  without trust\n19:08 <Blackwolfsa>  how do you mean single commitment?\n19:09 <sarang>  If I'm reading this correctly, you and I jointly form a commitment, each with our own share of the masks\n19:09 <sarang>  Is that correct?\n19:09 <sarang>  And we wish to generate a bulletproof proving range\n19:09 <Blackwolfsa>  yes\n19:09 <Blackwolfsa>  the idea being, you pick say k1 and I pick k2 as our masks\n19:10 <sarang>  We know how to do this for untrusted parties doing separate commitments (the bulletproofs MPC) using the homomorphicity of range proof elements\n19:10 <sarang>  I'm wondering if a similar approach could be taken within a single commitment's range proof MPC\n19:10 <sarang>  (I don't have the paper in front of me atm)\n19:12 <Blackwolfsa>  but I generate I bulletproof for vH + k2G and you for vH + K1G, by sharing some of the variables(if I remember correctly t1, t2, tx), we both calculate the same bulletproof for vH + (k1+k2)G with neither knowing the others mask\n19:12 <Blackwolfsa>  but I think you can, I see no reason not to. \n19:12 <Blackwolfsa>  You are never actually revealing your mask to the other party\n19:14 <sarang>  A big question will be whether or not you need/want to formally show this is still zero knowledge\n19:14 <sarang>  the original MPC is not, AFAICT, unless you do round-robin sharing of all partial proofs\n19:15 <Blackwolfsa>  as far as I know this is, a 3rd party validating the bulletproof does not know it was constructed in this way, it only sees a comitment vH + kH\n19:15 <sarang>  Right, but between the players\n19:16 <sarang>  The MPC gets tricky with this, and it's sort of glossed over in the paper and the dalek implementation\n19:18 <Blackwolfsa>  I have not exactly played around with this or did it first hand but as far as I know its only important that one party knows the complete commitment. But all demonstractions of this I have seen shows every party knows the value. \n19:18 <Blackwolfsa>  I am understanding the statement correctly?\n19:20 <sarang>  By \"complete commitment\" do you mean the mask value as well, or just the resulting group element?\n19:24 <Blackwolfsa>  just the resulting group element\n19:25 <sarang>  Well, if one party knows the full mask then it's straightforward :D\n19:25 <Blackwolfsa>  but I am not exactly 100% sure\n19:27 <Blackwolfsa>  say you have 2 parties, one needs to know v + k1 + k2G , the other k2. But no party should know all 3. \n19:29 <sarang>  OK, then I might be misunderstanding the desired construction here\n19:32 <Blackwolfsa>  the idea is that you have utxo, that no single party can spend\n19:33 <sarang>  Right. This is complicated when commitments directly represent spend control (as opposed to Monero, where they are auxiliary)\n19:36 <Blackwolfsa>  yip, thats true..\n\n```\n",
    "title": "Tari Protocol Discussion 40",
    "date": "2019-06-03T11:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed Multi party UTXO's. Below is the TL;DR on Monday's conversation (full transcript included below):  Bulletproofs are a key part of MW transactions  Signatures...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-40.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "40"
  },
  {
    "slug": "2019-05-27-tari-protocol-discussion-39",
    "content": "\nOn Monday, the Tari community discussed the Tari Digital Assets Network. Below is the TL;DR on Monday's conversation (full transcript included below, only edited for spelling):\n\n* Comprises exist between speed and decentralisation\n* Should try and minimize communication\n* Dag's seem promising\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n```\nToday's dev chat should be pretty interesting\n18:02 <@CjS77>  For those not familiar with the idea, the Tari Digital Assets Network is our proposed smart contracts platform as described here: https://rfc.tari.com/RFC-0300_DAN.html\n18:04 <@CjS77>  We've chatted at length about Validator nodes and committees, but we've never discussed how these VN committees reach consensus on the state of the contracts they're managing\n18:04 <@CjS77>  I think it's a good time to open up this topic to discussion\n18:06 <@CjS77>  To summarise, VN committees are\n18:06 <@CjS77>  * A set of servers entrusted by an Asset Issuer (AI) to manage the state and handle state transitions for the AI's digital asset(s).\n18:06 <@CjS77>  * Ultimately selected by the AI, but _could have been_ self-nominated\n18:07 <@CjS77>  * Potentially adversarial (One doesn't need permission to operate a VN and nominate it for Asset Committees)\n18:08 <Hansie>  How big would the committees typically be? I guess that could influence the consensus mechanism.\n18:08 <@CjS77>  So therefore, if an AI wanted to run a decentralised digital asset; operated by nodes that it doesn't know or control, then there needs to be a solid consensus and incentive system to maintain the integrity of the DAN\n18:10 <@CjS77>  Hansie: The AI will have a say, but I'd imagine most committees would be 1-5 large. But I envisage a long tail with some DAs desiring high censorship resistance requesting around 100 nodes\n18:10 <simian_za>  So a users wallet will issue instructions to a single VN in the committee or all of them?\n18:11 <Hansie>  Yes, there is the communication angle as well.\n18:12 <@CjS77>  IRC  RFC-0172 covers that\n18:13  * simian_za reminds himself\n18:14 <Blackwolfsa>  But 100 nodes would take long to reach consensus \n18:14  * @CjS77 A quick scan of 172 suggests it hasn't been explicitly stated there\n18:14 <Hansie>  I think we can assume the way wallets will communicate with committees will be independent of the consensus mechanism they employ\n18:15 <@CjS77>  ^ Yes.\n18:15 <Hansie>  So what are the driving forces to pick a consensus mechanism? Could there be a choice?\n18:15 <@CjS77>  Yes, there's a definite trade-off between speed and decentralisation Blackwolfsa\n18:16 <simian_za>  Hansie: I don't think that is strictly true, consensus protocols often deal with how instructions are distributed/passed around the committee?\n18:17 <@CjS77>  Hansie: Off the top of my head, I'd say that we need something with good liveness properties (i.e. is fast), while being resistant to indeterminate errors (i.e. BFT)\n18:18 <neonknight642>  The choice of consensus mechanism also affects the amount of communication required, which should be minimized\n18:19 <simian_za>  so the goal is to minimize the amount of data passed around and how many rounds it takes to reach consensus which is proportional to latency?\n18:19 <Blackwolfsa>  Bft should reduce traffic, but majority should make consensus easier\n18:19 <@CjS77>  Which is a different issue to how the initial instruction is presented to the network\n18:20 <Hansie>  simian_za: Maybe we can separate delivering wallet instructions/requests from the consensus itself, i.e. assume all/enough VNs know what to do next.\n18:21 <@CjS77>  Bandwidth minimisation is a secondary goal imho. Priority is safety and liveness. (Although I suspect high liveness will favour lower bandwidth consumption anyway)\n18:21 <simian_za>  Sure, though if the wallet sends the instruction to all VNs simultaneously then there is an element of the consensus algorithm taken care of: All VNs receive an uncorrupted instruction\n18:21 <neonknight642>  I don't think a wallet should trust a single VN, but should select a subset of the committee\n18:22 <@CjS77>  Though I could send an invalid instruction :)\n18:22 <@CjS77>  \"Send all teh stuffs to me\"\n18:23 <@CjS77>  neonknight642: Doesn't the message get sent to any Node first?\n18:23 <simian_za>  if one VN would reject that then all of them would. Isn't the consensus algorithm more about how the VNs distribute the instruction they are voting on AND their and any other VNs votes they have collected during the negotiation?\n18:24 <Hansie>  One consensus model is for a VN to process instructions as fast as possible and to then communicate their decision/vote to all other committee members. When enough VNs have signed an instruction it becomes valid.\n18:25 <neonknight642>  only if the wallet hasn't previously performed the discovery of the committee members, otherwise the wallet can establish direct P2P with them\n18:26 <@CjS77>  What you didn't know, simian_za is that the VN is colluding with me and signs it as a valid instruction. So it's up to the other nodes to reach agreement that we're up to shananigans\n18:26 <Hansie>  I do not think it would hurt if a wallet knows who all the committee members are and to then send the same instruction to all of them.\n18:27 <simian_za>  Man I love me some shenanigans!\n18:28 <@CjS77>  Not to get too off-track here, but may I suggest that a PoW blockchain is UNSUITABLE for this task?\n18:28 <Blackwolfsa>  Agreed\n18:29 <simian_za>  agreed, so what is the main issue? The VNs telling the rest of the committee what their vote is?\n18:30 <Hansie>  Something like that, and to get others to agree\n18:30 <@CjS77>  Also, tyo decide on the ORDER of competing, incompatible instructions\n18:30 <@CjS77>  (these might not even be malicious)\n18:30 <simian_za>  ahhh, that's a tricky addition\n18:31 <@CjS77>  e.g. If Instruction 1 -> 2 -> 3 is valid, but 2 -> 1 -> 3 would be invalid for some reason\n18:32 <Hansie>  We have the checkpoints as well, that can act as some sort of forced syncing of the asset state. Where all validated (i.e. with enough votes) instructions can be confirmed.\n18:33 <Hansie>   A little bit of chaos could maybe be allowed between checkpoints.\n18:34 <Blackwolfsa>  If the order of 2-1-3 is important, two should point to some order 1 which the vn should see as missing or orphaned\n18:35 <@CjS77>  Well, that's the nub of the consensus problem. Everyone needs to agree on the same order\n18:35 <neonknight642>  The consensus protocol should also handle cases where a bad VN signs two or more competing instructions and distribute them to different subsets of the committee.\n18:36 <@CjS77>  Yup\n18:36 <@CjS77>  Only a BFT algo can deal with that (AFAIK)\n18:37 <Hansie>  Yes, the instructions (or sequence of instructions) with the BFT threshold votes must win.\n18:37 <@CjS77>  Bear in mind that order isn't ALWAYS important. e.g. if 1 -> 2 -> 3 and 2-> 1 -> 3 lead to the same state, we should just let that go\n18:38 <Hansie>  Yup\n18:38 <@CjS77>  So this leads me to think that a DAG-like structure might be what we're after\n18:39 <Hansie>  There, you said it, the magic word\n18:40 <Hansie>  Do we know of DAG implementations that are in production?\n18:41 <simian_za>  If memory serves the ones described in TLU are described as handling blocks of transactions, do they also work well for single instructions?\n18:42 <@CjS77>  Isn't a single tx just a special case of a block?\n18:44 <simian_za>  I guess so, let me rephrase: How do they scale in the case of a single TX per block?\n18:46 <simian_za>  in terms of how many rounds of comms are required between N nodes for each instruction for all the nodes to end up with the same DAG?\n18:46 <Hansie>  Maybe we should consider removing the block layer, just DAG-stitch all valid instructions together, and wait for pending (not yet valid) instructions to mature.\n18:47 <@CjS77>  mature = reach consensus?\n18:47 <Hansie>  Yup\n18:48 <@CjS77>  Yeah -- I mean we _could|_ have \"blocks\" -- more like small batches of instructions. Esp if tx's are flying in thick and fast (e.g. in a hypothetical future where Big Neon is selling out a Beyonce concert)\n18:49 <@CjS77>  But otherwise I agree\n18:49 <Hansie>  The batches makes sense yes\n18:50 <@CjS77>  And consensus will typically be reached within a few ms. -- depending on the the number of rounds and messages, which is the issue simian_za has been trying to raise :)\n18:50 <@CjS77>  For comparison, PBFT has O(n^4) messages\n18:50 <@CjS77>  where n is the size of the committee\n18:51 <@CjS77>  but linBFT makes some adjustments and reduces that to O(n)\n18:52 <@CjS77>  https://arxiv.org/abs/1807.01829\n18:52 <simian_za>  Ja, its feels to me that the main metric for evaluating how efficient a given consensus algorithm is when running at the ragged edge (i.e. instructions are validated as quickly as they arrive) is how many rounds of comms there need to be.\n18:52 <simian_za>  that sounds promising\n18:52 <Hansie>  Agreed\n18:53 <@CjS77>  I suspect that any robust system will have at least 3 rounds (ala a Sigma protocol). Anything less than that and my hunch is that there's an attack of some sort lurking. This is just an opinion and isn't backed up by any evidence\n18:55 <@CjS77>  linBFT tl;dr:\n18:55 <@CjS77>  There's a leader for the round, who submits a hash of the new state to all peers (n messages)\n18:55 <Hansie>  On the earlier topic, because we can do not have 'block' to be mined will and 'batch' the instructions, a batch of valid (consented) instructions could be ordered in some special deterministic way to represent a block. So that all VNs can arrive at the same answer.\n18:55 <@CjS77>  Nodes, confirms receipt of the hash (n messages)\n18:56 <Hansie>  CjS77: Agreed\n18:56 <@CjS77>  The leader collects 67% confirmations and again sends out a message to all nodes saying \"y'all can commit to this\" along with a n-of-m signature proving as much\n18:57 <@CjS77>  The nodes reply with \"sweet, updated\".\n18:57 <@CjS77>  The leader responds with \"67% have updated, you can finalise\", along with a threshold signature\n18:57 <@CjS77>  So it's a lot of messages, but O(n)\n18:58 <@CjS77>  If there are problems, there are a different set of messages (I just described the happy path)\n18:58 <simian_za>  It sounds so easy going, I like it\n18:58 <@CjS77>  And there's another optimisation that can reduce things to O(log n) messages that I won't get into\n18:59 <neonknight642>  If there is a problem, the wallet can always resubmit the instruction to a different VN in the committee\n18:59 <simian_za>  What happens when the leader doesn't perform? A timeout?\n18:59 <@CjS77>  Yeah, another leader gets elected after a timeout\n18:59 <@CjS77>  But the election is straightforward and takes n messages again\n19:01 <@CjS77>  The algorithm is evocatively named \"Hot Stuff, the BFT devil\"\n19:01 <simian_za>  How often does the leader change?\n19:01 <@CjS77>  And on that bombshell, it's time to go\n19:01 <simian_za>  Should probably just read the paper :)\n19:01 <Hansie>  Greatness\n19:01 <simian_za>  g'night\n19:02 <@CjS77>  simian_za: I'm thinking that the first VN that gets an instruction from \"outside\" can just take leadership for that instruction.\n19:03 <@CjS77>  So leaders potentially change with every instruction\n19:03 <simian_za>  then there is just an issue with ordering if two VNs get different instructions at the same time. Does the election process break a tie like that?\n19:04 <Hansie>  My thinking as well. Multiple VNs can receive the same instruction almost simultaneously.\n19:04 <@CjS77>  We'll have to think that through, because linBFT just describes the algo and doesn't try and use it in a DAG context\n19:05 <@CjS77>  Indeex the race condition scenario must be handled without any snags\n19:06 <@CjS77>  I suspect, when the hash is sent round, nodes will start to say \"I've already seen this one\" and not send the receipt\n19:06 <@CjS77>  But we must work through the logic very carefully\n19:06 <@CjS77>  Perhaps in our next meeting :)\n19:07 <simian_za>  Awesome, the leader based method does seem like the way forward to me\n19:07 <@CjS77>  My initial aversion to LB methods is abating somewhat; but only because there's a very elegant way to pick a new leader very quickly\n19:08 <Blackwolfsa>  But what do we do if you keep attacking the leader? \n19:09 <simian_za>  indeed, the leader needs to be very transient but a mediator simplifies many parts of the protocol\n19:10 <Hansie>  What about leaderless BFT protocols?\n19:10 <Hansie>  \"The protocols differ from the traditional consensus protocols and the Nakamoto consensus protocols by not requiring an elected leader. Instead, the protocol simply guides all the nodes to consensus.\"\n19:11 <@CjS77>  > if you keep attacking the leader?\n19:11 <@CjS77>  Implies you're attacking the entire VN\n19:11 <@CjS77>  committee\n19:12 <@CjS77>  Assuming it takes time to a) Find out the Ip of the new leader and b) switch DDOS resources onto that machine\n19:13 <@CjS77>  ^^ I don't know of those assumptions are valid or not. Network experts can advise. fluffypony?\n19:13 <@CjS77>  Hansie: Leaderless BFT would be better, but all the ones I've read about are MUCH more complicated\n19:14 <@CjS77>  and complexity is the enemy of good (or whatever) )\n19:14 <Hansie>  True\n19:15 <@CjS77>  lol. My typing. Blackwolfsa -- maybe you should run this transcript through a spell checker before posting as a blog :)\n19:16 <Blackwolfsa>  Will do, my vscode has one, will fix spelling \n19:18 <@CjS77>  Here's a reference for HotStuff: https://ui.adsabs.harvard.edu/abs/2018arXiv180305069Y/abstract\n19:19 <@CjS77>  Here's a better one: https://arxiv.org/abs/1803.05069\n```\n",
    "title": "Tari Protocol Discussion 39",
    "date": "2019-05-27T11:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed the Tari Digital Assets Network. Below is the TL;DR on Monday's conversation (full transcript included below, only edited for spelling):  Comprises exist...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-39.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "39"
  },
  {
    "slug": "2019-05-23-tari-protocol-discussion-38",
    "content": "\nOn Thursday, the Tari community discussed the initial draft of RFC-0322. Below is the TL;DR on Thursday's conversation (full transcript included below):\n\n* General draft looks good\n* Draft will be merged in with minor tweaks done via additional PR's\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Thursday‚Äôs discussion\n```\n11:09 <@CjS77>  I've gathered Monday's thoughts together into an RFC draft: https://github.com/tari-project/tari/pull/315\n\nInitial draft of RFC-0322 by CjS77 ¬∑ Pull Request #315 ¬∑ tari-project/tari\nA rough initial draft of the Validator registration process. Description Motivation and Context How Has This Been Tested? Types of changes Bug fix (non-breaking change which fixes an issu...\n11:11 <simian_za>  Looking good, failing some tests though. Impressive for an RFC doc\n11:12 <neonknight64>  I like that the VN registration can be renewed without it resulting in a NodeID change\n11:13 <Blackwolfsa>  Yeah I think it's an important required feature \n11:13 <Hansie>  I like the `A counter indicating that this is the n-th consecutive renewal.` part\n11:14 <Hansie>  Would be really valuable for the Tari eco system, AIs as well as users.\n11:14 <simian_za>  So we are going to create a chain of kernels that keep track of how many times a given VN registration has been renewed?\n11:15 <@CjS77>  I'd like to invite folks to think of attacks that could exploit the registration process as currently described\n11:15 <Hansie>  Yip, that is really cool\n11:16 <Hansie>  Would  `VN_Deposit` be market driven?\n11:18 <@CjS77>  You may notice, a pro of this approach: Changes in the registration deposit are elegantly handled\n11:19 <@CjS77>  I don't think there's that much of a supply-demand dynamic to make the deposit market driven.\n11:20 <@CjS77>  One of its key goals is Sybil resistance -- so the value (in Tari) may need to be adjusted from time to time (during a network upgrade) to account for any fluctuation in Tari's price\n11:20 <Blackwolfsa>  We should just \"update\" the values somehow to keep it expensive enough to be sybil resistant \n11:21 <Hansie>  W.r.t approach, yes, it would stay valid for the current term and if the value changed it could be adapted with the next registration.\n11:24 <neonknight64>  Keeping track of the number of registration renewals of a VN is a nice mechanism that Asset Issuers can use to find more \"reliable\" VNs\n11:25 <Blackwolfsa>  But it could also be seen along the lines of the rich get riches... \n11:45 <neonknight64>  or longer running VNs preferred over new VNs.\n13:54 <@CjS77>  Are we're happy to merge the draft in as is? There may be minor tweaks in future, but unless you can post comments now, I'd rather not have this sitting as a PR for too long\n```\n",
    "title": "Tari Protocol Discussion 38",
    "date": "2019-05-23T04:00:00.000Z",
    "excerpt": "On Thursday, the Tari community discussed the initial draft of RFC-0322. Below is the TL;DR on Thursday's conversation (full transcript included below):  General draft looks good  Draft will be...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-38.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "38"
  },
  {
    "slug": "2019-05-16-tari-protocol-discussion-36",
    "content": "\nOn Thursday, the Tari community discussed the Validator Node committee selection strategy. Below is the TL;DR on Thursday's conversation (full transcript included below):\n\n* Asset issuer has full control\n* Selects VN's he wants for his/her asset\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Thursday‚Äôs discussion\n```\n11:00 <@CjS77>  It's dev chat time - Today's topic: Validator Node committee selection\n11:01 <@CjS77>  See https://rfc.tari.com/RFC-0311_AssetTemplates.html for some context on VN committee selection options RFC-0311: Digital Asset templates - The Tari Network: RFC library The Tari network RFC library and documentation\n11:04 <@CjS77>  With `CREATOR_ASSIGNED` committees, the process should look something like:\n11:04 <@CjS77>  1. Asset Issuer (AI) submits an asset creation instruction with a list of VNs he/she wants in his/her committee\n11:04 <@CjS77>  2. There's a timeout within which nominated VNs need to accept their nomination\n11:07 <Hansie2>  So we assume VN discovery is done and that the asset issuer has a list of viable VNs...\n11:07 <simian_za>  For CREATOR_ASSIGNED that assumption will be correct I believe\n11:08 <@CjS77>  3. After the timeout (let's call it nomination period), if insufficient VNs from the `trusted_node_set` haven't accepted the nomination, then the instruction should be rejected.\n11:08 <Blackwolfsa>  I dont think we have to assume, I think the AI needs to wait for VN's he doesnt poll VN's they poll him\n11:09 <@CjS77>  \"Rejection\" means either an explicit rejection message from the AI, or it hits a timeout\n11:12 <Hansie>  Ok, makes sense, then the asset issuer has to try again\n11:12 <neonknight64>  Will creator_assigned and network_assigned be managed by the Token Wallet?\n11:12 <Blackwolfsa>  I think so\n11:12 <@CjS77>  Yes, we could also consider a case where the AI puts out N pubkeys, and selects a committee m < N from that\n11:16 <Hansie>  Another method could be (a) this is the asset I want to create/created, (b) VNs please tell me if you are interested, (c) thank you I selected these VNs.\n11:24 <@CjS77>  Agree - Asset creation instruction issuance -> Nomination phase -> Asset initialisation / creation phase\n11:25 <@CjS77>  With timeouts in each phase\n11:26 <neonknight64>  I think the AI could privately ask VNs to be part if a committee or broadcast a public request to all the VNs and then select the committee from the subset of VNs that accepted the request. The nomination phase can be private or public.\n11:26 <@CjS77>  For `CREATOR_ASSIGNED` that makes sense\n11:55 <Hansie>  Maybe we also need a fee locked up in the base layer that coincide with the initial asset creation instruction\n11:56 <Hansie>  That could be value in the clear linked as metadata, in such a way it could be validated by prospective VNs\n11:57 <simian_za>  Ok, so the AI will put an Asset Creation transaction on the base layer with a time lock as long as the nomination period and as you say put the value he is locking up in the clear so that it can be verified by prospective VN's\n11:59 <simian_za>  then to start the nomination process for CREATOR_ASSIGNED the AI will send a nomination message directly to their selected prospective VNs or for NETWORK_ASSIGNED assets the call for nomination will be broadcast on the network publically\n12:01 <neonknight64>  Once the VNs have received the call to be part of the committee that could manage the newly created asset, they could nominated themselves to the Token wallet of the AI.\n12:02 <simian_za>  yes that makes sense\n12:02 <Blackwolfsa>  The AI will then select and inform the VN's whom it selected based on some token wallet criteria\n12:03 <neonknight64>  The TokenWallet could also prioritise the VNs that accepted according to things like reliability etc.\n12:04 <stanimal>  VN's could then post their collateral\n12:04 <simian_za>  on the base layer right?\n12:04 <stanimal>  Yup\n12:06 <Hansie>  Great, so when all of this are done, the asset issuer and committee ca perform the 1st checkpoint Tx on the base layer and the committee can start to manage the asset.\n12:06 <simian_za>  ship it\n```\n",
    "title": "Tari Protocol Discussion 36",
    "date": "2019-05-16T04:00:00.000Z",
    "excerpt": "On Thursday, the Tari community discussed the Validator Node committee selection strategy. Below is the TL;DR on Thursday's conversation (full transcript included below):  Asset issuer has full...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-36.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "36"
  },
  {
    "slug": "2019-05-16-tari-protocol-discussion-37",
    "content": "\nOn Monday, the Tari community discussed the Validator Node registration. Below is the TL;DR on Monday's conversation (full transcript included below):\n\n* Require some timelocked funds to be sybil resistant\n* It needs to be renewable\n* Validator nodes require random IDs\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Thursday‚Äôs discussion\n```\n18:09 <Hansie>  Hi there\n18:10 <Hansie>  We have not discussed VN registration in a long time\n18:11 <Hansie>  That would be `RFC-0322: Validator Node Registration`\n18:11 <Hansie>  Anyone care to discuss?\n18:12 <simian_za>  Sho, it has been a while. I suppose it will be worth revisiting now that we have spent more time on the base layer stuff\n18:12 <Hansie>  Yip\n18:13 <simian_za>  So the goal of the registration was to tie a VNs identity to a base layer transaction with a cost that mitigates Sybil attacks right?\n18:14 <Hansie>  Yes, that sounds about right.\n18:14 <neonknight64>  and to obtain a node ID for the communication layer\n18:14 <simian_za>  We didn't want the registration fee to be paid to anyone in particular, we just wanted to tie it up so it cannot be spent for a certain period\n18:16 <Hansie>  So let us continue with `Assumptions - VN Registration: `, then `Assumptions - Game theory` and lastly `Use cases:`. Is that a plan?\n18:16 <neonknight64>  we also need a mechanism to allow the registration to be renewed.\n18:16 <stanimal>  How long would that be locked up for?\n18:17 <Hansie>  We previously had suggestions of fixed term (e.g. 6 months)\n18:18 <simian_za>  And this registration can be used for the VN to participate in multiple assets?\n18:20 <Hansie>  Yes, I think so. The amount and time-lock period could be confirmed with modelling  -  'Network Analysis'\n18:21 <stanimal>  I would say so, that would allow them on the network and allow them to be discoverable\n18:22 <simian_za>  Cool, well if it allows for reuse then 6 months seems reasonable\n18:22 <stanimal>  ^ Join the network as a VN, they would still be able to join the network (as a wallet?) to pay the registration fee presumably\n18:23 <simian_za>  What do you mean by wallet? We can't expect end-users with asset wallets to have to register in this way?\n18:24 <simian_za>  Hansie: I feel it might be more useful to start with the `Use cases` so why know what functionality we need this process to serve\n18:25 <neonknight64>  Stanimal, I believe the wallet will be a separate entity with its own node id,  but the wallet can pay the registration fees on behalf of the VN allowing the VN to join with the registered node id\n18:25 <stanimal>  Well it's a bit of a chicken and egg situation, in order to obtain your NodeID to be a VN on the network, you'll need some way to pay the registration and claim your NodeID\n18:26 <simian_za>  but the payment happens on the base layer where NodeIDs can be chosen by the wallets?\n18:26 <stanimal>  Yup, guess this could be part of the VN software\n18:27 <neonknight64>  Wallets do not propagate messages and can derive a node id from the its identification public key\n18:28 <neonknight64>  no base layer registration needed\n18:28 <simian_za>  Ok, so the purpose of VNs registering in this way is to secure a NodeID for use on the second layer that is not chosen or derived by their wallet but by the base layer network making it much more secure\n18:29 <simian_za>  they need this kind of NodeID if they want to participate in DAN committees\n18:29 <stanimal>  Join as a wallet, pay the registration, obtain the NodeId and rejoin with the new NodeId - correct, the base layer is a random oracle\n18:31 <simian_za>  So that's really the main use case here, is to make sure that the NodeID that they are using when accepting and sending messages as part of an Asset committee comes from a NodeID that was fairly chosen by the random oracle\n18:31 <Hansie>  Makes sense\n18:32 <Blackwolfsa>  It's only the VNs that need that random ID right? \n18:32 <simian_za>  it needs to cost something so that its expensive to try \"mine\" a NodeID for malicious purposes\n18:33 <Hansie>  I would say properly registered and identifiable, not really 'fairly chosen by the random oracle'\n18:33 <stanimal>  Exactly, prevent adaptive join/leave attacks and help randomize network topology - which benefits the network as a whole (base layer included)\n18:33 <simian_za>  well it is though, maybe not fairly but it was produced by the random oracle. Thus the NodeID they receive will be \"random\"\n18:34 <simian_za>  so nix the word \"fairly\"\n18:34 <Hansie>  Ok, understood\n18:34 <Hansie>  Blackwolfsa: What else could need the random ID?\n18:35 <simian_za>  I can't think of another entity right now that would need the random NodeID\n18:35 <neonknight64>  Blackwolf.. Wallets, Token Wallets, Base Nodes and Validator Nodes need random ids\n18:35 <neonknight64>  but only VNs need to register for them\n18:35 <Blackwolfsa>  Why would they need random ID? \n18:35 <Blackwolfsa>  They could chose their own ids they just need to be unique? \n18:36 <stanimal>  However, all except VNs are currently trusted to create a random ID\n18:36 <simian_za>  the registration process is the only way to ensure the NodeID is properly random. It would be ideal for them all to properly random though but can't really be enforeced\n18:37 <stanimal>  Ye without some kind of enforceable distributed RNG\n18:37 <simian_za>  Blackwolfsa: an attacker can chose NodeIDs in a malicious way to do things like eclipse a victim but ja can't really be enforced. The VNs are actually our best defense against this\n18:37 <neonknight64>  I think every entity should have an identification key pair and a node id derived from this key pair or obtained from registering\n18:38 <Hansie>  So the registration UTXO will be time-locked and mined in the base layer... and that process will be used to identify/create the VN ID?\n18:38 <simian_za>  Hansie: Yes\n18:38 <Hansie>  So what happens when the lock expires?\n18:38 <stanimal>  neonknight64 That would mean a cost for anyone joining the network?\n18:39 <Blackwolfsa>  I think we need to allow them to extend the registration \n18:40 <Blackwolfsa>  But if that expires they should be seen as unregistered \n18:40 <stanimal>  oh nm, reread your comment - keypair OR registration ;)\n18:40 <simian_za>  I guess they can spend that UTXO, how will they be able to maintain their registration to keep their NodeID?\n18:40 <simian_za>  Maybe we should define what metadata the UTXO has? It is not just a plain mimblewimble UTXO\n18:41 <Hansie>  Yes. Maybe the registration UTXO can be spent only if it is a re-commitment to an increased term; any other spend will not be allowed. If it lapses the VN is out of action.\n18:43 <neonknight64>  Can that be done using some for of consensus rule or script?\n18:43 <Hansie>  neonknight64: Can the VN ID be determined before the Tx is mined?\n18:43 <neonknight64>  form*\n18:44 <neonknight64>  hansie, do you mean NodeID? No the NodeID cannot be determined before the time\n18:44 <neonknight64>  it must be mined\n18:44 <simian_za>  Hansie: that is a good point...the NodeID will need to be derived from some data involved in mining the transaction\n18:44 <simian_za>  so how can it be included in the metadata?\n18:45 <Hansie>  Great, so the VN nodeID cannot be part of the meta data :-)\n18:46 <simian_za>  hmm that's tricky. We can't reference the first tx if we try extend the timelock because of tx pruning...\n18:46 <neonknight64>  I original NodeID could maybe be in the metadata when the registration is renewed as the new block will produce a different NodeID\n18:46 <simian_za>  How will someone be able to verify the NodeID if the original tx gets pruned?\n18:48 <neonknight64>  Not sure, but an invalid renewal should not appear in the base layer if the NodeID transfer is incorrect.\n18:48 <Hansie>  So we can have (a) time-lock (b) type=VN registration (c) counter for consecutive registrations (d) previous nodeID (e) ...\n18:48 <Blackwolfsa>  Yes but we need to be able to verify that\n18:50 <Hansie>  A registration UTXO can only be spent/renewed by the owner as the only person that can open that commitment\n18:51 <Hansie>  Miners can validate the counter and link to the previous UTXO\n18:51 <simian_za>  Ok so another aspect of the UTXO will also be that a 3rd party needs to be able to verify the amount that is locked up\n18:52 <simian_za>  Hanise, but the previous UTXO will be pruned eventually\n18:52 <Hansie>  That one is potentially tricky\n18:53 <Hansie>  Yes, so the current UTXO identifies the previous UTXO and times the registration has been carried forward\n18:55 <simian_za>  Hmmm, going to have to ponder this some more\n18:57 <Hansie>  Agreed\n18:57 <simian_za>  Obviously, we could just ensure that these kind of TXs are not pruned but that is not ideal at all\n19:01 <Blackwolfsa>  But I think we should try out at best to avoid that\n19:05 <stanimal>  This may be dumb, but couldn't you hash the kernel for the nodeID - since there will be a base layer fee the miners choose the blinding factor making the kernel random each time (i.e not chosen by the VN)\n19:09 <Blackwolfsa>  But then it changes every time if I understand you correctly \n19:10 <simian_za>  Could reference the first kernel some how, that doesn't get pruned\n19:11 <Blackwolfsa>  That could work.. \n```\n",
    "title": "Tari Protocol Discussion 37",
    "date": "2019-05-20T11:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed the Validator Node registration. Below is the TL;DR on Monday's conversation (full transcript included below):  Require some timelocked funds to be sybil...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-37.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "37"
  },
  {
    "slug": "2019-05-07-tari-protocol-discussion-35",
    "content": "\nOn Thursday, the Tari community discussed the config strategy. Below is the TL;DR on Thursday's conversation (full transcript included below):\n\n* Use config-rs\n* Use TOML file format\n* Use clap-rs for command line integration\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Thursday‚Äôs discussion\n```\n17:55 <Blackwolfsa>  Hi everyone, I thought we could talk about configs a bit, anyone have any options on them\n18:02 <simian_za>  ini files?\n18:02 <simian_za>  :P\n18:04 <Hansie>  Do you want the configs to be cleverly handled? Or are we talking about binary dumps?\n18:07 <Blackwolfsa>  Clearly\n18:08 <stanimal>  Hi there, so suppose we need to go over: how would people want to deploy and use the Tari software as well as what format to use for configuration files (options are YAML, TOML and JSON - no not ini :P)\n18:08 <Blackwolfsa>  I was thinking of using config-rs for the config handling, it can deseriliase to a struct, and do hahsmaps\n18:09 <Blackwolfsa>  We could have multiple configs as well\n18:09 <Blackwolfsa>  And it does uni for simian\n18:09 <Blackwolfsa>  :P\n18:09 <Blackwolfsa>  Ini\n18:09 <simian_za>  Woot!\n18:12 <neonknight64>  If more than one format is used, then samples for each type should be provided.\n18:13 <Blackwolfsa>  As far as I know it works on a key value lookup. It even supports multiple formats at the same time if you want to be crazy \n18:13 <simian_za>  Should probably just settle on one and run with it. Yaml and toml is better than json I think\n18:15 <stanimal>  I suggest the precedence for configuration would be command line flags (for some config items perhaps), configuration file(s) and then environment variables - running software in docker would imply it's good to support environment variables, although configuration solely through environment variables may be unwieldy and it's completely fine to use\n18:15 <stanimal>  a configuration file with docker\n18:15 <stanimal>  As for the format, we want a format which supports comments - which leaves JSON out\n18:16 <simian_za>  Agreed on that hierarchy\n18:16 <simian_za>  So yaml vs toml? Opinions?\n18:18 <Hansie>  stanimal: Can use of environment variables be seamlessly done between Linux/macOS and Windows using these tools?\n18:18 <stanimal>  I think TOML is the best option, as it's very readable, it doesn't break randomly if you have a mistake in your indentation somewhere like yaml, you can nest keys in sections\n18:19 <stanimal>  Hansie: Environment variables will have cross platform support with standard rust\n18:19 <Hansie>  I was wondering about nesting...\n18:19 <simian_za>  Also toml is used for rust so only have become familiar with one syntax\n18:21 <Hansie>  \"Tom's Obvious, Minimal Language\"\n18:21 <stanimal>  Technically, we could probably decide on the format by looking at the file extension and using the correct deserializer - but I'm hesitant to support multiple formats as that usually results in a mess\n18:21 <Hansie>  I tend to agree with that stanimal\n18:25 <neonknight64>  A single format that supports comments seem like the best choice. TOML ftw\n18:26 <stanimal>  One thing YAML does is allows you to reference other keys in the configuration file (albeit with a somewhat ugly syntax) which could help DRY it up - AFAIK toml doesnt support this, but I somehow doubt that this will be needed in the config files\n18:31 <Hansie>  Balckwolfsa, config-rs seems pretty solid.\n18:31 <Hansie>  Blackwolfsa ^\n18:32 <stanimal>  Agreed - looks great\n18:32 <Blackwolfsa>  So looks like to toml has majority \n18:33 <stanimal>  What about a command line handler - I've used https://github.com/clap-rs/clap in the past\nclap-rs/clap\nA full featured, fast Command Line Argument Parser for Rust - clap-rs/clap\n18:34 <stanimal>  Seems to have minimal required dependencies üëç\n18:34 <simian_za>  This is going to sound wrong but +1 for the Clap\n18:35 <stanimal>  üòÜI've love to have the clap...\n18:35 <stanimal>  ...in our project\n18:36 <Blackwolfsa>  We need the clap\n18:38 <Hansie>  Yip, looks great as well\n18:52 <stanimal>  There's an issue for this: https://github.com/tari-project/tari/issues/250 - nice one to take if you're looking to start contributing. A good PR could be to add some code to base_layer to read from a given config file and deserialize to an empty config struct\nTari config file ¬∑ Issue #250 ¬∑ tari-project/tari\nDesign and build an easy to use and configure ConfigurationFile. Maybe there's a crate that can do this for us? TOML, YAML, JSON? Discuss\n18:54 <Blackwolfsa>  Looking at the examples that would be a very easy issue if you want to contribute \n```\n",
    "title": "Tari Protocol Discussion 35",
    "date": "2019-05-07T13:00:00.000Z",
    "excerpt": "On Thursday, the Tari community discussed the config strategy. Below is the TL;DR on Thursday's conversation (full transcript included below):  Use config-rs  Use TOML file format * Use clap-rs for...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-35.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "35"
  },
  {
    "slug": "2019-05-02-tari-protocol-discussion-34",
    "content": "\nOn Thursday, the Tari community discussed the storage strategy surrounding UTXO's. Below is the TL;DR on Thursday's conversation (full transcript included below):\n\n* Use LMDB\n* UTXO's stored in a MMR\n* Pruning should be carefully looked at\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Thursday‚Äôs discussion\n```\n10:32 <@CjS77>  IRC dev chat in 30 - we'll be chatting about persistence strategy for Tari\n11:01 <Hansie>  Hi, what shall we chat about?\n11:02 <Hansie>   persistence strategy?\n11:03 <@CjS77>  We've landed on LMDB as a key-value store for persisting blockchain state, but there are a few architectural decisions we could make.\n11:04 <Hansie>  Are we talking base layer only?\n11:04 <@CjS77>  For example UTXO set -- This is represented as a straight set of UTXOs, but there's also an MMR that tracks the UTXO set (since we commit to the UTXO set in every block header)\n11:05 <@CjS77>  Yes, base layer only for now\n11:05 <neonknight64>  Will the UTXO set be ordered?\n11:05 <Blackwolfsa>  it needs to be for the mmr to work\n11:05 <Hansie>  Do you mean per block?\n11:06 <Blackwolfsa>  Both per block and per total state\n11:06 <@CjS77>  Well, I'm tihnking the UTXO data itself is stored as a key-value lookup with the UTXO hash being the key\n11:06 <@CjS77>  but Blackwolfsa might have some other thoughts\n11:06 <Hansie>  Does this include the range proofs MMR as well?\n11:09 <simian_za>  The MMR is a vector right? The position in the vector is where the node is in the MMR and the data at that location is the hash of that node?\n11:16 <neonknight64>  Yes, if I remember correctly, the MMR (tree) is stored as a 1-dimensional vector\n11:20 <simian_za>  How does LMDB do when storing a linear indexed vector?\n11:25 <@CjS77>  afaik LMDB is key-value only, so you'd use the index as the key. If you pop an item from the middle of the vector so that subsequent indices change, this would be very inefficient.\n11:29 <Hansie>  So if I understand the problem we are trying to solve correctly, if we have enough meta data (e.g. structure info) for the value in the key-value pair we could just start with the 1st valid index up to the last valid index (or any other sorting order) and store it. When reading it back the MMR could be reconstructed efficiently?\n11:30 <moneromooo>  Popping an item in the middle is not actually inefficient.\n11:31 <@CjS77>  Surely if all the keys have to change, that would suck?\n11:34 <simian_za>  If you are implementing an indexed vector on top of a hashmap it does feel like it will be difficult to remove an item in the middle as you need to shuffle the keys above that index down to not leave a gap in the indices\n11:34 <moneromooo>  If they *all* do, yes.\n11:38 <simian_za>  but if the indices don't need to be shuffled its totally fine and in MMRs they dont change?\n11:50 <Blackwolfsa>  I was thinking about storing the indexes aka mmr and the actual data separately in lmdb\n11:51 <Blackwolfsa>  Because even if you prune the mmr, the index and or hashes never change\n```\n",
    "title": "Tari Protocol Discussion 34",
    "date": "2019-05-02T13:00:00.000Z",
    "excerpt": "On Thursday, the Tari community discussed the storage strategy surrounding UTXO's. Below is the TL;DR on Thursday's conversation (full transcript included below):  Use LMDB  UTXO's stored in a MMR ...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-34.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "34"
  },
  {
    "slug": "2019-04-18-tari-protocol-discussion-33",
    "content": "\nOn Thursday, the Tari community discussed the aggregating bulletproofs for transactions. Below is the TL;DR on Thursday's conversation (full transcript included below):\n\n* Concerns where risen about reducing the security\n* Aggregating bulletproofs reduces size dramatically\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Thursday‚Äôs discussion\n```\n11:03 <@CjS77>  Proof aggregation is possible already actually\n11:04 <@CjS77>  On the point of bullet proof range proofs (I just call them range proofs, or RPs from now on), as many of you know, you get space savings for aggregating multiple proofs together.\n11:06 <@CjS77>  In a transaction context, a single RP is ¬±670 bytes, but if you had 10 outputs, and you knew all the values and spend keys, you could create a single range proof that's significantly less than 6700 bytes\n11:08 <@CjS77>  If there are multiple parties, and the parties don't want to share their values/spend keys (which is 100% of the time), there's also a multiparty protocol which allows the parties to construct the joint proof. This goes over 3 rounds and so, in theory, could be pulled into our multi-recipient transaction protocol.\n11:09 <@CjS77>  So here's my thoughts on why ding all this isn't worthwhile (but open to counter-arguments):\n11:11 <@CjS77>  * 90%+ transactions will have 2 outputs, and the savings in size aren't that much for 1 aggregated 2-party proof over 2x single party proofs.\n11:11 <@CjS77>  * Aggregated proofs link UTXOs together in a block, reducing privacy\n11:11 <@CjS77>  * I'm sure there are some non-trivial considerations when implementing block validation with aggregated RPs\n11:20 <Blackwolfsa>  My thoughts are kinda plain on this, I dont think its worth the effort to increase the complexity in code to support this as will wont be seeing much longterm benefits and they reduce privacy\n11:21 <Blackwolfsa>  The only positives I can see is that they might reduce transaction costs\n11:21 <Blackwolfsa>  if you have multiple utxo's and if they are in multiples of 2\n11:33 <neonknight64>  When 2 or more outputs share a RP, that RP with linking data will have to live as long as the last unspent output. I think it adds unnecessary complexity for that amount of space saving.\n11:38 <Blackwolfsa>  that is true as well, you cant prune one output as long as its linked to another. \n11:42 <Hansie>  I kind of like the idea that we can have aggregate-able RPs, apart from all the counter arguments here and possible implementation challenges. It depends on how Tx fees will be calculated; this could mean much cheaper Txs for end users and could reduce blockchain size.\n11:44 <Hansie>  Imagine the amount of collective savings in fees if an employer wants to pay 10s or 100s of employees in one Tx.\n11:57 <Blackwolfsa>  if you have 128 (used this cuz the bulletproof paper has agg sizes on this) outputs the total bytes for the output is 90624 bytes, if you aggregated them you required 541796 bytes\n11:57 <Blackwolfsa>  that means you actually pay more\n11:57 <Blackwolfsa>  this is going by the assumption that every utxo needs to store its sibling utxos\n11:58 <Blackwolfsa>  math = 33 *128 + 675*128 for multi outputs\n11:58 <Blackwolfsa>  33*128*128 + 1124 for aggregated rp\n11:59 <Blackwolfsa>  where a commitment is 33 bytes and the single RP is 675 while the aggregated one is 1124\n12:15 <neonknight64>  For 128 outputs, If you use a RP pool and every output stores the a link (u64) to the RP in the pool then you need 13540 bytes compared to every output storing its own RP which will be 90624 bytes. Calc: total_bytes=n_outputs x (commitment_byte + u64_link_bytes)+agg_RP_bytes\n12:17 <neonknight64>  Only need 14.9% of the original bytes\n12:27 <neonknight64>  Sorry, made a small mistake. The aggregate RP version will use 13540 bytes as previously posted but having a RP for every output of the 100 outputs (not 128) will require 74100 bytes. Aggregate RP with links only need 18.2% of the original bytes.\n12:29 <tar1b0t_>  [mattermost] <CjS77> How big are 2 aggregated RPS?\n12:41 <Hansie>  From Benedikt B√ºnz's slides on 'Bulletproofs: SHORT PROOFS FOR CONFIDENTIAL TRANSACTIONS AND MORE'\n12:42 <Hansie>  1x RP -> 672 bytes,    2x RP -> 738 bytes,    10x RP -> 928bytes\n12:45 <tar1b0t_>  [mattermost] <CjS77> Wow, that is actually quite a big saving, even for 2 RPs\n12:48 <Hansie>  From: https://cyber.stanford.edu/sites/g/files/sbiybj9936/f/bpase18.pptx\n12:49 <Hansie>  It is impressive yes\n13:52 <sarang>  Batching the verification is also hugely useful for time savings, but I don't believe dalek supports it yet like Monero does\n13:53 <sarang>  Also the MPC security for 3 rounds is still very unclear\n```\n",
    "title": "Tari Protocol Discussion 33",
    "date": "2019-04-18T08:00:00.000Z",
    "excerpt": "On Thursday, the Tari community discussed the aggregating bulletproofs for transactions. Below is the TL;DR on Thursday's conversation (full transcript included below):  Concerns where risen about...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-33.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "33"
  },
  {
    "slug": "2019-04-16-tari-protocol-discussion-32",
    "content": "\nOn Monday, the Tari community discussed the mempool RFC. Below is the TL;DR on Monday's conversation (full transcript included below):\n\nRFC 0190 Mempool\n\n* Proposed to use 4 mempools: ransaction Pool, Pending Pool, Orphan Pool and Reorg Pool\n* The mempools should be ordered with a priority\n* Transactions should be ordered with a priority\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n```\n18:00 <neonknight64>  Hello, I wonder if we can't talk about RFC0190 - Mempool: https://github.com/tari-project/tari/pull/229\n18:02 <neonknight64>  The basic idea is that the Mempool consist of four sub pools: Transaction Pool, Pending Pool, Orphan Pool and Reorg Pool.\n18:03 <Blackwolfsa3>  whats the reason for the reorg pool?\n18:06 <neonknight64>  The Reorg pool is used as a short term backup for transactions that have been included in blocks. In case a blockchain reorganisation happens, the transactions used in the discarded blocks can be recovered and added back into the transaction pool so that they can be added to future blocks.\n18:07 <neonknight64>  This will ensure that high priority transactions wont be discarded and wont need to be retransmitted\n18:07 <Blackwolfsa3>  so its basically a nice to have so that the wallets dont have to watch for it?\n18:07 <@CjS77>  hansie: Ok, I got you. Indeed it's non-trivial\n18:08 <neonknight64>  I think, adding a Reorg pool could make the Mempool a bit more dependable\n18:09 <Blackwolfsa3>  it should\n18:12 <neonknight64>  So the Transaction pool contains only valid and ready-to-go transactions that could be added to blocks. The Pending Pool and Orphan pool deal with transactions that have timelocks, attempt to spend invalid UTXOs or UTXOs with timelocks.\n18:14 <@CjS77>  Yeah,I don't see there being much overhead to running multiple pools, so you may as well have separate ones rather than having to sort & filter a global pool all the time. No TX sits in more than one pool (except the reorg pool I guess), so it sounds good to me\n18:14 <Blackwolfsa3>  do we need to separate two, I see no reason for a pending and orphan pool?\n18:15 <Blackwolfsa3>  a tx can also theoretically sit in both\n18:15 <@CjS77>  The pending pool could also be sorted by block so that it's really easy to pop off tx's into the main pool when a new block is found\n18:16 <@CjS77>  I suggest: If it's an orphan, it should go to the orphan pool, even if it would also be pending. If its parent appears, it should move to pending.\n18:17 <neonknight64>  I think a transaction should only every exist in one pool at a time. I agree with CjS77, the pools could be prioritized like that.\n18:20 <neonknight64>  Blackwolfsa3, currently the pending pool deals with timelock restricted transactions that could be sorted efficiently like CjS77 suggested. The transactions in the Orphan pool might get discarded regularly as they reach the maturity threshold and could not be moved to the transaction pool.\n18:21 <neonknight64>  Managing them separately might make implementation easier.\n18:22 <stanimal>  \"Pending transactions that have matured past the discard threshold MUST be discarded and removed from the Pending Pool.\" - what is the discard threshold and why would a transaction sit in the mempool long enough to be discarded?\n18:24 <neonknight64>  Mmmm that doesn't seem right, that mechanism is for the Orphan Pool or Reorg Pool.\n18:25 <stanimal>  Ah yes, that makes more sense\n18:26 <neonknight64>  If an orphaned transaction could not be moved to the transaction pool within a specified amount of time (threshold) its might never be spendable and should be removed at some point\n18:28 <neonknight64>  The RFC proposes a priority metric to prioritise transactions when storage limits are reached, any ideas how this could be improved?\n18:30 <neonknight64>  Currently, transactions spending UTXOs with higher block height maturity must be prioritized over transactions spending UTXOs\n18:30 <neonknight64>   with lower block height maturity. Also, transactions with higher fees per transaction message size must be prioritized over lower fee transactions.\n18:35 <stanimal>  What data points do we have? Obviously not value of the transaction. Maturity (age), fees... anything else?\n18:35 <Blackwolfsa3>  type?\n18:36 <Hansie>  Hi\n18:41 <neonknight64>  Type maybe.. I fear that time-locked transactions will be discarded to make room for higher priority valid transactions that could be included into blocks.\n18:41 <Blackwolfsa3>  whould timelocked not be in pending anyway?\n18:42 <Blackwolfsa3>  I was thinking more along the lines of vn registration etc\n18:42 <stanimal>  Would the time spent locked not count towards the maturity?\n18:42 <Hansie>  It should\n18:42 <Hansie>  But is maturity not just binary? Mature or not mature?\n18:43 <neonknight64>  Aaah I see, that \"type\" could possibly work.\n18:43 <stanimal>  Think type can definitely enter in the heuristic - though initially we only have coinbase (timelocked) and regular?\n18:45 <Hansie>  Maybe the 'must' should turn to 'should'. Miners will decide what they want to do, which valid Txs they want to include.\n18:45 <Hansie>  stanimal: I think yes\n18:49 <Hansie>  neonknight: Will `threshold expiration time` for the reorg pool be similar to the horizon for fast sync?\n18:51 <neonknight64>  The threshold expiration time will be short for transactions in the Reorg pool, probably something like 30-60min\n18:51 <neonknight64>  Not sure if it is similar to horizon for fast sync..\n18:53 <Hansie>  Ok\n18:53 <Hansie>  Just wondering about the enforce-ability of the 'transaction priority metric '...\n18:56 <Hansie>  I think miners will be motivated by higher earnings.\n18:58 <neonknight64>  I agree miner are earning driven, probably not enforceable but recommended\n18:58 <Hansie>  I like the idea that wallets can track incoming payments, and possibly the state of a particular Tx\n19:02 <Hansie>  This may assist front-running: \"mechanism to estimate fee categories from the current Mempool state\" ?\n19:03 <Hansie>  neonknight64: I think the RFC seems solid, apart from some of the comments made here that warrants some thought.\n19:06 <neonknight64>  Thank you for the suggestions and comments, I will go think how it can be improved.\n19:09 <stanimal>  Agree, think there's some great ideas to run with!\n```\n",
    "title": "Tari Protocol Discussion 32",
    "date": "2019-04-16T02:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed the mempool RFC. Below is the TL;DR on Monday's conversation (full transcript included below): RFC 0190 Mempool  Proposed to use 4 mempools: ransaction Pool,...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-32.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "32"
  },
  {
    "slug": "2019-03-25-tari-protocol-discussion-31",
    "content": "\nOn Monday, the Tari community discussed various methods for sending messages on the Tari communication network. Below is the TL;DR on Monday's conversation (full transcript included below):\n\nSerializing messages the Tari communication network\n\n* Proposed solution is to use MessagePack for wire serialization, JSON and Base64 for human-facing interfaces \n* gRPC is a schema-driven serialization protocol, and is unnecessary with ZeroMQ as a message delivery system\n* ZeroMQ allows for multi-frame messages, supporting metadata in messages\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n```\n12:04 PM <@cjs77> Another Monday night, another dev chat!\n12:06 PM <@cjs77> I'd like to chat about serialisation quickly. There's a still WIP RFC on github that has some ideas: https://github.com/tari-project/tari/pull/182\n12:07 PM <Hansie> Hi there\n12:08 PM <@cjs77> We have basic tx merged in, some guys incl @stanimal and @neonknight are working on the comms network. If those are up and running, we can start to pass messages around, which is a big step towards getting testnet going\n12:09 PM <@cjs77> But how to serialise those messages on the wire? And which formats to use where messages interface with human beings?\n12:09 PM <Blackwolfsa> Is it possible to support both at the same time?\n12:09 PM <@cjs77> tl;dr, #182 proposes MessagePack for wire serialisation and JSON and Base64 for human-facing interfaces\n12:10 PM <stanimal> Good topic - I had previously thought GRPC was a good fit but I agree that MessagePack +  serde should give us everything we need to do compact RPC over the wire\n12:11 PM <simian_za> Can you explain how those two options differ? (GRPC vs MessagePack)\n12:11 PM <@cjs77> yes, agree. I'm a big fan of gRPC, but zeroRPC is exactly what you're referring to :)\n12:11 PM <Hansie> MessagePack  looks great on face value\n12:15 PM <stanimal> With gRPC you write a IDL definition (what your message interface looks like) and use a tool to generate code which is responsible for marshalling/demarshalling the raw message into structs\n12:15 PM <simian_za> Ah so its not just the message format\n12:16 PM <@cjs77> simian_za: gRPC is a schema-driven serialization protocol; you share the schema around and can then generate code to read/write messages over say, websocket. This is great for building a RPC-driven API, right?\n12:16 PM <@cjs77> MessagePack is a much simpler protocol (think JSON, but in binary). So if you want to build an RPC-type API, you need some message delivery system to go with it.\n12:16 PM <@cjs77> Since we've already landed on zMQ as a message delivery system, it would be neat if we could just use that.  Using gRPC as well would kinda be like solving the same problem twice.\n12:17 PM <@cjs77> (I know I've re-answered the Q, but I'd done all that typing. Didn't feel like giving up on it :)\n12:17 PM <@cjs77> https://www.zerorpc.io/\n12:18 PM <stanimal> ^ that :)\n12:18 PM <@cjs77> ^ Proof that it works\n12:18 PM ‚áê el00ruobuob_[m] quit (~el00ruobu@212.121.161.50) Ping timeout: 250 seconds\n12:18 PM <simian_za> Hehe, thanks that does answer it. A con that is mentioned in the RFC is that MessagePack doesn't support metadata, but we can support metadata ourselves by just adding a metadata message alongside the main message?\n12:18 PM <neonknight> MessagePack seem like a great extension when used in combination with zeromq\n12:19 PM <@cjs77> Yeah, zMQ allows multi-frame messages, so you can easily design your messages to have a \"header\" with the desired metadata in it\n12:20 PM <stanimal> Yup, the header message part can also be in message pack format\n12:23 PM <@cjs77> And MessagePack is supported by serde :)\n12:23 PM <Blackwolfsa> Are we looking to encrypt those from the get go, or only rely on network encryption\n12:23 PM <@cjs77> The ZMQ messages?\n12:24 PM <@cjs77> neonknight, do you want to answer?\n12:25 PM <Hansie> Oh oh, the ZeroMq book is not particularly fond of MessagePack: http://zguide.zeromq.org/py:chapter7#Serialization-Libraries\n12:26 PM <neonknight> Messages between peers will probably need to be encrypted using something like a session token, but also messages that  that are routed through the network might have to be encrypted using a second mechanism so only the destination can open it.\n12:26 PM <@cjs77> Hansie: Hintjens advocates JSON for control messages, and handrolled binary for everything else\n12:27 PM <simian_za> I am guessing that the lower level wire protocol/transport layer will always have its own point-to-point per-session encryption like HTTPS or via Tor etc\n12:27 PM <@cjs77> I've thought about this and I think the benefit of handrolled over MessagePack is unlikely to pay off the time and debugging taken to implement it\n12:28 PM <simian_za> Especially if there is solid Rust/Serde support...then its a beautifully solved problem\n12:28 PM <@cjs77> That's a gut feel rather than a data-driven exercize btw\n12:28 PM <Hansie> cjs77: Just so long we are aware of pros and cons\n12:29 PM <@cjs77> Yeah, as mentioned in the RFC, the default \"just serialise it\" function + serde attributes should do 95% of our serialisation work for us\n12:29 PM <@cjs77> hansie: sure\n12:30 PM <neonknight> Serialisation and Deserialisation using serde is going to accelerate development compared to handrolled.\n12:31 PM <@cjs77> AND it's easier to write binding in python, node etc\n12:31 PM <@cjs77> because you can deserialise messages using a standard library\n12:31 PM <stanimal> We'll be able to try messagepak out without much dev time spent anyway, I feel there won't be an issue but if there is we should be able to drop in another solution without throwing away much - it's worth writing a small test/benchmark app  I think\n12:32 PM <Hansie> Maybe we can just add a small section in the RFC about the \"fast and small\" (MessagePack ) vs \"cheap and nasty\" (handrolled). The reasons mentioned here\n12:32 PM <@cjs77> Will do\n12:33 PM <stanimal> neonknight: Nice thing about zMQ is that you get a kind of session token handled for you by using a router socket\n12:33 PM <mikethetike> is there any danger is serde leaking or not clearing sensitive messages?\n12:33 PM <mikethetike> not clearing meaning wiping keys from memory\n12:34 PM <simian_za> mikethetike: hmmm that is a good point. I am guessing that part of our review and auditing process should be looking for that all through the system\n12:34 PM <@cjs77> we'll have to look into what `Drop` traits are implemented\n12:34 PM <neonknight> Stanimal, zMQ keeps on giving!\n12:36 PM <@cjs77> So generally, it sounds good. If there are any other thoughts, you can stick them in the PR comments, or add them to the chat here\n12:36 PM <mikethetike> it may be worthing thinking about how some of these will be saved to disk\n12:36 PM <Hansie> Just wondering about different message sizes\n12:37 PM <Hansie> Say a VN needs the initial asset state, which could be small or very very large\n12:37 PM <Hansie> Will all of that be handled by one implementation? Or do we foresee further optimization?\n12:38 PM <stanimal> mikethetike: currently there is an LMDB implementation which I'd think can also make use of the MessagePack format\n12:39 PM <mikethetike> the storage format is up to the implementer of the library, but in rust if we are going to handcraft the serialization of storage, might be two implementations\n12:56 PM <stanimal> For over the wire encryption, zMQ implements Curve25519 and every connection would need a new \"server\" and \"client\" key pair - need to understand what zMQ gives us and haven't so far found good examples of it's usage  - so far I made a small test app with this: http://api.zeromq.org/4-0:zmq-curve which very didn't work :P\n1:47 PM <@cjs77> I got zmq-curve working and confirmed that there was encryption by inspecting the raw tcp packets with wireshark\n```\n",
    "title": "Tari Protocol Discussion 31",
    "date": "2019-03-25T14:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed various methods for sending messages on the Tari communication network. Below is the TL;DR on Monday's conversation (full transcript included below):...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-31.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "31"
  },
  {
    "slug": "2019-03-18-tari-protocol-discussion-30",
    "content": "\nOn Monday, the Tari community discussed how Directed Acyclic Graphs might play a role on the Tari network. Below is the TL;DR on Monday's conversation (full transcript included below):\n\nDAGs on the Tari Network\n\n* Should be on the asset layer (second layer) \n* Used as a tool to converge on asset state \n\nQuestions to Consider\n\n* Should single instructions be executed as nodes in the DAG?\n* Should sets of instructions be aggregated in a block and then have DAG rules applied to the block?\n* How should instructions be ordered?\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n\n```\n12:19 PM <stanimal> Hey all, so I was wondering how a DAG might be used in Tari - I haven't finished watching this video from a few years ago but there are some pretty interesting ideas https://www.youtube.com/watch?v=62Y_BW5NC1M&feature=youtu.be [Dr Bob McElrath - Braiding the Blockchain]\n12:21 PM <Blackwolfsa> I think Tari will use a dag for the second layer\n12:21 PM <Blackwolfsa> The asset layer\n12:23 PM <stanimal> Ok so if there are concurrent instructions it will be used to converge on an asset state?\n12:24 PM <Blackwolfsa> Yes\n12:24 PM <simian_za> Yes, So for each asset we will represent its state and the rules for updating its state by a DAG?\n12:25 PM <Blackwolfsa> A dag state will essentially be an instruction with a link back to the prev state\n12:25 PM <Hansie> There are some fundamental differences between DAG types SPECTRE/PHANTOM and Braiding\n12:25 PM <Hansie> Short summary here: https://tlu.tarilabs.com/layer2scaling/more-landscape/landscape-update.html#directed-acyclic-graph-dag-derivative-protocols\n12:26 PM <Hansie> If I remember correctly it has to do with how conflicting Tx are handled\n12:26 PM <Blackwolfsa> There are small technical implementation differences, but I disagree that there are fundamental differences.\n12:27 PM <Blackwolfsa> Conflicting TX handling is not something fundamental.\n12:28 PM <neonknight> I think conflicting instructions will result in orphaned branches and a branch with a supermajority consensus will live on.\n12:28 PM <Hansie> Point of view then, Tx vs. block\n12:29 PM <Blackwolfsa> Agreed\n12:29 PM <simian_za> so we execute either single instructions as nodes in the dag or do we aggregate a set of instruction into a block and apply the dag rules to the block?\n12:29 PM <Blackwolfsa> We can also ignore conflict or bad instructions indefinitely\n12:30 PM <Blackwolfsa> I am of the opinion single instructions will be easier\n12:31 PM <Blackwolfsa> Atleast from a syncing point of view, as each instruction modifies the state\n12:31 PM <Blackwolfsa> Because there is no pow we don't have batch instructions for speed\n12:32 PM <neonknight> I do not think blocks are necessary, instruction level seems better. An asset can be treated as a single large DAG that should merge to a single state at every checkpoint\n12:33 PM <Hansie> Let us go with that...\n12:33 PM <Hansie> What about Tx ordering?\n12:33 PM <Blackwolfsa> We don't need instruction ordering?\n12:33 PM <Hansie> So the 1st valid Tx is valid, the ones after is marked as invalid?\n12:34 PM <Blackwolfsa> Each instruction should be independant\n12:34 PM <Hansie> A -> B -> C and later on A -> D\n12:34 PM <neonknight> Each instruction creates a single branch, branches that have not been verified by majority at the checkpoint should be discarded.\n12:35 PM <simian_za> I think it should work to just have each node order the instructions as it receives them and then the DAG protocol will sort out the state as the nodes keep talking going forward\n12:35 PM <Blackwolfsa> If you have instructions that follow one other, you have to wait for eached to be confirmed\n12:35 PM <Blackwolfsa> Yes agreed\n12:36 PM <Hansie> Maybe if there are no blocks there is no DAG, just Txs with super majority votes to make it valid\n12:36 PM <Hansie> And a Tx voted valid cannot be reversed\n12:36 PM <neonknight> You could have a DAG without blocks.\n12:37 PM <simian_za> I think we will find that the different rule variant will respond differently to varying network conditions. Will be good to build them and test them\n12:38 PM <Blackwolfsa> We are going to need a dag\n12:38 PM <simian_za> a modular network stack should make building and testing fairly easy\n12:38 PM <Blackwolfsa> We cannot have a single process line, we need concurrent\n12:39 PM <Hansie> In my mind we will have states somehow linked to previous states, including concurrent Txs\n12:40 PM <simian_za> Ja I agree you need to deal with the concurrency, you need to have the DAG rules to merge the ordering of each nodes instruction stream to compensate for the latency between them\n12:40 PM <Blackwolfsa> We don't nessasarily have TXs, we might but its more likely to just be an instruction\n12:40 PM <neonknight> I think every token will form a chain of state changes, but each asset will have a DAG.\n12:40 PM <Blackwolfsa> Yes\n12:41 PM <Blackwolfsa> On the minimal, we will need to have link to prev state, and new instruction. Those two could make up a state\n12:42 PM <Hansie> If one allows late votes to be added to majority votes, the state changes, but the outcome not\n12:45 PM <Hansie> In a DAG miners mine blocks of Txs they have validated, and contnue to do so as long as they believe it is valid. Then later on another branch of blocks can join to form the DAG\n12:45 PM <Hansie> In our system we need a super majority vote to cement each Tx. This is fundamentally different to miners that can go solo for a certain time.\n12:45 PM <neonknight> Simian I agree, a modular network stack can make testing these ideas easier.\n12:47 PM <Hansie> The only way I can see a DAG-like structure is if each VN can build their own view of the truth without voting, and then later every VN votes to confirm all Txs for that period of time.\n12:47 PM <neonknight> A single VN can go solo for a short period of time, he will create the instruction branches but only once he shares it with other VNs that verify the branches do the become valid.\n12:49 PM <Hansie> Yes, something like a local state which is merged into a global state where all VNs vote\n12:49 PM <simian_za> Ja, I think it will be more fluid than that. As the VNs propagate their signed instructions the instructions will acquire signatures and after some time they will all reach the super majority and the VNs will chain their new instructions from these states (the ones that have a supermajorities worth of signatures)\n12:49 PM <Blackwolfsa> We don't really need a super majority, just plain majority will work fine\n12:50 PM <Hansie> Do not agree `We don't really need a super majority, just plain majority will work fine`\n12:50 PM <simian_za> A bigger majority scales the security of the network upwards. An attacker will need control more nodes\n12:50 PM <Hansie> Check pointing must be BFT resistant\n12:51 PM <neonknight> I think at the checkpoint some negotiation has to happen between the VNs where they share and combine their local DAGs so that a final checkpoint state (global DAG)can be constructed\n12:51 PM <simian_za> at a regular period?\n12:51 PM <neonknight> probably..\n12:53 PM <simian_za> what is a period measured in? The number of instructions a node receives (i.e. checkpoint every 100 instructions)?\n12:53 PM <neonknight> Majority voting can only work if there is a very structured and restrictive validation process in place. Supermajority allows for a much simpler validation process with less communication.\n12:54 PM <simian_za> and then some protocol for the nodes to propose a checkpoint, wait for each other to acknowledge and then synchronise state?\n12:54 PM <Hansie> Period: volume limit or time, whichever comes first\n12:54 PM <neonknight> I like that idea Simian, an instruction limit is much better than time based.\n12:54 PM <simian_za> could have time based as a backup threshold easily enough\n12:55 PM <Hansie> So confirmation to users can only be given at checkpoints\n12:55 PM <Hansie> Or 'synchronized state' points\n12:55 PM <neonknight> Confirmation can happen at any point as long as a supermajority has verified it.\n12:56 PM <simian_za> or just the first message the wallet receives where the supermajority of VNs has signed the instruction? Then it is sure to become part of the DAG\n12:56 PM <Hansie> Thus just counting all the signatures that verified a particular Tx?\n12:57 PM <simian_za> ja, more message of that transaction might come from other nodes later with more signatures but once the threshold has been reached you are confirmed\n12:57 PM <neonknight> Agreed\n12:57 PM <Hansie> In that case checkpoints only consists of validated Txs\n12:58 PM <Hansie> No special synchronization is needed\n12:58 PM <Blackwolfsa> If the signed VNs are more. Than the required threshold, we know it's approed\n12:58 PM <simian_za> I think it could work with enough network bandwidth\n12:59 PM <Hansie> Does a wallet pull for verification, or is it pushed?\n12:59 PM <Blackwolfsa> Verification\n12:59 PM <Blackwolfsa> There is no push to a block\n12:59 PM <neonknight> Synchronisation is still needed as some VNs do not have the states of the tokens that were verified without them.\n12:59 PM <Hansie> Agreed\n12:59 PM <simian_za> ja there should be the periodic consolidation so the branches of the DAGs dont have a chance to get too long\n1:01 PM <Blackwolfsa> Do we need that? If we receive a block pointing to a unknown state we just ask ans sync\n1:01 PM <neonknight> I think a wallet should pull the verification status of his instruction.\n1:02 PM <Hansie> Yip\n1:03 PM <Blackwolfsa> He could ask? But how and why?\n1:05 PM <simian_za> I think you will see a higher rate of orphan branches in the DAG but we are speculating, building the different prototypes will reveal the issues\n1:06 PM <neonknight> A pull will result in one message transfer, a push will result in every VN sending the verification message.\n1:07 PM <Hansie> I think so yes\n1:08 PM <Hansie> erification = enough VN signatures for the instruction , and can be easily validated by a wallet\n1:08 PM <Hansie> So verification = enough VN signatures for the instruction , and can be easily validated by a wallet?\n1:09 PM <neonknight> Yes\n1:10 PM <simian_za>  so the wallet will poke single VNs until it gets a copy of the instruction with threshold signatures? Or it will wait for the first VN who gets a copy of the instruction with the threshold of signatures to send the result to the wallet?\n1:17 PM <neonknight> I don't think VNs should send anything unless it is request of them. You could ask a VN to send you the verification messages as soon as it has enough signatures, but it is different from submitting an instruction. Every VN in a committee doesn't have a P2P channel open with the wallet, it could only be one.\n2:12 PM <Blackwolfsa> From a user experience stand point, I think VNs should push back. Once when it accepts, second when threshold is reached.\n```\n\n",
    "title": "Tari Protocol Discussion 30",
    "date": "2019-03-18T14:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed how Directed Acyclic Graphs might play a role on the Tari network. Below is the TL;DR on Monday's conversation (full transcript included below): DAGs on the...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-30.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "30"
  },
  {
    "slug": "2019-03-14-tari-protocol-discussion-29",
    "content": "\nOn Thursday, the Tari community examined the Tari Network Communication Protocol. Specifically, the goal was to understand how communication nodes and communication clients interact with each other on the Tari network. Below is the TL;DR on Thursday's conversation (full transcript included below):\n\nTari Network Communication Protocol Elements\n\n* A communication Node is a Validator Node or Base Node \n* A communication Client is a Wallet or Asset Manager \n* CNs propagate data messages such as discovery requests\n* CCs make use of the network but don't propagate anything\n* Network allows for sending encrypted/unencrypted messages between nodes and clients\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Thursday‚Äôs discussion\n\n```\n3:57 AM <@cjs77> Exciting news! A first draft of the MuSig implementation for Ristretto is now available for review: https://github.com/tari-project/tari/pull/162\n3:58 AM <@cjs77> To my knowledge it's the first implementation of MuSig on Rust/Ristretto and may be the first Rust implementation of MuSig of any kind.\n5:18 AM <neonknight> I think it would be nice if we can discuss the network communication protocol (https://rfc.tari.com/RFC-0170_NetworkCommunicationProtocol.html)\n5:22 AM <simian_za> Looks really good\n5:23 AM <neonknight> The idea is to have one big network where all the VNs and BNs are communication nodes (CN) and all the Wallets and Token Wallets and communication clients (CC). CNs propagate data messages such as discovery requests. CCs only make use of the network but dont propagate anything.\n5:26 AM <stanimal> Sounds interesting - would Validator nodes also propagate transactions to base nodes?\n5:27 AM <simian_za> So in a DHT network like this if the nodes can choose their own Node IDs you would have the possibility of an attacker mining for a set of Node IDs that can eclipse a victim. I like how the inclusion of some Node IDs (of the VNs) that are not chosen by the node itself but are assigned as part of their base layer registration byt he network mean that as long as you include a VN in your peer list you can't really be eclipsed\n5:28 AM <neonknight> Yes stanimal a VN could have some peer connections to BNs and forward incoming transactions to them\n5:31 AM <neonknight> The network can also be more efficient as Kademlia style directed forwarding of messages can be performed where the destination is know, but also gossip based forwarding can be performed where a message is of importance to a large subset of the network.\n5:33 AM <Hansie> cjs77: `Exciting news! A first draft ...` Great, well done!\n5:35 AM <stanimal> neonknight: makes sense, the most efficient method can be used depending on the type of message simian_za: so the base layer is a kind of random oracle for the VNs which can be used to keep the base nodes themselves from being eclipsed (and just generally making the network harder to attack) - cool\n5:36 AM <simian_za> neonknight: When you say Kademlia style directed forwarding do you mean that the messages are passed along the nodes to the destination? I thought the Kademlia style DHT is used for discovery? Aren't the message sent directly to peers afte ryou have discovered them via the DHT?\n5:36 AM <Blackwolfsa> and I take it for basenodes this doesnt matter because their primary communication is gossip?\n5:38 AM <stanimal> simian_za: I think thats right - although \"direct connections\" would probably be made through a mix net like Tor / I2P\n5:40 AM <neonknight> Simian, lets say I want to do a quick discovery request to find a specific node that I want to communicate with. I know the identification public key and node id of that node, then the a message with my encrypted net address can be sent through the network but each CN will only forward it to other CNs that are closer to the destination CN. The entire network wont get my message.\n5:41 AM <simian_za> So you send the actual message? I kind of thought you would use the DHT to find that guys address and then send it to him directly?\n5:43 AM <neonknight> Blackwolf i think a BN will still do directed forwarding of discovery requests for other CNs but when it sends blocks and transactions it could propagated using gossip protocol.\n5:46 AM <neonknight> Simian, I think there might be a few ways to do discovery, some are more private and others are quicker.\n5:47 AM <Hansie> So I take it the wallets will only be 'clients' for communication, and not relay messages as well?\n5:49 AM <Hansie> Oh I see ` CNs propagate data messages such as discovery requests. CCs only make use of the network but dont propagate anything.`\n5:50 AM <stanimal> Ye lookups and messages can be conducted iteratively (query closest peer you know of, get result, query that peer and so on) or recursively (query the closest peer you have and that peer then queries the closest peer they have and so on until there is a result)\n5:51 AM <Hansie> Will this communication network also facilitate general type of messages between nodes/clients?\n5:53 AM <Hansie> `Dave, you forgot to pay me the 10 Tari you owe me`\n5:54 AM <Blackwolfsa> nothing stops you from doing that\n5:54 AM <neonknight> You can send general encrypted or unencrypted data message, but CNs might add you to their local \"ban\" list if you spam the network\n5:58 AM <@fluffypony> also there's a mixnets mailing list that is pretty good\n5:58 AM <@fluffypony> worth reading some of the backlog, it doesn't have a lot of traffic\n5:59 AM <@fluffypony> I'll find the link\n6:00 AM <neonknight> Will have a look at the mixnets mailing list, thanx\n6:00 AM <Hansie> fluffypony: Cool\n6:02 AM <Hansie> neonknight: Will CNs and CCs be able to communicate from behind company firewalls?\n6:03 AM <Hansie> For example someone on the Pentagon WiFi network wants to buy a ticket.\n6:05 AM <Blackwolfsa> that depends on the firewall\n6:05 AM <neonknight> I guess it depends on how the firewall is setup, if it doesn't block outbound connections then it should work.\n6:06 AM ‚Üí cryptoIndio joined (~cryptoInd@110.54.244.170)\n6:06 AM <Blackwolfsa> typically if its someplace like the pentagon, I would ban outgoing all traffic by default. Which means it wont work\n6:07 AM <simian_za> For wallets the connections will be outbound and if you use https then most firewalls that allow browsing should be fine. Running a base node that will need to accept incoming connections will probably not work behind a strict firewall when using IPv4/IPv6 transport. Though using a mixnet should be fine I think\n6:19 AM ‚áê cryptoIndio quit (~cryptoInd@110.54.244.170) Remote host closed the connection\n6:47 AM <@fluffypony> https://lists.mixnetworks.org/listinfo/mixnetworks\n6:48 AM <@fluffypony> this is good too: http://mixbib.censor.watch\n```\n",
    "title": "Tari Protocol Discussion 29",
    "date": "2019-03-14T14:00:00.000Z",
    "excerpt": "On Thursday, the Tari community examined the Tari Network Communication Protocol. Specifically, the goal was to understand how communication nodes and communication clients interact with each other...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-29.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "29"
  },
  {
    "slug": "2019-03-07-tari-protocol-discussion-28",
    "content": "\nOn Thursday, the Tari community discussed the lifespan of digital assets on the Tari network. Specifically, what might happen to assets (like tickets) after the completion of an event? Below is the TL;DR on Thursday's conversation (full transcript included below):\n\nHow will the economics work for old tickets?\n\n* Tickets from a show that has already passed might have been redeemed, but the ticket stubs might still be useful\n* But that asset will now have very little movement and thus pay minimal fees\n* How will the Tari network incentivize VNs after redemption to keep the asset state of the stubs for other services that might value that data?\n\nRetiring a digital asset\n\n* If an asset issuer wants to retire an asset, they can \n* Retiring an asset involves a final checkpoint and a freeze period where interested parties can copy and store the state of the asset and check it against the final checkpoint\n* After this period, the asset ceases to exist on the DAN\n* Merkle proofs of specific states will still be possible against the base layer\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (12pm EST)**\n\n**Thursdays: 11am CAT (5am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Thursday‚Äôs discussion\n\n```\n4:22 AM <Blackwolfsa> Hi everyone, some thing I have been thinking about is how the economics will work for \"older\" tickets\n4:23 AM <Blackwolfsa> We might have tickets from a show that has already passed, and the tickets might have been redeemed. But that ticket stubs might still be useful.\n4:24 AM <Blackwolfsa> But that asset will now have very little movement and thus pay very little fee's\n4:29 AM <neonknight> I don't think the asset issuer will want to pay fees at this point.\n4:31 AM <Hansie> A fee earning profile could be  0.1 2 9 20 20 2 0.3 0. 0.4 0.3  0.3 0. 0.4 0.3  0.3 0. 0.4 0.3  30 30 0.5 0.1 0.01 0.01 ...\n4:33 AM <Hansie> 0.1 - 2 - 9 - 20 - 20 - 2 - 0.3 - 0.4 - 0.3 - 0.3 - 0.4 - 0.3 - 0.4 -  0.3 - 0.4 -  0.3 - 30 - 30 - 0.5 - 0.1 - 0.01 - 0.01 ...\n4:34 AM <Blackwolfsa> we could perhaps pay a fee for checkpoints, that gives almost a free fee for no work done except keep the state\n4:34 AM <Hansie> Please make a picture\n4:34 AM <Hansie> of my numbers\n4:34 AM <neonknight> As an alternative, a local ticket instance could be stored in the owners wallet if some form of certificate of authenticity could somehow be generated, then the ticket stub doesn't have to live on the DAN after the event.\n4:35 AM <simian_za> Hansie: So I tried to draw a picture of the potential fees profile of a ticket\n4:36 AM <stanimal> # Pastebin tQfQwqmm\n          +--+                    +-----+\n          |  |                    |     |\n       +--+  +-+               +--+     |\n       |       |               |        |\n       |       |               |        |\n       |       |               |        |\n       |       |               |        |\n       |       |               |        |\n       |       |               |        |\n       |       |               |        |\n       |       |               |        |\n       |       +---------------+        +---+\n       |                                    |\n       |                                    +---+\n+------+  Sale       Transfers                  +---+\n                                           Ticket stubs+\n4:36 AM <Hansie> Great!\n4:36 AM <simian_za> ja like that\n4:36 AM <simian_za> So that second peak is the redemptions instruction?\n4:37 AM <Hansie> So if I am a VN, I would like to be around for sale and redemption but for anything else\n4:38 AM <Hansie> ^not for anything else\n4:38 AM <simian_za> That's true, and how will we incentivize the VNs sticking around after redemption to keep the asset state of the stubs for other services that might value that data\n4:39 AM <Hansie> I understand our current thinking is to let VNs join / leave as they please?\n4:39 AM <stanimal> simian_za: Yup the second spike should be ticket redemptions\n4:43 AM <simian_za> So we could say that the fee-per-instruction fee should become higher during the transfers period to make it more lucrative for VNs to process those instructions\n4:50 AM <neonknight> With a DAN payment network, it could be possible for ticket stub owner to pay VNs efficiently\n4:51 AM <simian_za> thats true, the stub owners can provide the fees so then who is validating the state of these stubs?\n4:55 AM <Hansie> Lets say a big concert drew 250,000 spectators, but only 10,000 will use their stubs in future. So we could possibly let users pay for the privilege of their stubs being kept around, to enroll it in a loyalty program of some sorts. Then those fees could be used to pay the VNs that manage the stubs. ??\n5:10 AM <simian_za> So an idea could be that the Asset Issuer signs the stub using their RAID private key and the user keeps the stub. Then when it comes to the user attesting that they own the stub the can present the signed stub and the entity that wants to confirm the attestation can go check the original Asset issuers RAID public key to confirm the stub is legit\n5:39 AM <Hansie> Great ideas all round @simian_za @neonknight @Blackwolfsa @stanimal ! I do feel we need to discuss this some more at a later time, there are different avenues to explore here.\n6:47 AM <@cjs77> Here's some thoughts on this discussion: If an asset issuer has no more interest in an asset, he can retire it. Retiring an asset involves a final checkpoint and a freeze period where interested parties can copy and store the state of the asset and check it against the final checkpoint. After this period, the asset ceases to exist on the DAN. Merkle proofs of specific states will still be possible against the base layer\n6:47 AM <@cjs77> though. This would allow an interested party to resurrect the asset (possibly under a different asset issuer), following usual asset creation rules.\n6:47 AM <@cjs77> On long-lived assets not earning enough fees: I believe the mechanism of allowing VNs to decide to quit at a checkpoint helps solve this problem. If a VN (or multiple VNs) wishes to resign from a committee because their yield has dropped, they can do so. If the asset issuer wants the asset to continue to exist, he'll be forced to increase his per-transaction fee at the checkpoint to entice VNs to stay / replacements to enter.\n8:48 AM <simian_za> Ahh of course you can still produce merkel proofs against checkpoints on the base layer. This is perfect for the ticket stubs application because the Asset Issuer will generally retire that asset after the event. So at that point the users wallets can download a copy of the asset's state, prune the parts of the merkle tree of the asset state that doesn't belong to them and store the stub in their wallet.\n8:49 AM <simian_za> Then for future attestations they can produce a merkle proof against the base layer checkpoints\n```\n",
    "title": "Tari Protocol Discussion 28",
    "date": "2019-03-07T14:00:00.000Z",
    "excerpt": "On Thursday, the Tari community discussed the lifespan of digital assets on the Tari network. Specifically, what might happen to assets (like tickets) after the completion of an event? Below is the...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-28.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "28"
  },
  {
    "slug": "2019-03-04-tari-protocol-discussion-27",
    "content": "\nOn Monday, the Tari community gathered to assess tools needed to prevent bad actors from participating as validator nodes on the Tari network. Below is the TL;DR on Monday's conversation (full transcript included below):\n\nOne way to discourage bad actors on the Tari network is to simply make it more expensive to try and game the system than to just do what is required to manage a particular digital asset. \n\nSomething like a strong BFT consensus could work here, where one only gets paid fees if there is evidence of participation and they voted with the BFT consensus group.\n\nA few game theory concepts to consider implementing on the Tari network:\n\n* VNs can only get paid their fees for 'with BFT votes' and not 'against BFT votes'.\n* No recourse for attempted bad acting other than loss of income.\n* VNs guilty of bad acting can/should be banned from a committee.\n* VNs guilty of bad acting will not be known for such outside of the committee where it occured.\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (11am EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n\n```\n10:33 AM <Hansie> Hi there, anyone?\n10:35 AM <Hansie> Maybe it is wrong to assume that a VN registration Tx will include the registration fee as well as the collateral to manage an asset?\n10:47 AM <Blackwolfsa> Yes I think we should split them\n10:47 AM <Blackwolfsa> Asset collateral should be split so as to easy manage multiple ones\n10:49 AM <Hansie> Do you propose a specific 'ring fenced' collateral for a specific digital asset?\n10:51 AM <Blackwolfsa> I think so yes\n10:52 AM <Hansie> Time-locked registration UTXO, mined in the base layer?\n10:53 AM <Blackwolfsa> Both should be in the base layer.\n10:53 AM <Blackwolfsa> Mined\n10:54 AM <Blackwolfsa> This should make it sybil resistant and then registration is important for the vn id\n10:55 AM <Hansie> Makes sense\n10:56 AM <Hansie> So is the collateral UTXO into some sort of multisig, and the registration UTXO a payment to self?\n10:57 AM <Blackwolfsa> Definitely an aggregated signed, multi signature is up for debate\n10:57 AM <Blackwolfsa> If we can do snorr + shamir then it can be aggregated\n10:59 AM <Hansie> Cool\n11:00 AM <Hansie> Any recourse for attempted bad acting on the part of a VN?\n11:01 AM <Blackwolfsa> I am a fan of designing a system to not need it. Any idea how we could?\n11:02 AM <Xeagu> Meeting now?\n11:02 AM <Hansie> <Xeagu> : Just packing up now on my part\n11:06 AM <Hansie> Blackwolfsa: Maybe make it more expensive to try and game the system than to just do what is required to manage the asset. Something like a strong BFT consensus, only get paid fees if there are evidence of participation and voted with the BFT consensus group. ??\n11:10 AM <Blackwolfsa> Yes I think something along those lines\n11:10 AM <Hansie> How does this sound?\n11:10 AM <Hansie> `Assumptions - Game theory`\n11:10 AM <Hansie> - VNs can only get paid their fees for 'with BFT votes' and not 'against BFT votes'.\n11:10 AM <Hansie> - No recourse for attempted bad acting other than loss of income.\n11:10 AM <Hansie> - VNs guilty of bad acting can/should be banned from a committee.\n11:10 AM <Hansie> - VNs guilty of bad acting will not be known for such outside of the committee where it occured.\n11:11 AM <Blackwolfsa> We could easily add a memory only known bad actors\n11:11 AM <Blackwolfsa> And propagate those forward\n11:11 AM <Hansie> Maybe that could be gamed easily?\n11:12 AM <Hansie> Got to go, bye for now.\n11:12 AM <Blackwolfsa> Well you could easily vote for you  want with you in the committee\n11:12 AM <Blackwolfsa> Do how do we control that?\n11:13 AM <neonknight> VNs will be discourage from bad acting as they will be motivated to make fees. Running a VN costs money and resources.\n11:14 AM <neonknight> Voting who you want part of a committee might not be great as the bad player can then promote his BAD friends to be part of his committee.\n11:18 AM <Blackwolfsa> We need some way of voting off non performance\n11:18 AM <Blackwolfsa> If we can get a nice way of controlling this then we can allow that\n11:19 AM <oneiric_> does any kind of vetting or trust-then-verify system make sense in this context?\n11:19 AM <simian_za> It's not really possible to vet a VN\n11:20 AM <simian_za> You can only really judge them based on their performance in your committee\n11:20 AM <neonknight> Also most VNs will be completely anonymous\n11:21 AM <oneiric_> ok, so really only trust-then-verify, where bad performance is punished\n11:21 AM <Blackwolfsa> We can't really punish as well, only punish by not paying fees out\n11:22 AM <Blackwolfsa> What we need is to motivate VNs to vote bad performance out\n11:22 AM <simian_za> exactly, there might be a possibility of a blacklist but when you start down that road you kind of create a way for bad actors to attack other actors\n11:23 AM <neonknight> I think most punishment mechanisms can be gamed and could be used incorrectly\n11:24 AM <Blackwolfsa> We need to be able to solve this: there is a commitee that has a mayorrity bad performance in it. They don't care that they don't handle all requests\n11:24 AM <Blackwolfsa> They get their fees\n11:24 AM <Blackwolfsa> We need to be able to remove them\n11:25 AM <simian_za> So I guess in the same way that the Asset Issuer will control the process to convene the first committee they should have a mechanism to remove non performant members\n11:26 AM <Blackwolfsa> We need the fees to be a factor of how much work you did vs how much work the commitee did\n11:26 AM <simian_za> Is there any reason that giving the Asset Issuer absolute rights to kick members of the committee is a problem?\n11:27 AM <oneiric_> why not majority, or super-majority, voting? with maybe some external check to ensure will of the masses doesn't unjustly punish individuals?\n11:27 AM <simian_za> that is still an issue if you get a majority of low performers (only actually handle say 50% of the instructions coming in) and they are happy with that\n11:28 AM <Blackwolfsa> I see no problem allowing the asser issuer to kick people\n11:28 AM <Blackwolfsa> Well if you have someone handling less then you you should get less fess\n11:28 AM <Blackwolfsa> That way it motivates you to get better VNs as buddies\n11:29 AM <oneiric_> ^ if the issuer having kick privileges is the agreement going in, then yeah that makes sense\n11:30 AM <simian_za> In the end its the Issuer who has the most incentive to make sure the asset is being serviced properly\n11:30 AM <Blackwolfsa> Yes\n11:31 AM <stanimal> The AI has ultimate control over the VNs used - in a network selected committee, could you not specify a bigger committee size should you require more capacity?\n11:31 AM <Blackwolfsa> If we can make the fee formula so that the amount you get is max if every vn including you handle 100% of fees\n11:31 AM <Blackwolfsa> Then it's incentives to have only good vns\n11:32 AM <simian_za> stanimal: that is true you could though you would need to be willing to pay more fees\n11:33 AM <stanimal> The issuer wallet could maintain the reputation stats of the VNs used, and make better decisions after the next checkpoint\n11:34 AM <stanimal> i.e. choose not to include the offending VN next time\n11:34 AM <stanimal> eventually finding trustworthy, reliable VNs\n11:34 AM <oneiric_> any way for VN to regain lost reputation?\n11:35 AM <oneiric_> let's say they were manipulated into bad action?\n11:35 AM <simian_za> well they could register a new VN\n11:36 AM <simian_za> they would need to front a new registration fee but the tainted VN registration fee will be released in the future\n11:37 AM <neonknight> Stanimal: I think the issuer might know the distribution of payouts to each committee member at the end of each checkpoint, this should correlates with their service delivery but not necessarily bad acting. The issuer could drop worst performer for an alternate VN.\n11:38 AM <simian_za> oneiric_: keeping track of a VNs \"reputation\", good or bad, between different committees is quite challenging. We have not been able to think of a good way to do it in a decentralized manner that cannot be gamed\n11:39 AM <simian_za> even in the most rudimentary terms such as a one-strike your burned blacklist\n11:40 AM <oneiric_> how do coins like steemit do it?\n11:40 AM <stanimal> It would be centralized in the local asset issuer wallet - or would that not make sense?\n11:41 AM <neonknight> It could be centralised, but I don't think the asset issuer will always be online.\n11:41 AM <stanimal> Good point\n11:42 AM <Blackwolfsa> It would be great if the asset issuer doesn't have to be\n11:43 AM <Blackwolfsa> I think we could design it so that he doesn't have to be\n11:44 AM ‚Üí mikethetike joined  ‚áê el00ruobuob quit  \n11:47 AM <simian_za> oneiric_: Not sure how steemit was set up but most the non-PoW coins use some sort of proof of stake mixed with including their own trusted nodes in the mix\n11:47 AM <simian_za> both factors work because of the centralization\n11:48 AM <stanimal> So the current deterrents we have are: loss of fees and the cost of mounting an attack on a committee (network selected would make it hard & expensive to become part of any particular committee) - for any high value assets, the safety net is to use permissioned nodes - is that right?\n11:48 AM <oneiric_> damn, knew there was something about steemit that bugged me\n11:49 AM <simian_za> I am not 100% versed in the actual story but there was a lot of shade being thrown at steem over the last year\n11:50 AM <simian_za> stanimal: sounds about right\n11:50 AM <stanimal> loss of fees = VN running costs + somehow not including them in the next committee - which I guess we don't completely have\n11:52 AM <simian_za> well they also loose the potential fees they could be earning with their registration fee + collateral by not performing\n11:52 AM <simian_za> so thats a lost opportunity cost\n11:58 AM <Blackwolfsa> Yip only lost opportunity\n11:58 AM <stanimal> Could committee members come to a consensus that a VN is being a douchebag (technical term for bad actor) - and not forward messages to them (losing the bad VN fees)- additionally, the asset issuer would also be able to see that committee state and potentially act on that\n11:59 AM <Blackwolfsa> Could be as well\n11:59 AM <Blackwolfsa> There could be some devious ways to \"vote\" a VN out\n11:59 AM <neonknight> I think it could happen\n12:01 PM <stanimal> But then you'd have a bad committee right?\n12:01 PM <Blackwolfsa> No you are doing your job\n12:01 PM <Blackwolfsa> Signing valid instructions\n12:02 PM <Blackwolfsa> We need to motivate good behaviour\n12:02 PM <neonknight> Agreed, the same thing will happen if 1 out of 5 VNs have bad latency and the other 4 always reach consensus without the slow VN.\n12:04 PM <stanimal> Ye agreed, back to punishment models being gamed\n12:04 PM <stanimal> or being unjust\n12:07 PM <Blackwolfsa> If the economics is chosen in such a way it should self regulate\n12:09 PM <stanimal> Definitely first prize - thanks all g2g\n```\n",
    "title": "Tari Protocol Discussion 27",
    "date": "2019-03-04T14:00:00.000Z",
    "excerpt": "On Monday, the Tari community gathered to assess tools needed to prevent bad actors from participating as validator nodes on the Tari network. Below is the TL;DR on Monday's conversation (full...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-27.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "27"
  },
  {
    "slug": "2019-02-28-tari-protocol-discussion-26",
    "content": "\nOn Thursday, the Tari community gathered to analyze different ways to make sure the high-performance second layer of the Tari network (The DAN) could leverage the high security of the base layer. Below is the TL;DR on Thursday's conversation (full transcript included below):\n\nOne way to achieve a high security second layer is to require Validator Nodes to register themselves on the Base layer. This achieves:\n\n* Sybil resistance (if we require a fee / deposit to be paid)\n* A register of known VNs\n\nAt a high level, the registration process could look something like this:\n\n* The Validator Node posts a MW transaction with a flag marking it as a VN registration TX.\n* The tx contains a time-locked output for at least the registration fee amount that is *paid back to the VN owner*\n* This time lock could be for say, 6 months\n\nAnother great thing about the refundable deposit model of registration is that the Active VN register is self-maintaining. You need to re-register every 6 months (ala SSL certificates) rather than requiring de-registration.\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (11am EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Thursday‚Äôs discussion\n\n```\n4:00 AM <@cjs77> time for another dev chat :)\n4:03 AM <simian_za> awesome, lets chat\n4:09 AM <@cjs77> So if we imagine the base layer being a high trust, low performance layer; and the DAN being a high performance, lower trust layer; it makes sense to leverage the Base Layer where possible to effect high trust, high performance on the DAN.\n4:10 AM <@cjs77> One way to do this is to require Validator Nodes to register themselves on the Base layer\n4:11 AM <@cjs77> This achieves:\n4:11 AM <@cjs77> i) Sybil resistance (if we require a fee / deposit to be paid)\n4:11 AM <@cjs77> ii) A register of known VNs\n4:14 AM <simian_za> Makes sense, could the deposit be used for anything else i.e. losing it could be a penalty for bad behaviour (determined via consensus)?\n4:14 AM <simian_za> Or is punishment of this sort poor design?\n4:14 AM <@cjs77> On a high level, I imagine registration going something like this:\n4:14 AM <@cjs77> * The VN posts a MW transaction with a flag marking it as a VN registration TX.\n4:14 AM <@cjs77> * The tx contains a time-locked output  for at least the  registration fee amount that is *paid back to the VN owner*\n4:14 AM <@cjs77> * This time lock could be for say, 6 months\n4:15 AM <@cjs77> simian_za: Great Q. I think the challenge is how to implement punishment in an elegant and simple way\n4:15 AM ‚Üí bordecraft joined (~bordecraf@37.165.118.246)\n4:16 AM <@cjs77> I like Bob McElrath's tweet from a few weeks ago saying that any slashing / punishment mechanism can be gamed. I'm not sure I agree 100%, but I resonate with the sentiment. Rather let it \"just work\" through clever incentives\n4:16 AM ‚áê bordecraft quit (~bordecraf@37.165.118.246) Client Quit\n4:17 AM <Blackwolfsa> yip I agree with that, we should try and make it work without punishment\n4:17 AM <simian_za> The challenge with any punishment mechanism is that it can be used maliciously.\n4:17 AM <@cjs77> As it is, posting a refundable deposit via a time-locked output achieves Sybil resistance, which is a big step already\n4:18 AM <simian_za> How will the fee be determined?\n4:18 AM ‚Üí bordecraft joined (~bordecraf@37.165.118.246)\n4:19 AM <Blackwolfsa> Does it have to be timelocked?\n4:19 AM <@cjs77> What I also love about the refundable deposit model is that the Active VN register is self-maintaining. You need to *re-register* every 6 months (ala SSL certificates) rather than requiring de-registration.\n4:19 AM <@cjs77> blackwolfsa: ^^ is why time locks are highly desirable\n4:19 AM <Blackwolfsa> As long as it exists, the node is\"registered\", if the node spends that utxo, the node is \"de-registered\"\n4:20 AM <@cjs77> simian_za: Another good Q\n4:20 AM <neonknight> The hash of the registration location could also be used as unique identifier for a VN\n4:21 AM <Blackwolfsa> cjs77: for that to work we have to either check that the registration is newer than 6 months or something\n4:22 AM <Blackwolfsa> a dormant node wont spend that as well.\n4:22 AM <@cjs77> blackwolfsa: Having an auto-spend in 6 months guarantees that we get a check-in from a VN if they want to stay registered. If a VN operator loses interest and doesn't care about his deposit, it should auto-deregister, no?\n4:23 AM <simian_za> How will an Auto-spend/Auto-refund work though?\n4:23 AM <simian_za> will the transaction sit in the mempool?\n4:24 AM <neonknight> Also not sure how to do an auto spend with mimblewimble\n4:24 AM <@cjs77> yeah, it would have to sit in the mempool.\n4:25 AM <Blackwolfsa> 6 months sitting in the mempool might does not seem very reliable.\n4:25 AM <Blackwolfsa> I think its safer to just check how old his utxo is.\n4:25 AM <@cjs77> So I reckon there would need to be 2 txs: One locking the output, and one that hangs around.\n4:25 AM <@cjs77> >not very reliable\n4:25 AM <@cjs77> perhaps - fair comment\n4:25 AM <simian_za> So rather when an Asset Creator is looking for VN's he will ignore registrations that are older than 6 months\n4:26 AM <Blackwolfsa> If we need to check how old his utxo is, we might as well remove the timelock\n4:26 AM <simian_za> so a VN cannot use his old registration to take part in DAN activity\n4:27 AM <Blackwolfsa> Yes, its not ideal, but its better than flooding the VN list with inactive VN's\n4:27 AM <@cjs77> The timelock must stay -- otherwise it's cheap to run a VN, do something nasty, shut it down, get a refund; and repeat\n4:27 AM <simian_za> Also a VN could register, get picked for a committee and then deregister and repeat\n4:28 AM <simian_za> all with the same deposit amount\n4:28 AM <@cjs77> The auto-refund is debateable; but the timelock is crucial for sybil resistance\n4:28 AM <Blackwolfsa> ok makes sense\n4:28 AM <neonknight> Agreed, timelock is important\n4:30 AM <neonknight> If the deposit is high enough, inactive VNs wont forget to release the deposit\n4:30 AM <@cjs77> Yeah, I guess we can't *force* auto-deregistration\n4:31 AM <simian_za> you sort of can if you ignore old registrations for all the listing and validation operations\n4:33 AM <@cjs77> So the question of how much to lock up. I don't know the answer, but some things to think about:\n4:33 AM <@cjs77> * needs to be high enough to make Sybil attacks expensive\n4:33 AM <@cjs77> * needs to be low enough to produce a \"reasonable return\" for VN operators running VNs as a business\n4:33 AM <@cjs77> * high enough to encourage dormant VNs to claim the deposit ASAP\n4:34 AM <simian_za> That is going to be a moving target as the value of Tari fluctuates\n4:34 AM <@cjs77> sure\n4:34 AM <simian_za> Can it be a function of the amount of Tari in circulation?\n4:35 AM <simian_za> hmm but that doesn't take into account the market value\n4:36 AM <neonknight> A function of mining reward could also be considered.\n4:37 AM <Hansie> simian_za : Yes, and any direct link with fiat currency will be volatile\n4:38 AM <Blackwolfsa> mining fee's should stay kinda in line with fiat\n4:40 AM <Hansie> Yes, and therefor somewhat self regulated, but not so the block reward\n4:45 AM <simian_za> So a function of fees does make sense. Though keeping track of the average fees in a decentralized manner is a challenge\n4:46 AM <Hansie> cjs77: I am wondering about a registration term of say 6 months. Let's say I am an asset creator, looking to appoint VNs in a \"permissionless\" network appointed manner with some boundary conditions I specify for them. These could be some minimum collateral amount, some network credibility rating and \"time-to-live\" (i.e. time till auto de-registration). So I would like to know how many \"terms\" have been served, are they light\n4:46 AM <Hansie> weight or heavy weight VNs and how long I can depend on them. Any ideas?\n4:48 AM <Blackwolfsa> avg fee's should be easy to calc = (reward-block reward) /  kernels\n4:48 AM <Blackwolfsa> and we have some rolling limit of the avg between the last 10 blocks\n4:50 AM <Hansie> Maybe the amount of collateral above a certain threshold could be self determined, thus market regulated.\n4:52 AM <Hansie> Do we envisage a method whereby a VN can extend its registration window, for example renew it some time before it becomes invalid?\n4:52 AM <@cjs77> Hansie: I think those are important questions, but possibly independent of the VN registration process? Personally I think VN metrics will probably be a second layer function\n4:55 AM <Hansie> Yes, agreed not all for base layer. So maybe a mechanism to top up collateral, extend the registration window, and build up some sort of embedded track record?\n4:58 AM <Blackwolfsa> extending could be easy, one reg-utxo -->> another reg-utxo\n4:58 AM <Blackwolfsa> we could allow the properties like id etc to cary over\n4:59 AM ‚áê bordecraft quit (~bordecraf@37.165.118.246) Ping timeout: 250 seconds\n5:04 AM <Hansie> Yes, makes sense. So this could also take care of topping up the collateral, as the new Tx can combine the old collateral with a new input, or making it less.\n5:07 AM <Hansie> So maybe the 'VN registration TX' could also employ a simple counter in the registration meta data that increases every time a re-registration is done without a lapse in active service?\n5:16 AM ‚Üî oneiric_ nipped out  \n5:18 AM <mikethetike> > yeah, it would have to sit in the mempool\n5:18 AM <mikethetike> I think it has to be on the blockchain, but locked up like a coinbase\n5:18 AM <mikethetike> No autospend, although the VN could choose to create the autospend if they wished\n5:19 AM <mikethetike> The registration can't actually be in the mempool, because then the locked up funds are not confirmed\n5:19 AM <mikethetike> Unless I'm wrong\n5:20 AM <mikethetike> or I have misunderstood what the registration tx is\n5:21 AM ‚Äî mikethetike reads previous messages \n5:30 AM <neonknight> registration is on baselayer, but autospending needs to live in mempool\n```\n",
    "title": "Tari Protocol Discussion 26",
    "date": "2019-02-28T14:00:00.000Z",
    "excerpt": "On Thursday, the Tari community gathered to analyze different ways to make sure the high-performance second layer of the Tari network (The DAN) could leverage the high security of the base layer....",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-26.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "26"
  },
  {
    "slug": "2019-02-25-tari-protocol-discussion-25",
    "content": "\nOn Monday, the Tari community compared the pros and cons of different Multisig approaches. Mostly, the conversation revolved around Aggregated Schnorr signatures and Bitcoin-style script based multisigs. Below is the TL;DR on Monday's conversation (full transcript included below):\n\nConsiderations for multisig approaches\n\n* N-of-N scenarios can be solved with aggregated schnorr signatures\n* They are flexible, small, and confidential between parties\n\n* N-of-M scenarios could leverage Shamir's secret sharding\n* How do you tie final assembly of the secret to a transaction that all parties have agreed to without requiring the asset issuer to always be online?\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (11am EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n\n```\n11:06 AM <Blackwolfsa> Hi everyone, wat do you guys think about aggregated vs multisigs in mimble wimble\n11:06 AM <Blackwolfsa> The pros ans cons of each\n11:07 AM <simian_za> are we talking n-of-n?\n11:08 AM <simian_za> because what's the difference between aggregated sigs in MW and multisig?\n11:10 AM <simian_za> do you mean Bitcoin style script based multisig vs aggregated schnorr?\n11:14 AM <Blackwolfsa> Yes bitcoin type sigs vs musig type sigs\n11:19 AM <simian_za> so for n-of-n Multisig seems great. The signature is small and completely confidential between the parties\n11:20 AM <simian_za> for n-of-n is there any downside to musig vs script style?\n11:20 AM <Blackwolfsa> Yes I agree, it does seem to be very flexible, but the problem is 'n of m\n11:21 AM <Blackwolfsa> But as far as I have it, we might be able to do so something like a shamirs secret sharding\n11:23 AM <neonknight> Having a compact n-of-m sig without relying on generating all combinations of signatures, in the mempool, would be nice.\n11:24 AM <simian_za> ja n-of-m seems quite difficult. so pure Shamir sharding is a a little tricky because how do you tie the final assembly of the secret to a transaction that all the parties have agreed to?\n11:25 AM <neonknight> In some cases such as with Validator nodes, I think the asset creator could possible create and share the secrets for each validator node. Only he knows the full secr\n11:26 AM <neonknight> secret, but combining the secrets remain a problem.\n11:31 AM <Blackwolfsa> But then he as to be online 100% of the time\n11:32 AM <Blackwolfsa> Not exactly undoable, but undesirable\n11:33 AM <simian_za> the second layer aspect is definitely important but I do think we need to find a general solution on the base layer for a number of applications\n11:35 AM <neonknight> The asset creator could pre-generate different secrets and share the partial secrets at asset creation or some other event, ensuring that he doesn't always need to be online. Agreed, a generic n-of-m sig mechanism would be better.\n11:37 AM <simian_za> so Shamir sharding of the complete key is quite tricky but I heard in passing Andy Poelstra talking about an approach where the members of the multisig shard their individual portions of a n-of-n MuSig. This means that if there is a majority of the members available they could collaborate to reconstruct the missing members portions of the MuSig during a MuSig style protocol\n11:39 AM <Blackwolfsa> That's definitely something we need\n11:45 AM <mikethetike> mw - all the participants in a transaction need to sign (n-of-n) the excess\n11:45 AM <mikethetike> that's still using schnorr right?\n11:47 AM <simian_za> I am not actually sure about that in the MuSig context, in MuSig they definitely all have to collaborate to reconstruct the blinding factor\n11:47 AM <simian_za> which I guess is then used to sign the excess in the usual MW way?\n11:48 AM <simian_za> and that signature will be aggregated with the blinding factor chosen by the recipient of the payment\n11:49 AM <simian_za> but that MW aggregation of the sender (the MuSig) and the receiver is not a MuSig itself\n11:52 AM <mikethetike> so we are discussing n-of-m spending of an output?\n11:52 AM <simian_za> Ja, MuSig seems to neatly solve the n-of-n case\n11:56 AM <mikethetike> so in shamir sharding, there is the actual blinding factor, that none of the m know. A party could then communicate with N-1 other parties to retrieve their point and then find the actual blinding factor?\n11:58 AM <simian_za> So that implies that someone knew the blinding factor to start with and sharded it, I think that is why the approach of sharding the blinding factor directly is not possible\n11:59 AM <Blackwolfsa> One thing to remember thou is the signing of the excess and the blinding of the output, is sperate.\n11:59 AM <Blackwolfsa> And both very important\n12:00 PM <simian_za> Andy Poelstra's approach was that the participants each choose their constituent keys and aggregate using the MuSig protocol but they each member shard's their component secret and distributes the shards to the other participants. This means that the threshold majority of the members can reconstruct the missing MuSig components\n12:01 PM <simian_za> right Blackwolfsa? You explained it to me, I didn't actually read it myself :P\n12:04 PM <Blackwolfsa> That's as far as I have it. But I have not properly gone over the math fully yet.\n12:05 PM <simian_za> sounds plausible though it will add a round or two of comms to distribute the shards\n```\n",
    "title": "Tari Protocol Discussion 25",
    "date": "2019-02-25T14:00:00.000Z",
    "excerpt": "On Monday, the Tari community compared the pros and cons of different Multisig approaches. Mostly, the conversation revolved around Aggregated Schnorr signatures and Bitcoin-style script based...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-25.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "25"
  },
  {
    "slug": "2019-02-21-tari-protocol-discussion-24",
    "content": "\nOn Thursday, the Tari community gathered for a discussion on payment time-locks. Specifically, the conversation examined the various methods for time-locking payments, the pros and cons of each method, and how each method might be useful in the scope of digital assets. Below is the TL;DR on Thursday's conversation (full transcript included below):\n\n**Multiple UTXO approach**\n\nPros:\n\n* It's simpler - no change to basic MW is required\n* Could possibly make payments to different people (like a stokvel)\n* Any payment schedule formula is possible (linear, exponential, sinusoidal)\n\nCons:\n\n* One huge transaction upfront\n* It's less granular because of TX size (limited to ~10 - 100 payouts)\n\n**Single UTXO approach**\n\nPros:\n\n* Standard TX size\n* Maturity schedule is very finely grained; receivers can spend as little or as much of their entitlement as they wish\n\nCons:\n\n* Requires new feature to MW UTXO set\n* Each schedule type requires a new implementation (linear, exponential etc.)\n\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (11am EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Thursday‚Äôs discussion\n\n```\n4:05 AM <@cjs77> Good morning\n4:07 AM <mikethetike> let's do this\n4:07 AM <mikethetike> what's the topic for today?\n4:09 AM <Hansie> What about discussing different types of time locks on payments?\n4:11 AM <@cjs77> Yes. Assuming we want to do atomic swaps, we'll need HTLCs (https://en.bitcoin.it/wiki/Hash_Time_Locked_Contracts) in addition to the UTXO time locks that already exist (e.g. on Coinbase outputs)\n4:12 AM <@cjs77> I think there's even some scope for innovation on UTXO timelocks. Right now, it's a delta function: You can spend 0 until time t, and after t, you can spend 100%\n4:13 AM <@cjs77> There could be some interesting use cases for allowing that spending function, to follow different maturity schedules\n4:13 AM <Hansie> So Grin only have immediate payment and delayed payment for coinbase transactions, right?\n4:14 AM <@cjs77> I think you can put a time lock on any UTXO, but I may be mistaken\n4:14 AM <@cjs77> It's enforced on CB though\n4:15 AM <Hansie> Ok\n4:16 AM <simian_za> So a maturity schedule would say that after x blocks you can spend f(x) (ranges from 0% to 100%) of the UTXO\n4:16 AM <simian_za> ?\n4:17 AM <simian_za> but when you spend a UTXO you spend all of it and then generate change outputs so you would need to spend the allowed portion and then the remaining value would need to be put into a new UTXO with a new maturity time lock?\n4:17 AM <@cjs77> Yeah, a linear maturity schedule. It could be useful for say, a subscription \"debit order\", or a pocket-money kind of arrangement.\n4:17 AM <@cjs77> simian_za: yes, that would be required\n4:17 AM <Blackwolfsa> every grin kernel has a lock height built in\n4:17 AM <Hansie> But using a single UTXO for that sounds a bit complicated\n4:19 AM <Hansie> Is it not possible to split the micro payouts in fixed amounts linked to different terms?\n4:19 AM <Blackwolfsa> depending on the amount, that might flood a block\n4:19 AM <@cjs77> So you're saying make all the split payments upfront with diffrent timelocks\n4:20 AM <@cjs77> I can see pros and cons with either approach\n4:20 AM <Blackwolfsa> side note, does it matter if all them are in the same block?\n4:20 AM <Hansie> cjs77: Yes, I think so. If the same UTXO is morphed every time into a payout and remainder, who will sign all those  Txs?\n4:21 AM <@cjs77> The receiver --  he/she owns those coins all along. Is just not able to spend them\n4:22 AM <@cjs77> *all of them\n4:22 AM <Hansie> So in that model a payout schedule must also be published somehow\n4:23 AM <Blackwolfsa> yes, but that  could be some function in place of a lockheight\n4:24 AM <Hansie> That seems complex, as the values are blinded\n4:25 AM <Hansie> How can you apply a function to an amount that is hidden?\n4:25 AM <Blackwolfsa> but you could do that with a rangeproof\n4:25 AM <Blackwolfsa> You dont really care about the value, you only care its below a certain limit\n4:27 AM <Hansie> I do not think use of a range proof can guarantee say 1% payout of initial funds every so many blocks.\n4:28 AM <Hansie> blackwolfsa: In Grin. why is 'HeightLocked' in 'pub enum KernelFeatures' and not in 'enum OutputFeatures'? Surely what we want to do must be linked to the UTXO?\n4:29 AM <Hansie> https://www.irccloud.com/pastebin/85WF9eM0/\n4:30 AM <@cjs77> So Pros of the multiple UTXO approach:\n4:30 AM <@cjs77> * It's simpler - no change to basic MW is required\n4:30 AM <@cjs77> * Could possibly make payments to different people (like a stokvel)\n4:30 AM <@cjs77> * Any payment schedule formula is possible (linear, exponential, sinusoidal)\n4:30 AM <@cjs77> Cons:\n4:30 AM <@cjs77> * One huge transaction upfront\n4:30 AM <@cjs77> * It's less granular because of TX size (limited to ~10 - 100 payouts)\n4:30 AM <@cjs77> Pros of single UTXO approach:\n4:30 AM <@cjs77> * Standard TX size\n4:30 AM <@cjs77> * Maturity schedule is very finely grained; receivers can spend as little or as much of their entitlement as they wish\n4:30 AM <@cjs77> Cons:\n4:30 AM <@cjs77> * Requires new feature to MW UTXO set\n4:30 AM <@cjs77> * Each schedule type requires a new implementation (linear, exponential etc.)\n4:30 AM <@cjs77> What else am I missing?\n4:31 AM <Blackwolfsa> Hansie: You block the transaction from being mined, you dont lock the output. You are disallowed from having a kernel with a lockheight greater than current block height in.\n4:34 AM <Blackwolfsa> Hansie, you can construct a graph of function block height. You then supply a rangeproof that the amount of the utxo left is higher than the graph point on mined height\n4:35 AM <Hansie> So these amounts would have to be known then?\n4:37 AM <simian_za>  The schedule will need to be attached to UTXO in some non-confedential way so the miners can see it?\n4:37 AM <simian_za> or can you maybe construct a series of rangeproof conditions ahead of time?\n4:38 AM <Blackwolfsa> Stupid example:\nYou have 100 Tari. \nyou lock the funds with y = x -10000. \nThis means every block after block 10000 you can extract 1 tari. \nTransaction is mined with rangeproof saying there is more than 99 in the output. \nWhen you extrat funds at block 10050 worth 30 tari. \nYou leave the remaining 70 Tari with a rangeproof of more than 50. \n4:40 AM <Hansie> So the lower limit of the series of range proofs must be linked to every payout? `[100 - 2^64]`, `[99 - 2^64]`, `[98 - 2^64]`, etc.  Right?\n4:41 AM <Hansie> Then there is no confidentiality, really.\n4:41 AM <Blackwolfsa> no you have\n4:42 AM <Blackwolfsa> look at the example, although the rangeproof says there is more than 50, you dont know how much is in there.  It could be anywhere from 50 uponto max tari in cerculation\n4:42 AM <Blackwolfsa> *circulation\n4:42 AM <Hansie> cjs77: Another con of  single UTXO approach: Confidentiality may be compromized.\n4:43 AM <Blackwolfsa> Hansie: How? I am missing how it may\n4:43 AM <Hansie> Blackwolfsa: If the lower limits are known, much is revealed\n4:45 AM <Hansie> To confirm what simian_za also said\n4:45 AM <Blackwolfsa> I dont see exactly how? Technically speaking every grin transaction has a lower limit 0. With these you just increase it a bit\n4:45 AM <@cjs77> True, the single UTXO approach requires the values to be transparent. Not so for the multi-UTXO.\n4:45 AM <@cjs77> I guess if you wanted proof that the multi-UTXO approach *actually followed a given schedule*, you could do that out of band, with a bulletproof or something\n4:45 AM <mikethetike> in the case of a debit order\n4:46 AM <Blackwolfsa> why does the values need to be transparent?\n4:47 AM <Blackwolfsa> Am I missing something here?\n4:47 AM <mikethetike> Maybe this is possible: inputs -> n debits orders. The receiver of the debit orders gets the blinded amounts for n outputs. They know the amounts, (the miners don't need to). They also can't receive all the outputs because the time locks are in the partial signature\n4:47 AM <mikethetike> so no need for rangeproofs or revealing the amounts\n4:47 AM <mikethetike> what is the use case that we are trying to solve?\n4:48 AM <@cjs77> ^ That's the Multi-UTXO case above\n4:48 AM <Hansie> <mikethetike> you described the multi UTXO approach\n4:49 AM <@cjs77> Just on simplicity alone, I think the MultiUTXO case is the stringer of the two.\n4:49 AM <@cjs77> stronger*\n4:49 AM <Blackwolfsa> You have 100 Tari. \nyou lock the funds with y = x -10000. \nThis means every block after block 10000 you can extract 1 tari. You dont know how much is locked away? You only have a  lower limit of the amount left in the funds. \nWhen you extract funds at block 10050 worth 30 tari. \nYou leave the remaining 70 Tari with a rangeproof of more than 50. From a external perspective, you only know the user extracted somewhere between 0.00000000001 > 50 Tari.\nIt could be anyvalue between that. \n4:49 AM <mikethetike> you can't prevent people from using the multiUTXO method\n4:50 AM <Blackwolfsa> I made a mistake, in the previous snippet, when you commit the initial one, you dont have to say how much funds are in the transaction\n4:50 AM <simian_za> It is simpler but the number of installments is quite a limiting factor\n4:50 AM <mikethetike> the only question is whether we need to support a smaller one and hope people will use it\n4:50 AM <mikethetike> the amount in the input UTXOs is also a limiting factor\n4:51 AM <Hansie> So from a blockchain perspective, for either approach, we at least need to  add coinbase type functionality to normal transactions\n4:52 AM <Blackwolfsa> yes, that does not exist\n4:52 AM <mikethetike> again which problem are we trying to solve\n4:52 AM <Hansie> Scheduled payouts\n4:53 AM <Hansie> Let's say someone wants to leave Tari for their grand children, but do not want to give it to them to spend all at once, like some amount every 5 years.\n4:54 AM <Hansie> The receiver should own the Tari coins, just not be able to spend it\n4:55 AM <simian_za> Hansie: So coinbase maturity in the form of lock_heights is a core part of the Grin-style MW implementation so that exists\n4:55 AM <Hansie> Yes, that seems to be something that can be extended\n4:57 AM <Hansie> So Blackwolfsa responded: \"You block the transaction from being mined, you dont lock the output.\"\n4:58 AM <Hansie> That seems different than what we need. A transaction that was minded, but prevented from being spent.\n4:58 AM <simian_za> No, I believe you lock the output i.e. it is mined but you cannot include it as an input in a transaction until the time has expired\n4:59 AM <simian_za> think about it in terms of a coinbase transaction, that cannot sit in a mempool it is mined\n4:59 AM <Hansie> Ok so that is more useful\n5:03 AM <Blackwolfsa> simian_za: There is currently  no lock on the output?\n5:03 AM <Blackwolfsa> The lock is only on the kernel and not stops it from being mined\n5:04 AM <Blackwolfsa> Only a coinbase output (and I mean specifically a coinbase) is blocked from being spent\n5:05 AM <Blackwolfsa> pub struct TxKernel {\n\t/// Options for a kernel's structure or use\n\tpub features: KernelFeatures,\n\t/// Fee originally included in the transaction this proof is for.\n\tpub fee: u64,\n\t/// This kernel is not valid earlier than lock_height blocks\n\t/// The max lock_height of all *inputs* to this transaction\n\tpub lock_height: u64,\n\t/// Remainder of the sum of all transaction commitments. If the transaction\n\t/// is well formed, amounts components should sum to zero and the excess\n\t/// is hence a valid public key.\n\tpub excess: Commitment,\n\t/// The signature proving the excess is a valid public key, which signs\n\t/// the transaction fee.\n\tpub excess_sig: secp::Signature,\n}\n5:05 AM <mikethetike> You can have a list of lock heights (one per output) in the kernel\n5:06 AM <simian_za> hmm ok, then I guess put a lock_height in the outputs\n5:06 AM <mikethetike> either way it's in the transaction that needs to be verified by the signature\n5:06 AM <mikethetike> if you want to verify the signature, you need all the data that was signed\n5:07 AM <mikethetike> so if the signature has to stick around, the data does too\n5:07 AM <mikethetike> or at least that's my understanding\n5:08 AM <Blackwolfsa> Grin does not have lock_heights in the outputs, but we could add it.\n```\n",
    "title": "Tari Protocol Discussion 24",
    "date": "2019-02-21T14:00:00.000Z",
    "excerpt": "On Thursday, the Tari community gathered for a discussion on payment time-locks. Specifically, the conversation examined the various methods for time-locking payments, the pros and cons of each...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-24.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "24"
  },
  {
    "slug": "2019-02-18-tari-protocol-discussion-23",
    "content": "\nOn Thursday, the Tari community discussed one particular aspect of asset issuer namespace registration. Specifically, Thursday's conversation was all about RAIN_IDs, and the ways digital asset issuers might register assets on the DAN. Below is the TL;DR on Thursday's conversation (full transcript included below):\n\n* What is the optimal RAIN_ID length?\n* Do digital asset issuers require multiple RAIN_IDs?\n* Is a prior block hash required in the RAIN_ID string?\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (11am EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n\n```\n11:04 AM <Hansie> Was wondering about the size of the RAIN_ID string\n11:06 AM <Hansie> Example  `RAIN_ID = Hash(prior block hash || ??? || PubKey)` ‚Äã\n11:07 AM <Hansie> And about the entropy  `??? ` ‚Äã\n11:07 AM <simian_za> Feels like there is plenty of entropy for this task in there already?\n11:08 AM <@cjs77> Agree. I don't think the prior block hash is required. Hash of PubKey might be sufficient, or `H(Pubkey||domain name)`\n11:08 AM <Blackwolfsa> Previous block hash is suppose to be almost 100% random\n11:09 AM <@cjs77> But why is it necessary?\n11:09 AM <Hansie> Duplicates will not be allowed, and it is possible for an asset creator to register more than one RAIN in a single block\n11:09 AM <simian_za> but that PubKey is ostensibly fairly random?\n11:09 AM <Blackwolfsa> I am also currently pondering that. We don't require random there\n11:09 AM <Blackwolfsa> It's a few chars doesn't mean anything, only needs to be unique\n11:11 AM <Blackwolfsa> But that being said, we don't really want someone to register say ea or disney\n11:11 AM <neonknight> You just don't want a public that generates a RAIN clash\n11:11 AM <neonknight> key*\n11:11 AM <Hansie> So a simple counter would do?\n11:12 AM <simian_za> There will need to be some sort of validation by the mining node so if somehow an identical RAIN already exists that transaction will just never be added to a block for mining\n11:13 AM <Blackwolfsa> We would have to do a check anyway\n11:13 AM <Blackwolfsa> I am leaning towards hash of pubkey stored with the pubkey.\n11:14 AM <Blackwolfsa> That should stop anyone from registering say ea or Disney.\n11:14 AM <Hansie> The only clash here would potentially be from the same asset issuer registering multiple RAINs at the same time\n11:14 AM <simian_za> so then only one of those transactions should make it into a block\n11:15 AM <simian_za> if they didn't generate new pubkey's for each RAIN\n11:15 AM <Hansie> We can prevent duplicates quite easily then with a simple counter\n11:15 AM <@cjs77> hansie -- what would the multiple rains looks like? i.e. what diofferentiates them?\n11:16 AM <simian_za> a counter in their wallet? Why not then just have the wallet generate new pubkeys\n11:17 AM <Hansie> cjs77 -- They will just be numbers as I understand. The real value comes in when thay are linked to a FQDN with an OpenAlias TXT record\n11:18 AM <@cjs77> Yes, but I'm asking you to explain why an issuer would want more than one RAIN? What is the differentiating feature that would make them want more than one?\n11:18 AM <neonknight> If the RAIN ID has a high enough dimensionality(similar to a public key) then the probability of the hash of the public key creating a clash is extremely low. Including the block hash in the creation of the RAIN ID means you don't have to keep a counter.\n11:19 AM <@cjs77> e.g. is it like \"Disney.tickets\" and \"Disney.StarWars\"?\n11:19 AM <Hansie> Oh I see. There could be a need to register multiple assets in the DAN, thus requiring multiple RAINs.\n11:19 AM <Hansie> For multiple domains\n11:20 AM <Blackwolfsa> No but you could just reuse the rain?\n11:20 AM <@cjs77> Right, but that's your answer. Multiple domains will differentiate the RAINS, even with the same pubkey, if you allow `Hash(PubKey || Domain)`\n11:20 AM <Blackwolfsa> Both of those still fall under Disney. Asset name\n11:22 AM <Hansie> cjs77 - understood, so the domain name could be used as the differentiating entropy\n11:22 AM <Blackwolfsa> Point of though, don't dns names carry aliases as well?.\n11:23 AM <@cjs77> Yes, or whatever else we decide is a differentiating feature\n11:23 AM <Hansie> blackwolfsa - If RAINs were to be traded, maybe best not to reuse them?\n11:23 AM <Blackwolfsa> So under Disney. Com you would have say Disney. Starwars\n11:23 AM <Blackwolfsa> If rains are just random strings, and the reall meta data is the dns. Why trade them?\n11:24 AM <Blackwolfsa> Create a new rain and sell the dns?\n11:24 AM <Hansie> The way I understood it is we want to tie a RAIN to a FQDN - singular\n11:25 AM <Hansie> blackwolfsa - Also possible yes\n11:26 AM <Blackwolfsa> Rain the string will be tyed into the dns txt. So even if you sell iylt, the owner just changes the rain string under the dns. And the rain you just bought is now worthless\n11:26 AM <Blackwolfsa> Sorry for the spelling and Grammer, on my phone\n11:26 AM <Hansie> -:)\n11:28 AM <Hansie> This is my thinking for the OpenAlias TXT entry:\n11:28 AM <Hansie> https://www.irccloud.com/pastebin/bYDklHlq/\n11:30 AM <Hansie> So this entry can be used only for a single asset, but multiple entries are allowed\n11:32 AM <Blackwolfsa> I don't think we should limit it to single assets.\n11:33 AM <Blackwolfsa> I think it should be used as a pubkey provong you can create assets under the dns name\n11:33 AM <Blackwolfsa> And all dns aliases linked to that dns\n11:36 AM <Hansie> So in my thinking the FQDN and `RAIN_ID` combination will define an asset, and those pairs will allow lookup and verification of assets that belong to a domain\n11:38 AM <stanimal> I think RAINs should be on the org level - they are cheap to create (txn fees) now that we are using global DNS and aren't concerned about squatting on namespaces in the base layer - if you wanted multiple RAINs  you could have a RAIN TXT record on subdomains for your org\n11:41 AM <Blackwolfsa> Yes, the only reason for rains is to stop spamming. The dns kinda does that already for us.\n11:41 AM <Blackwolfsa> We could even potentially through away the rain and just store the pubkey.\n11:41 AM <Blackwolfsa> The rain wil just help with a kinda official cache\n11:42 AM <simian_za> but it could just be a pubkey rather than the hash\n11:42 AM <simian_za> properly generated pubkeys should be plenty random\n11:43 AM <simian_za> and the reverse lookup the DAN maintains will just be domain > pubkey\n11:44 AM <Hansie> simian_za: So you are suggesting  `RAIN_ID = PubKey` ?\n11:45 AM <simian_za> Could be? What does the hash do for us?\n11:46 AM <Hansie> It lets one use the same PubKey\n11:46 AM <Hansie> With the added entropy\n11:47 AM <simian_za> fair enough, though generating new pub-keys is pretty easy\n11:48 AM <stanimal> The only disadvantage is that asset ids will be very long and I'd think there wouldn't be the need to register too many RAINs since one RAIN should suffice in most cases for an org - a shorter string (len=32, charset=48) would provide enough space for RAINs, though I could be wrong\n11:49 AM <simian_za> yes that is a good point, if the RAIN is pubkey length then every asset issued under it will be longer than required. So I guess that gets back to Hansie's original question: How long should the RAIN be?\n11:50 AM <Hansie> Some OpenAlias TXT records:\n11:50 AM <Hansie> https://www.irccloud.com/pastebin/YkOz4B1J/\n11:51 AM <Hansie> The XMR string length is 95 and the BTC one is 34\n11:51 AM <stanimal> something like a bitcoin address i.e `base58(hash(PK))` 34 characters? May even be shorter\n11:51 AM <simian_za> plenty of space on that side\n11:53 AM <Hansie> The TXT record also has a `tx_description` field which could be used as human readable handle\n11:55 AM <stanimal> I was thinking the same thing - one of the main use-cases for this is a lookup - though it would have to be indexed in the DAN lookup table, so perhaps limit it to 1-3 words to prevent abuse / save on storage\n11:56 AM <stanimal> mitigate abuse*\n11:57 AM <Hansie> So disney.com asset lookup could resolve `Goofy`, `Ariel`, etc.\n11:57 AM <stanimal> as well as disney, yup\n11:59 AM <Hansie> Thank you guys, much food for thought here!\n12:07 PM <stanimal> Definitely - Thanks all - have a great evening/day\n```\n",
    "title": "Tari Protocol Discussion 23",
    "date": "2019-02-18T14:00:00.000Z",
    "excerpt": "On Thursday, the Tari community discussed one particular aspect of asset issuer namespace registration. Specifically, Thursday's conversation was all about RAINIDs, and the ways digital asset issuers...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-23.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "23"
  },
  {
    "slug": "2019-02-14-tari-protocol-discussion-22",
    "content": "\nOn Monday, the Tari community held a brief discussion continuing on the topic of namespace registration. Specifically, there are two competing proposals that were assessed for feasibility. Below is the TL;DR on Monday's conversation (full transcript included below):\n\nProposal 1:\n\n* Asset issuers claim text identifiers that are registered on the base layer\n* Easily readable\n* Suffers from domain squatting attacks\n\nProposal 2:\n\n* RAINs are random text labels  that are mapped to IRL entities using an out of band lookup mechanism, such as Open Alias\n* Open Alias doesn't support reverse lookups\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (11am EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n\n```\n4:19 AM <@cjs77> Hey everyone, sorry for the late start\n4:24 AM <@cjs77> I think there's still some discussion to be had around the RAIN idea. There are currently 2 proposals as I see it: One where Asset Issuers claim text identifiers that are registered on the base layer. This is easily readable, but suffer from domain squatting \"attacks\". The proposal to mitigate this is to charge more for shorter IDs. Sammy007 makes the point that not all identifiers (regardless of length) are equal (e.g. EPIC\n4:24 AM <@cjs77> >> FNPA). He suggests, aiui, that RAINS are random text labels  that are mapped to IRL entities using an out of band lookup mechanism, such as open alias.\n4:34 AM <simian_za> Ahh, just looked at Open Alias and this makes a lot of sense\n4:35 AM <Blackwolfsa> I agree\n4:37 AM <Hansie> Neat\n4:44 AM <neonknight> The Open Alias Mechanism makes sense!\n4:44 AM <@cjs77> Yeah, I like it too.\n4:57 AM <@cjs77> Does openalias support reverse lookups? Can I get \"domate.getmonero.org\" from the recipient_address 44AFFq5kSiGBoZ4...QBEP3A?\n4:58 AM <moneromooo> No.\n4:59 AM <@cjs77> Hmm.. that's a potential spanner in the works.\n5:01 AM <moneromooo> If your network DHTs, that sounds like something you could maintain this way though.\n5:02 AM <@cjs77> right\n5:08 AM <moneromooo> Of course, since a DNS record owner can change the TXT record at any time, it's going to be hard to keep the two up to date in the face of a malicious DNS record owner.\n5:09 AM <moneromooo> ie, if I start using disney's address on my own domain name.\n5:21 AM <simian_za> We were thinking that the TXT record would include a signature by the asset issuer signing a message including the domain it can live on so that the DNS records can be validated against the domain the live on\n5:24 AM <simian_za> signed using the private key belonging to the public key published as part of the RAIN registration transaction on the base layer\n6:19 AM <@fluffypony> yeah you could sign it\n8:09 AM ‚Üí rottensox joined (~rottensox@unaffiliated/rottensox)\n9:19 AM <sammy007> cjs77 yep just some random or with some useful data but not TLD-like\n9:31 AM <sammy007> moneromooo assuming you wanna buy a PONY asset, you wouldn't trust RAIN anyway, you will go and validate it on internet, go to website and check if this asset is valid, just like with any erc20 where we can see tons of DAOs and only one is authentic, the openalias could help you to add that asset into your own registry in a wallet (just like with erc20 and MEW) bc you will know that issuer is running a website on mylittlepony.biz domain\n9:33 AM <sammy007> or check for shitcointalk ANN thread, etc. Otherwise I can claim AMZN on chain and phish people with my fake shares for example\n9:35 AM ‚Äî moneromooo is just the peanut gallery here\n9:37 AM ‚Üî rottensox nipped out  \n9:39 AM <@fluffypony> yeah you'd hit like Disney.com and it would pull the record from there\n9:39 AM <@fluffypony> if you go in that route then namespaces almost doesn't matter\n```\n",
    "title": "Tari Protocol Discussion 22",
    "date": "2019-02-14T14:00:00.000Z",
    "excerpt": "On Monday, the Tari community held a brief discussion continuing on the topic of namespace registration. Specifically, there are two competing proposals that were assessed for feasibility. Below is...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-22.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "22"
  },
  {
    "slug": "2019-02-11-tari-protocol-discussion-21",
    "content": "\nOn Monday, the Tari community discussed how namespaces might be registered by digital asset issuers on the Tari network and how the asset creation process might work. Below is the TL;DR on Monday's conversation (full transcript included below):\n\nName registration:\n\n* DA issuer namespaces are publicly registered on the Tari base layer\n* They are transferable\n* There's a cost associated with registering\n* The cost should have an inverse relationship with namespace length\n\nAsset creation:\n\n* Are Tari tokens burned or moved at asset creation?\n* Will Tari use MimbleWimble to transfer Tari native tokens?\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (11am EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n\n```\n11:03 AM <@cjs77> Tonight, I thought we could have a discussion around namespace registration..\n11:03 AM <Xeagu> Great idea\n11:04 AM <@cjs77> The idea is that asset issuers should be able to reserve a name to prevent spoofing, similar to www domain names\n11:06 AM <ixside> How might these asset issuers go about registering their names?\n11:06 AM <@fluffypony> also is namespace like a prefix?\n11:07 AM <@cjs77> Yes, more like a prefix\n11:07 AM <@fluffypony> so then I register the fluffy name space and I issue a pony asset then it's fluffy.pony ?\n11:07 AM <Xeagu> I think that provides more utility\n11:08 AM <@cjs77> RFC 310 has a proposal for asset ids, but that's the broad idea\n11:09 AM <Blackwolfsa> Perhaps we should give users the idea to sell this aswell\n11:09 AM <@cjs77> Pony.4733.0.ac56d_3737a4b35 is more likely :)\n11:09 AM <Xeagu> MusicFestival.2019\n11:11 AM <@cjs77> Here's some more thoughts:\n11:11 AM <@cjs77> * These names are registered on the base layer\n11:11 AM <@cjs77> * They are transferable\n11:11 AM <@cjs77> * there's a cost associated with registering\n11:12 AM <Xeagu> Since the Tari token supply is tied to Monero PoW, what if Tari had a second PoS layer which could resolve issues like namespace squatting?\n11:13 AM <neonknight> Is registration on the base layer private or public?\n11:13 AM <Blackwolfsa> It should be public.\n11:14 AM <Blackwolfsa> The idea I think is having a 2 layer pos for assets. And the asset names allows you to assign a name to them to identify your assets more easily\n11:14 AM <@cjs77> I would think public. If you think about it, all you need for this is a tx that links a string and public key to a utxo\n11:14 AM <Xeagu> The creation supply of tokens is public information.\n11:16 AM <@cjs77> Xeagu: That's not far from what we're proposing (2 layers). RFC-300 has more detail iirc\n11:17 AM <Xeagu> I'm interested in the governance mechanism for resolving asset creation disputes.\n11:19 AM <Xeagu> I think it's a trade off between domain squatting risk and increased attack surface for asset censorship.\n11:22 AM <simian_za> In the end it will need to be first come first serve but the idea is to make the registration cost a function of the name length. So shorter names are more expensive\n11:23 AM <Xeagu> Might even consider making that name length cost scale exponentially and not linearly\n11:23 AM <@cjs77> I think that's right.\n11:24 AM <Xeagu> Additionally, at asset creation, are Tari tokens burned or moved?\n11:25 AM <@cjs77> For args sake, assume 26 chars allowed. There are 26 one char possibilities, 26^2 2 char possibilities.. Ie the number of combinations scale exp, so the cost should too.\n11:26 AM <Hansie> Yip, that makes sense\n11:26 AM <Xeagu> 1-3 character name space could be orders of magnitude more expensive to register than 20+ character\n11:26 AM <@cjs77> Correct\n11:27 AM <@cjs77> We could make 2 or 3 chars the minimum, though.\n11:27 AM <Xeagu> If tokens are burned upon creation, that high cost for shorter domain name assets functions as a subsidy in the form of deflation for the rest of the Tari ecosystem.\n11:29 AM <@cjs77> It's an interesting exercise to try make this work with standard MW UTXOs\n11:30 AM <simian_za> I do agree that burning the fee is something to think about as it makes the incentives much easier to manage.\n11:30 AM <Xeagu> Assets on Tari use MW during transfer but will Tari itself use MW?\n11:31 AM <Blackwolfsa> Assets won't, but Tari will\n11:31 AM <Hansie> Xeagu: I do not understand 'as a subsidy in the form of deflation'\n11:31 AM <simian_za> So burning Tari with a MW transaction should be possible?\n11:31 AM <Xeagu> Hansie: burning tokens from a fixed supply increases the value of the rest of the tokens\n11:32 AM <Blackwolfsa> Its easier to lock up the funds on creation in the output. That way you can transfer it.\n11:33 AM <Xeagu> simian_za: I don't know if burning tokens in MW is even possible. It's up for discussion if burning Tari tokens upon creation will be considered.\n11:33 AM <mikethetike> Xeagu: it may, but that isn't the intention\n11:33 AM <@cjs77> Yeah, it's possible but the problem with burning Tari is that you have utxo bloat.\n11:33 AM <Xeagu> The alternative is the cost for creating a Tari goes to another entity.\n11:33 AM <mikethetike> burning as in creating an output that no one knows the blinding factor to\n11:33 AM <Xeagu> *creating a Tari asset\n11:34 AM <Xeagu> mikethetike: yes. Making it unspendable\n11:34 AM <Hansie> Xeagu: Thanks, understood\n11:35 AM <Hansie> cjs77: How big a problem is the perceived UTXO bloat?\n11:35 AM <mikethetike> cjs77: it does create bloat, but the data will have to live somewhere\n11:35 AM <Blackwolfsa> It's not going to be that much\n11:35 AM <Blackwolfsa> But is against the design philosophy of mw.\n11:35 AM <mikethetike> either way a node will need to keep that data somewhere\n11:36 AM <Xeagu> I think this is where my earlier question comes in\n11:36 AM <Xeagu> Will Tari itself use MW to transfer Tari native tokens? I understand the assets on Tari will use MW\n11:37 AM <Xeagu> But if Tari and Monero will be able to be atomic swapped, why do you need privacy for Tari native tokens themselves?\n11:37 AM <Hansie> I think MW for Tari native tokens\n11:38 AM <@cjs77>  putting assets on a PoW chain is unscaleable (imagine trying to tokenise all WoWarcrafts inventory for example)\n11:38 AM <Blackwolfsa> Tari tokens will use mw natively.\n11:38 AM <@cjs77> So all assets live on a non PoW 2nd layer\n11:38 AM <Blackwolfsa> The assets of Tari will use their own 'thing' related to how a dag operates\n11:39 AM <mikethetike> the current proposals are for mw on the base layer, assets layer is not yet fully explored\n11:39 AM <Xeagu> I'm of the impression that Tari assets will use MW because only asset participants will need to maintain a record of transactions and MW compresses all that data onto the main Tari chain.\n11:40 AM <Hansie> Privacy and confidential transactions is at the heart of MW, so choosing MW gives you that.\n11:40 AM <Xeagu> Good enough privacy and scaling is what MW offers\n11:41 AM <Hansie> MW for the base layer, something else for the 2nd layer (DAG)\n11:41 AM <Xeagu> Hansie: I would propose the inverse\n11:41 AM <mikethetike> Xeagu: I also like the idea of MW on both layers\n11:42 AM <Blackwolfsa> The problem is neither a dag or mw can deliver the speed and scaling we need for the second layer\n11:42 AM <Hansie> Interesting idea, the inverse, never thought of it that way\n11:42 AM <Blackwolfsa> As a raw pow chain\n11:42 AM <neonknight> So the WoWarcraft namespace could be registered on base layer without tokens and then the tokens for that asset could be created on the 2nd layer Digital Asset Network..\n11:42 AM <mikethetike> but there are some tricky details to it, so I've been focusing on the base layer for now\n11:43 AM <Xeagu> mikethetike: Also possible but I don't know how MW plays with burning Tari tokens (if that is decided as the path to go)\n11:43 AM <@cjs77> But assets have state, so I don't think cut-through would win you much. 2) Not everyone in the world needs to know about your asset 3) some assets need very high levels of liveness, so PoW isn't a good fit.\n11:43 AM <Hansie> MW can only really deal with fungible tokens\n11:43 AM <Xeagu> What if Tari native tokens were effectively public? Does it even matter since you can atomic swap into Monero?\n11:44 AM <simian_za> The privacy MW affords is also key to its scalability\n11:45 AM <Xeagu> Monero (private) <-> Tari (public) <-> Digital Asset  (MW private)\n11:45 AM <Hansie> The atomic swap into Monero is not more or less special than to say into Bitcoin, I think\n11:45 AM <mikethetike> I like the fact that you can choose to make things public if you want. The fees in MW are public, don't see why we couldn't allow some other outputs to also show the value\n11:46 AM <mikethetike> but I personally like privacy by default\n11:46 AM <Hansie> So the fees are only public until they are moved to a private blinded MW output...\n11:47 AM <Xeagu> The tradeoff for MW is only relevant participants need to be informed of the state change\n11:47 AM <Xeagu> You don't need to update the entire network that one asset changed hands. Only those involved in that asset network\n11:48 AM <Xeagu> Fluffy talked about this in his interview in January\n11:48 AM <Blackwolfsa> Current proposal is to keep that entirely off chain. Meaning only the vn and the users involved know of it\n11:52 AM <Hansie> I think Tari base layer coins/tokens should be totally independent from Monero tokens, and that it should be used to enable all digital asset network instructions and transactions that hit the MW base layer.\n11:52 AM <mikethetike> at some point in the future, Tari may be mined on its own, seperate from Monero\n11:52 AM <Xeagu> mikethetike: whoah. This is not my understanding of Tari\n11:53 AM <mikethetike> it may not, but any merge mined coin can live on its own\n11:54 AM <simian_za> The proposal is for it to be merge mined with atomic swaps but they will be two separate chains with different use cases that drive them\n11:56 AM <Xeagu> Gotta go. Talk more later\n11:57 AM <Hansie> Nice talking Xeagu\n```\n",
    "title": "Tari Protocol Discussion 21",
    "date": "2019-02-11T14:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed how namespaces might be registered by digital asset issuers on the Tari network and how the asset creation process might work. Below is the TL;DR on Monday's...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-21.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "21"
  },
  {
    "slug": "2019-02-04-tari-protocol-discussion-20",
    "content": "\nOn Monday, the Tari community discussed how pruned and archival nodes might sync with each other and handle re-orgs. Below is the TL;DR on Monday's conversation (full transcript included below):\n\nArchival nodes:\n\n* Necessary as a safety backstop\n* At least one honest archival node required to recover from a deep re-org (a deep re-org is one that goes further back than a node's pruning horizon)\n\nPruned nodes: \n\n* Maintain a subset of all past blocks\n* How many blocks should pruned nodes track before pruning (pruning horizon)?\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (11am EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n\n```\n10:58 AM <@cjs77> We'll be answering your questions -- particularly around how nodes can sync / seed /  handle re-orgs in pruned mode & archival node\n10:58 AM <@cjs77> But any other Qs are ok too :)\n11:02 AM <Blackwolfsa> Thanks, that's probably the biggest negative point with typora, no built in spell checker\n11:04 AM <@cjs77> IntelliJ's Markdown navigator plugin does a great job -- maybe check that out\n11:05 AM <@cjs77> Instead of repeating everything here, I think the RFC PR https://github.com/tari-project/tari/pull/102 covers all the bases ..\n11:05 AM <@cjs77> Thanks blackwolfsa for writing it up;\n11:06 AM <@cjs77> If there are any comments about it, feel free to brig it up.\n11:07 AM <@cjs77> One thing that one might pick up is that a big re-org happens past the point of the `PruningHorizon`, pruning nodes are stuffed.\n11:08 AM <Blackwolfsa> Yes please\n11:08 AM <@cjs77> So it highlights why some archival nodes are necessary as a safety backstop\n11:08 AM <Blackwolfsa> Yes you have two choices there, find an archive node or a node with a higher pruning horizon\n11:08 AM <@cjs77> (But also note that Grin implements the same strategy)\n11:09 AM <Blackwolfsa> Technically it's not a nessasity. You can just sync with the node that provided you with the longest chain\n11:09 AM <Blackwolfsa> Pow chain that is\n11:09 AM <tk___> if im not a block explorer (or the NSA) what would be the incentive (not financial per se) to run an archival node?\n11:10 AM <@cjs77> Or an exchange..\n11:10 AM <@cjs77> But none, really :)\n11:10 AM <tk___> hmm i see\n11:10 AM <@cjs77> Blackwolfsa: good point. There may be a distribution of nodes with different pruning horizons\n11:11 AM <@cjs77> I was assuming that most folk run with the default setting :)\n11:13 AM <Blackwolfsa> Even then it's not required. We should just ensure our defaults are chosen in such a way to ensure its statistically safe\n11:14 AM <Blackwolfsa> For example let's say it's something stupid like 5, you will get the complete header information and then the 5 blocks to satisfy your horizon\n11:15 AM <simian_za> what is the proposed default horizon?\n11:15 AM <Hansie> Wallets may benefit from services provided by archival nodes as they need some kind of proof that the view of the blockchain they see is real. Some wallets could potentially offer better security than SPV.  This may mean that they want to look at a pruned view of the blockchain going past the pruning horizon.\n11:17 AM <Blackwolfsa> But why would a wallet want to look at the history?\n11:17 AM <@cjs77> It's 5,000 on Grin, right? But maybe we can have an installer that allows users to select \"safe\" (10,000), \"med\" (5,000), \"small\" (2,500) -- in the absence of an installer the docs for the config file provides this guidance. That way we can be more confident of getting a distribution\n11:17 AM <Blackwolfsa> It has even less motivation to due to then a base node\n11:18 AM <Hansie> Trust\n11:18 AM <Blackwolfsa> Unless I am missing something completely. Wallets only care about its own utxo, not even the other utxo\n11:18 AM <Blackwolfsa> What trust? Wallets don't track consensus rules?\n11:19 AM <simian_za> The only benefit of seeing the full history is to recover from a reorg, other than a major reorg a non-pruned view of the blockchain has no extra security features?\n11:19 AM <neonknight> It seems as if the largest bitcoin reorg was 53 blocks in 2010 and after that only 4.\n11:19 AM <simian_za> so 5000 blocks is 3.5 days which seems fairly solid\n11:20 AM <simian_za> assuming a 1 minute block time\n11:22 AM <@cjs77> Big reorgs are either: a 51% attack, or due to a network partition. Either is really bad if it leads to a reorg of even 100 blocks; but you should be able to get the entire network back in sync no matter how deep the re-org.\n11:23 AM <ixside> Is there a ratio of archival nodes to pruned nodes that must be met to recover from a deep re-org?\n11:24 AM <@cjs77> Assuming the majority of Monero miners merge-mine Tari the risk of a re-org like that is really miniscule, but you still have to be able to recover from it imho\n11:25 AM <@cjs77> ixside: Nope. You only need one honest archival node (Blackwolfsa - check my math ;) )\n11:25 AM <Blackwolfsa> I am. Missing why you need one?\n11:26 AM <simian_za> yes even one will be enough to recover...as long as you trust it. So more archival nodes = more trust due to lower likelihood of sybil\n11:26 AM <simian_za> attack\n11:26 AM <Blackwolfsa> The node that has the longest pow chain should also have the required header and most likely blocks as well\n11:26 AM <Blackwolfsa> Some base node had to have assembled that longest chain?\n11:27 AM <simian_za> but if it is reorged beyond its Horizon how do we recover?\n11:27 AM <Hansie> One does not need to trust the archival node, must just be able to verify everything.\n11:27 AM <Hansie> Full sync to archival node\n11:27 AM <@cjs77> Do you need to trust it? When you reach your pruning horizon, you'll be able to compare UTXO sets again\n11:28 AM <Hansie> Yip, do not trust, verify\n11:28 AM <Blackwolfsa> Yes if you go beyond your horizon. But remember for some base node that has not happened\n11:29 AM <Blackwolfsa> How else do you get a new longest chain?\n11:31 AM <Hansie> How is the UTXO set verified?\n11:32 AM <Blackwolfsa> He has to have a valid set of utxo + headers\n11:32 AM <Blackwolfsa> Otherwise he can't have a longer chain\n11:32 AM <@cjs77> doh - you're right. Sorry -- was doing something else and not thinking clearly\n11:35 AM <Hansie> So if a reorg goes past the pruning horizon there is a problem, even though highly unlikely?\n11:36 AM <Blackwolfsa> No, you sync to the node which has it\n11:36 AM <Blackwolfsa> The only case where we might have an issue is if the node supplying the re org has a horizon of 1\n11:37 AM <Blackwolfsa> In that case I am in favor of ignoring the reorg. That just smells fishy\n11:38 AM <Hansie> Hence cjs77 suggestion of \"allows users to select \"safe\" (10,000), \"med\" (5,000), \"small\" (2,500) \"\n11:38 AM <Blackwolfsa> Yes\n11:38 AM <Blackwolfsa> But nothing stop that node from making his 1\n11:39 AM <Hansie> So can we assume/fix in the code that if a node is unable to provide the small set that node can never have the longest chain?\n11:41 AM <Blackwolfsa> Yes, if he can't prove he has the longest chain, then he doesn't have it\n11:42 AM <Hansie> Meaning at least  full blocks for the last 2500 blocks?\n11:43 AM <@cjs77> An horizon of 1?\n11:44 AM <@cjs77> That's node won't sync anyone though, so why worry?\n11:44 AM <Blackwolfsa> It's if he has the longest chain\n11:44 AM <@cjs77> The horizon is the # of blocks you track without pruning\n11:45 AM <Blackwolfsa> I am thinking in the lines of if some node can't supply you of a valid chain, meaning log enough for your horizon, then you ignore it ans go on\n11:45 AM <@cjs77> right? So my node with a horizon of 2,500 blocks will either handle the re-org or be in the same boat as that guy\n11:45 AM <Blackwolfsa> So your node has a horizon of 2500. Some block with horizon 1 comes along with the correct headers for a chain of longer pow\n11:45 AM <Blackwolfsa> What do you do?\n11:46 AM <Blackwolfsa> He can only supply you with one node? This seems to me a vector for attack and he should just be ignored\n11:46 AM <@cjs77> You mean supply me with one block?\n11:47 AM <ixside> Why would a node have a horizon of 1? \n11:47 AM <Blackwolfsa> That's my point, if he has a horizon that small, he is most likely an attacker\n11:48 AM <@cjs77> If the reorg is beyond my pruning horizon, the RFC says I must get blocks from a node with  longer horizon or an archoval node (infinite horizon), so by that logic, yes, I ignore the node with horizon 1\n11:48 AM <@cjs77> That makes sense to me, unless I'm missing something\n11:49 AM <Blackwolfsa> Yes\n11:49 AM <@cjs77> So I'd also ignore a node with a 2,499 block horizon\n11:49 AM <Hansie> So logically a reorg cannot be promoted by any node if the full blocks for the impacted portion of the blockchain cannot be provided?\n11:49 AM <@cjs77> ^ yes\n```\n",
    "title": "Tari Protocol Discussion 20",
    "date": "2019-02-04T14:00:00.000Z",
    "excerpt": "On Monday, the Tari community discussed how pruned and archival nodes might sync with each other and handle re-orgs. Below is the TL;DR on Monday's conversation (full transcript included below):...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-20.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "20"
  },
  {
    "slug": "2019-01-31-tari-protocol-discussion-19",
    "content": "\nThursday‚Äôs architecture discussion examined the possible names for the different ways that Validator Node committees on the Tari network can be constructed, as well as a brief discussion on archival vs pruned nodes. Below is the TL;DR on Thursday's conversation (full transcript included below):\n\nNames for VN Committees:\n\n* Must be intuitive and reflect the systems governing the Tari network\n* What is the optimal way to refer to a committee assigned by an asset issuer vs one that is algorithmically determined?\n\nNode syncing:\n\n* Should Tari build off the system Grin uses for node syncing and handling re-orgs?\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (11am EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n\n```\n9:38 AM <@cjs77> Did we reach consensus on the names for the  types of VN committees? My IRC-fu isn't quite strong enough to be able to search the backlog\n9:40 AM <@cjs77> IIRC we had \"permissioned\" => \"assigned\" and \"permissionless\" => \"elected\" to indicate a committee that is assigned by the asset issuer vs one that get algorithmically determined\n11:52 PM <Hansie> There are still confusion with the intuitive meaning of the names\n11:52 PM <Hansie> One suggestion is: Permissioned => Assigned and Permissionless => Elected\n11:53 PM <Hansie> Another suggestion is: Permissioned => Nominated and Permissionless => Assigned\n11:54 PM <Hansie> This is in direct contrast, so we have to choose the most intuitive names or suggest something better\n12:13 AM <Blackwolfsa> I dont believe we have chosen one yet\n12:13 AM <Blackwolfsa> But I am with Hansie on this, we need to think carefully about the names, and choose the most intuitive ones\n12:19 AM <Blackwolfsa> From my point of view the words mean the following:\n12:19 AM <Blackwolfsa> Nominated- Someone/thing appointed you to the committee\n12:19 AM <Blackwolfsa> Assigned - Someone/thing said you should attend this committee\n12:19 AM <Blackwolfsa>  Elected - There was a vote and you where voted to this committee\n12:21 AM <Blackwolfsa> An alternative scheme might be:\n12:21 AM <Blackwolfsa> Permissioned => Designated or Appointed\n12:21 AM <Blackwolfsa> Permissionless => Allocated\n1:19 AM <simian_za> Allocated and Assigned are extremely similar in meaning so I think either work, shall we flip a coin or have a poll?\n1:19 AM <simian_za> I agree that elected might imply a vote and in the current RFCs and discussion we have not really put forward the idea of a vote so perhaps Elected should be taken out of the running\n1:21 AM <simian_za> Appointed feels better than Designated in my mind\n4:02 AM <simian_za> so ev en in my response I have become confused and proposed 3 words for permissioned\n4:03 AM <simian_za> to be unambiguous any of those words would make sense for permissioned and then `algorithmically selected` for permissionless?\n4:04 AM <Blackwolfsa> that might work\n4:05 AM <Blackwolfsa> we need more input in this as I think this can save quite a bit of confusion in the long run\n4:07 AM <Blackwolfsa> -----\n4:10 AM <Blackwolfsa> another topic for discussion is syncing: I really like how grin handles it. You constantly check the pow from your peers. If they a block with more than you have, you instantiate a sync with them. You are then supplied with the changes in the utxo from the blocks you missed. As well as the beginning utxo set.\n4:11 AM <Blackwolfsa> To facilitate this each node delays its pruning. So even thou an output has been spent you dont immediately forget about it.  This allows you to supply this info to another node.\n4:11 AM <Blackwolfsa> This will also handle re-orgs quite efficiently.\n4:12 AM <Blackwolfsa> If you go beyond that pruning height, you will have to initiate a full sync from an archive node that as the complete history\n4:18 AM <simian_za> so each block lists its accumulated PoW in addition to its difficulty?\n4:20 AM <Blackwolfsa> yes\n4:20 AM <Hansie> Accumulated PoW must also be verifiable\n4:21 AM <simian_za> So if you wanted to verify it you would need to pull down all the block headers back to the genesis block and then do the sum yourself?\n4:22 AM <neonknight> Probably only need to calculate for each reorg branch until you reach the common block\n4:29 AM <Blackwolfsa> idealy this should never be longer than a block or two\n4:44 AM <@cjs77> I'm happy with `algorithmically selected`, but the Rust compiler doesn't like it :troll:\n4:44 AM <@cjs77> `ALGORITHMIC` a decent-enough shorthand?\n4:46 AM <Blackwolfsa> we could just go with algo?\n4:47 AM <@cjs77> > Accumulated PoW must also be verifiable\n4:47 AM <@cjs77> Indeed. This is one of the things you need to validate the blockchain state.\n4:49 AM <Hansie> Naming: I have these - CONSIGNED (meaning entrust, hand over for care) and ASSIGNED (meaning select and give a responsibility) and DESIGNATED (meaning specify as selection) and EMPOWERED (meaning authorize, enable) and ENTRUSTED (meaning give custody, authority to)\n4:53 AM <Hansie> So maybe ENTRUSTED for the stronger one and DESIGNATED for the lesser?\n4:53 AM <stanimal> What about 'dedicated' for permissioned (dedicated to the task, dedicated nodes)? I like how `algorithmically selected` is unambiguous though bit of a mouth full - 'algorithmic nodes' doesn't sound right  - 'algsel nodes' ? :P\n4:55 AM <@cjs77> ASSIGNED or DESIGNATED are good. PRE_ASSIGNED might be even better\n5:05 AM <Hansie> cjs77: You lost me... Is this suggestion for the stronger or lesser term?\n7:32 AM <neonknight> My vote is for: creator_assigned and algorithmically_selected\n7:37 AM <@cjs77> I'm saying I don't have a preference for either of ASSIGNED or DESIGNATED; but my vote goes to PRE_ASSIGNED\n7:40 AM <@cjs77> CREATOR_ASSIGNED is actually nice and explicit. I change my vote to that :)\n7:40 AM <@cjs77> ALGORITHMICALLY_SELECTED just feels too long. ALGO / ALGORITHMIC seems clear enough to me\n7:40 AM <moneromooo> defaulted ?\n7:43 AM <Blackwolfsa> Algo selected should be default.\n7:44 AM <simian_za> I vote CREATOR_ASSIGNED and ALGORITHMIC\n7:46 AM <Blackwolfsa> My vote would be creater_assigned and algo_selected\n7:50 AM <neonknight> Changing vote from algorithmically_selected to algorithmic, we are converging\n8:02 AM <moneromooo> preselected and defaulted. Since we need two :)\n8:07 AM <@cjs77> moneromoo: there may be a world where the asset issuer could pick from more than one algorithm to set his/her committee\n8:17 AM <@cjs77> if the committee is selected algorithmically, there'll be another field to indicate the choice of algorithm (e.g. totally random vs, required minimum collateral vs some other identifier)\n8:24 AM <moneromooo> creator_assigned/network_assigned (if I'm muddying things, say so and I'll go away)\n8:28 AM <@cjs77> ^ actually I like that a lot. less typing ftw :)\n8:39 AM <simian_za> +1 network_assigned \n1:42 PM <@cjs77> Let's get https://github.com/tari-project/tari/pull/78 merged in. The idea is to cover the main talking points of the DAN and reserve some RFC numbers. I think that goal is accomplished  -- thanks to everyone who picked up some obvious gaps in the original submission. As soon as it's merged, I can create issues for each RFC and anyone who wants to pick up the topic can get some input here and then write up the doc.\n```\n",
    "title": "Tari Protocol Discussion 19",
    "date": "2019-01-31T14:00:00.000Z",
    "excerpt": "Thursday‚Äôs architecture discussion examined the possible names for the different ways that Validator Node committees on the Tari network can be constructed, as well as a brief discussion on archival...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-19.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "19"
  },
  {
    "slug": "2019-01-28-tari-protocol-discussion-18",
    "content": "\nOn Monday‚Äôs architecture discussion, one subset of the Tari community looked into tx cut-through as part of the consensus of a blockchain, while a parallel discussion focused on the tax implications of privacy coins. Below is the TL;DR on Monday's conversation (full transcript included below):\n\nIncluding tx cut-through as part of the blockchain consensus:\n\n* Should cut-throughs be required for a block to be valid?\n* Cut-throughs can increase privacy and reduce block sizes\n* What's the gain of a cut-through vs immediately pruning when you get the block?\n\nTax implications for privacy coins:\n\n* If private currencies gain significant every-day adoption, how might a government collect tax?\n* Governments could incentivize for submission of expense proofs and reverse-engineer taxable income\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (11am EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n\n```\n11:10 AM <@cjs77> https://www.forbes.com/sites/ktorpey/2019/01/27/would-a-ban-on-bitcoin-be-as-pointless-as-the-war-on-drugs/\n11:13 AM <@cjs77> > We are thinking of making the cut-through part of the consensus of the blockchain, can anyone think about why that would be a bad idea?\n11:13 AM <@cjs77> Any other thoughts on this?\n11:15 AM <sarang> In what way?\n11:17 AM <@cjs77> Any way, really, but mostly security, privacy or reliability.  In case it's not clear, blackwolfsa was proposing that cut-through of blocks is not optional, but a compulsory step when mining new blocks\n11:17 AM <ixside> https://www.irccloud.com/pastebin/60Cu43XL/\n11:22 AM <Hansie> cjs77: I assume cut-through of Txs, not blocks?\n11:24 AM <Hansie> ixside: So in essence if a large portion of all currencies were private cryptos, how would governments collect tax?\n11:25 AM <ixside> Yes, that's what I'm getting at\n11:26 AM <moneromooo> They might have to investigate *after* they have evidence of a crime. Like they're supposed to.\n11:29 AM <ixside> @moneromooo what could an investigation uncover if all the txs are private?\n11:31 AM <Hansie> Simple idea: Governments can incentivise disclosure of monies paid with proofs, not monies earned. Business and individuals have to declare their earnings. Then any business found cheating on their books can be heavily fined.\n11:32 AM <@cjs77> hansie: yes cut-through of txs, inside the candidate block\n11:35 AM <Hansie> cjs77: Understood, so where does the consensus part comes in? It could just be a validation rule on how to construct the block.\n11:38 AM <@cjs77> That's essentially the definition of a consensus rule. If they don't follow it, nodes won't agree on valid blocks\n11:38 AM <mikethetike> so if I receive a block that has not been cut-through I should discard it?\n11:39 AM <Blackwolfsa> Yes\n11:40 AM <Hansie> Yes, according to the proposal any Txs that could have been cut-through and were not should invalidate the block.\n11:40 AM <ixside> @Hansie ok, so Alice provides a proof that she paid 'x' in taxes last year, and therefore the government assumes that she made 'y' in total earnings. How would a government find out that Alice in fact earned more than 'y' last year if all her txs were private?\n11:41 AM <mikethetike> Seems like a strange thing to take a hard stance on, considering that it is valid to mine empty blocks\n11:41 AM <mikethetike> and include and exclude transactions otherwise\n11:42 AM <Blackwolfsa> It reduces blocks sizes and increases privacy\n11:42 AM <Hansie> ixside: Alice could get away with it, but if Bob disclosed payments made to Alice that does not tally up she will be in trouble.\n11:42 AM <Blackwolfsa> An empty block would be fine. And doing cut through still nets the miner his fee for that transaction.\n11:43 AM <Hansie> Why must it be valid to mine empty blocks?\n11:43 AM <Blackwolfsa> The outputs and inputs just isn't shown\n11:43 AM <mikethetike> it may be that the miner never received any transactions\n11:46 AM <simian_za> in most nascent blockchains you will find empty blocks due to lack of traffic\n11:48 AM <Hansie> So mining an empty block should not be as tempting when compared to blocks with transactions?\n11:48 AM <simian_za> yes because you don't get any fees\n11:48 AM <@cjs77> It shouldn't be, since you forego all the TX fees\n11:49 AM <mikethetike> I suppose there's no incentive to do cut-through apart from being in the interest of the chain\n11:49 AM <ixside> @hansie Ahh, understood. So as long as businesses all provide valid proofs of their expenses, they can be cross-referenced to figure out what businesses and individuals earned, since an expense for someone must be income for someone else, is that correct?  And then the address of the txs must be tracked too?\n11:50 AM <mikethetike> but I don't see a case for rejecting blocks that do it\n11:50 AM <mikethetike> how much extra data is there in cut through vs pruning?\n11:51 AM <Blackwolfsa> It's a way of enforcing it.\n11:52 AM <Blackwolfsa> I only want to know is there any reason why we should enforce it. It is more beneficial from a privacy standpoint\n11:52 AM <Blackwolfsa> You only save a few bytes with cut through\n11:54 AM <simian_za> surely more than just a few bytes?\n11:55 AM <mikethetike> as a user, you can never guarantee that your transaction would be cut through because it might arrive between blocks, so any \"extra\" privacy would be coincidental\n11:56 AM <Hansie> ixside: I merely had the thought to change the incentives around because this is a different problem for Governments... Registered businesses would need to have audit-able statements of some sorts. And whistle blowers can help to keep everyone honest. Something like that. Not really thought trough.\n11:57 AM <ixside> @hansie interesting idea, thanks for clarifying!\n11:57 AM <Blackwolfsa> I think it's going from memory it's about 133 bytes per transaction\n11:58 AM <Blackwolfsa> But that is true, but in the same breath you can purposely spent your output again immediately if you want to\n11:58 AM <simian_za> isn't the rangeproof also removed with the output?\n11:59 AM <neonknight> How big is a normal transaction, 1.1kb?\n12:00 PM <stanimal> I thought kernels are kept and the rangeproof is part of the kernel\n12:00 PM <Blackwolfsa> Kernels are kept, but range proof is in the output\n12:01 PM <stanimal> Ah ok\n12:05 PM <Blackwolfsa> Range proofs is probably the biggest part of the TX but we can cut though that\n12:05 PM <mikethetike> What gets dropped in a cut-through that would stick around in a pruning?\n12:06 PM <mikethetike> where I'm going with this: what's the gain over cut through vs immediately pruning when you get the block?\n12:07 PM <simian_za> nothing? I thought they were essentially the same process conducted at different scales (intra block vs intra block)\n12:07 PM ‚Äî moneromooo back\n12:07 PM <moneromooo> So the objection seems rooted in the belief that an investigation can also only look at blockchain txs.\n12:08 PM <Blackwolfsa> It's the same, only part left over is the excess\n12:08 PM <moneromooo> However, investigations in every other context also looks at other things. For instance, if Alice kills Bob but nobody sees here do it, an investigation has a good chance of nicking her, and not because the investigation will just ask everyone \"did you see her\".\n12:09 PM <moneromooo> The difference is \"privacy by default\", but \"investigation *based on prior suspicion\" will uncover clues. Not always, and the costs are higher, but this is definitely not a non starter.\n12:10 PM <mikethetike> @moneromooo @ixside wouldn't an investigation into taxes require a court order or some kind before they are allowed to view your bank statements?\n12:10 PM <moneromooo> For private financial txs, same: privacy by default, but: warrants for view key, you check with other people who have business or other ties. For tax in partiuclar, check lifestyle cost. etc. All of which is already done anyway.\n12:11 PM <moneromooo> Hopefully it would.\n12:11 PM <mikethetike> i.e. they would use other evidence first\n12:12 PM <mikethetike> ^ this is my guess, not sure how true it is\n12:13 PM <moneromooo> And random checks, on which you're assumed guilty until proven innocent I think.\n12:17 PM <Blackwolfsa> Cut through for me is part of privacy by default and you have to opt out\n12:22 PM <mikethetike> unless you are doing the cut through before you send it to the network, someone else can see it and record it, so it doesn't really add privacy\n12:34 PM <mikethetike> I'm not against forcing cut-through blocks, but I think it is purely for space saving\n12:36 PM <Blackwolfsa> It does add privacy since you had to catch it in the mempool. You can cut through yourself as well but it just makes it require a bit more effort to see/track\n```\n",
    "title": "Tari Protocol Discussion 18",
    "date": "2019-01-28T14:00:00.000Z",
    "excerpt": "On Monday‚Äôs architecture discussion, one subset of the Tari community looked into tx cut-through as part of the consensus of a blockchain, while a parallel discussion focused on the tax implications...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-18.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "18"
  },
  {
    "slug": "2019-01-24-tari-protocol-discussion-17",
    "content": "\nOn Thursday‚Äôs architecture discussion, the Tari community examined the ways in which a digital asset issuer might identify themselves on the Tari network. One idea is that asset issuers can register a namespace similar to how website domains are registered today. Below is the TL;DR on Thursday's conversation (full transcript included below):\n\nAsset issuers can register a namespace for identifying ownership of assets. How might the mechanics of these IDs work?\n\n* Shorter namespaces could be more expensive than longer ones to reduce name-squatting\n* Registering a namespace could have some additional tx fee associated with it\n* Refundable time-locks and token burning are two possible fee mechanisms\n* Must consider possible security implications of a static namespace key that never changes\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (11am EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Thursday‚Äôs discussion\n\n```\n4:03 AM <@cjs77> mikethetike posed a good question earlier\n4:03 AM <@cjs77> > I'd like to see how some of the 2nd layer stuff gets squished in\n4:04 AM <@cjs77> So this is a good time to put some proposals forward that lead into this question.\n4:05 AM <@cjs77> One, that comes from @fluffypony, is that asset issuers can register a namespace (similar to domains in www) which will be used in asset ids.\n4:06 AM <@cjs77> There was a reference to this in the Asset Template RFC, but hasn't really been elaborated on to this point\n4:09 AM <@cjs77> The proposal states, _Assets are identified by <TLDI>.#_hhhhh on the Tari network_, where TLDI is a 2-16 bytes string of the Top Level Digital Issuer (TLDI). TLDIs would be registered on the base layer and associated with a public key\n4:10 AM <@cjs77> Clearly, such a registration would require an extension to MW to allow such a thing\n4:12 AM <Blackwolfsa> we should be able to add this easily\n4:12 AM <Blackwolfsa> But to make sure namespaces are not abused we could make them more expensive the shorter they are\n4:14 AM <neonknight> I think it is good mechanism that can help users visually see from the asset id that they are not buying a \"fake\" asset\n4:17 AM <simian_za> It will hopefully mitigate asset name squatting because an organization could just start using a slightly different version of the TLDI and the squatted name will become worthless to some extent\n4:18 AM <@cjs77> It could be implemented pretty easily if we extend `OutputFeatures' like so:\n4:18 AM <@cjs77> ```pub enum OutputFeatures {\n    Plain,\n    Coinbase,\n    TLDI(TLDIString),\n}```\n4:23 AM <Hansie> So how much is the TLDI registration worth? Just the transaction fee for the miner, or something else as well? Perhaps an amount to be burnt? An amount to be time locked? How to determine?\n4:23 AM <Hansie> Apart from length as mentioned\n4:29 AM <Blackwolfsa> I dont particularly like burning coins (seems such a waste), I would rather give it to the miner\n4:30 AM <Hansie> Apart from the transaction fee?\n4:31 AM <simian_za> having some subtle deflation is not really a waste, it just adds to scarcity\n4:31 AM <simian_za> and makes the incentives in the system less complex\n4:33 AM <Hansie> So the transaction fee for the miner, an amount to be burned as well as an amount to be time locked?\n4:33 AM <@cjs77> So it definitely can't just be a normal mining fee, otherwise you could cheaply squat all over the namespace\n4:35 AM <@cjs77> It needs to be a special mining fee, with a sliding scale according to length as blackwolfsa suggested; or a burnt output - in which case I think we'd need to store an additional pubkey in the UTXO representing the TLDI\n4:36 AM <@cjs77> The benefit of a burnt output is that it never gets cut-through, so no need to mark it as a special \"unprunable\" output or anything like that\n4:38 AM <mikethetike> seems to fit nicely with the mimblewimble way of doing things\n4:39 AM <Hansie> Yip, makes sense\n4:39 AM <simian_za> ja that is quite elegant\n4:40 AM <Blackwolfsa> Having it locked is kinda nice\n4:40 AM <@cjs77> I'm leaning towards a burnt output -- seems simpler in many ways; and you could still sell you TLDI by doing a ZKCP with the private key.\n4:40 AM <@cjs77> I'm wondering if there should be a way to revoke a TLDI? in case the issuer's private key is compromised, or they just want to retire it?\n4:41 AM <@cjs77> ZKCP = zero-knowledge contingent payment\n4:42 AM <Hansie> I should make economic sense\n4:43 AM <@cjs77> :thinking: hansie mentioned time locks. That could be a useful feature. Perhaps TLDIs are only valid for a year, and then you have to re-register them?\n4:44 AM <@cjs77> sucks for UTXO bloat, but the idea is compelling\n4:45 AM <Hansie> Each re-registry could invalidate the previous registration, keeping the UTXO set the same\n4:46 AM <neonknight> During Asset creation, you could burn 90% of the Tari coins and lock 10% as a deposit. When asset creator spends the deposit then the Asset is destroyed.\n4:46 AM <@cjs77> Would it? I think you'd find the math would start to break\n4:46 AM <@cjs77> ^ hansie\n4:47 AM <Hansie> Must be tested\n4:48 AM <@cjs77> i mean the accounting math. Sum(UTXOs) - Supply = 0. If we overwrite UTXOs, this formula would fail\n4:49 AM <Hansie> Not overwrite, just spend that which was time locked\n4:52 AM <@cjs77> Ah, so you're saying you only pay the first time?\n4:52 AM <Hansie> So verify(namespace, time lock) can be valid if it is registered and time lock/height not reached\n4:53 AM <@cjs77> Are you assuming the UTXO is unspendable, or not?\n4:54 AM <Hansie> Yes, basically\n4:55 AM <Blackwolfsa> But we would probably have to build in some kind of consensus rule preventing the \"burned\" tari to stay there. I know its unprobable but if someone finds that key, they can remove the utxo and that domain name falls away\n4:55 AM <@cjs77> \" if someone finds that key\" is roughly the same as saying \"breaks the DL problem\"\n4:56 AM <Blackwolfsa> I know, but I am thinking about something like the large bitcoin collider project\n4:56 AM <@cjs77> lolwut :)\n4:57 AM <Blackwolfsa> domain registrations would be easy targets as those will be constant and stay there, eg not changeing and being quite large amounts\n4:57 AM <Blackwolfsa> https://lbc.cryptoguru.org/about\n4:58 AM <Blackwolfsa> Spending that transaction would potentially break quite a bit\n5:02 AM <@cjs77> I'd say that the Large Bitcoin Collidor project is a cute waste of time. #ChangeMyMind\n5:04 AM <@cjs77> It seems that there are 2 schools of thought on how to handle TLDIs: The burnt fee route, and the refundable deposit route (possibly with time lock). Is that a fair tl;dr?\n5:04 AM <simian_za> +1\n5:05 AM <Hansie> Spending burnt Tari coins should not invalidate registrations. Thus a  multi transaction of some sorts. When all the conditions are met the namespace can be registered or re-registered.\n5:05 AM <@cjs77> I know the hour is up, but we should continue debating the merits of this until we reach rough consensus on the best way fwd, and then put out an RFC\n5:06 AM <simian_za> Well by definition you should not be able to spend burnt Tari?\n5:06 AM <Hansie> cjs77: It could also be combined with burning some fees together with a time locked amount\n5:06 AM <Blackwolfsa> I like the idea of burning it, but I am scared that we rely too much on the security of that single transaction.\n5:06 AM <Blackwolfsa> On a normal transaction if someone guesses that key, you lose a bit of money.\n5:07 AM <@cjs77> Surely the security of that tx === security of the whole network?\n5:07 AM <simian_za> the odds of actually guessing a key is not a real concern I believe\n5:07 AM <Blackwolfsa> If someone spends your TLDI you lose potentially  a lot of assets\n5:07 AM <Blackwolfsa> that might break tari as a use case\n5:07 AM <@cjs77> A 51% double spend is waaaay more likely than someone finding the spending key\n5:08 AM <simian_za> When we say we are going to burn the tari are we saying that it is only burnt because the owner will not spend it again? I thought by burning it we mean that the mining consensus will stop it from every being spent again\n5:08 AM <@cjs77> By burning, I mean that the blinding factor is unknown to everyone via a NUMS process\n5:09 AM <Blackwolfsa> Not disputing that, let put it this way. Some company registers TLDI with name \"FTW\", is only 3 chars, so its very expensive.\n5:09 AM <@cjs77> so the kH of might base58 encode to \"TariNameRegistrations73729Hgt\"\n5:09 AM <@cjs77> That sort of idea, simian_za\n5:10 AM <Blackwolfsa> Now you have unlimited amount of time to guess that key, Its not going to change, the person cant spend it again. So you can keep guessing for 2, 3, 4, 5 years...Doesn't matter that target is not changing\n5:10 AM <@cjs77> That's fine. Statistically, You need billions of years to guess the key\n5:11 AM <@cjs77> Quantum computers will break things before that\n5:11 AM <simian_za> the difference between this use case that the Collider project is that they are looking for any valid key in the whole UTXO set, not the key for a specific UTXO\n5:11 AM <Blackwolfsa> but a normal utxo changes everytime you spend it, that wont, meaning easier target\n5:12 AM <Blackwolfsa> and a normal utxo just means lost money\n5:12 AM <Blackwolfsa> breaking TLDI is more expensive\n5:12 AM <simian_za> its exactly that reason that it is more likely to find a collision in the UTXO set, the number of possible right guessing is huge\n5:12 AM <Blackwolfsa> *problamatic not expensive\n5:13 AM <simian_za> compared to a single UTCO\n5:13 AM <Blackwolfsa> talk about bigNeon, so bignoen's key is geussed, this means that all tickets sold via bigneon will be dropped, as the asset domain name is now invalid\n5:16 AM <simian_za> Sure but the simple fact is that guessing that specific key is not something that is going to happen in a lifetime\n5:16 AM <Hansie> So these types of transactions should be perfectly binding not perfectly hiding. Thus not a Pedersen commitment. And not normal MW.\n5:17 AM <Blackwolfsa> Its not suppose to happen, just like on beam you where not suppose to get duplicate commitments\n5:17 AM <simian_za> that didn't happen by chance\n5:17 AM <simian_za> that was a copied wallet\n5:17 AM <Hansie> New question:\n5:17 AM <Hansie> How will these types of fees (burning and/or locking) be determined at the onset when Tari coins may have low value vs. down the line when it may have grown to be worth a lot more? Example lets assume charging 10 Tari coins for a 100 character namespace and 100 Tari coins for a 10 character namespace with a sliding scale in between. This may broke the camel's back at some point in time.\n5:17 AM <Blackwolfsa> true, but it broke the whole block chain\n5:18 AM <Blackwolfsa> We can easily add a consensus rule that blocks that that UTXO from being spent, that way if it happens by chance, it will not change anything\n5:19 AM <neonknight> I have an interesting idea.. what if an asset creator in the asset creation process, instead of burning the coins, pay 90% of the Tari coins to a known and verifiable charity and make 10% a deposit. The asset creation entry will not be removed from the blockchain until he spends the deposit, at which time the asset registration is removed. As an example, ravencoin currently burns coins during asset creation, currently it\n5:19 AM <neonknight> account for only 0.04% of the total coins in circulation. No Tari coins are removed from circulation, No reregistration Assets are required and the value locked up is small.\n5:20 AM <simian_za> Hansie: that is a good point, that is the function of the Gas price in Ethereum right? To help tune that?\n6:33 AM <@cjs77> hansie: That's a good point and requires some economic modelling to come up with a good strategy for handling this problem\n6:35 AM <@cjs77> A very blunt tool would be to make Registration fees proportional to the circulating supply.\n6:44 AM <Hansie> Proportional or inversely proportional?\n6:47 AM <Blackwolfsa> Propotional\n6:47 AM <Blackwolfsa> You would like to keep it expensive\n6:48 AM <Blackwolfsa> You only problem you have is that the value is not directly related to the circulation\n6:48 AM <@cjs77> he he, scratch that -- making dynamic fees prop to supply is probably not a good idea -- but I do think it would be useful to think in terms of it when decided on what fees to charge.\n6:50 AM <@cjs77> It could be something that gets adjusted in network upgrades, but this is something that must be approached with real caution -- the idea of messing with economic parameters makes me nervous\n```\n",
    "title": "Tari Protocol Discussion 17",
    "date": "2019-01-24T14:00:00.000Z",
    "excerpt": "On Thursday‚Äôs architecture discussion, the Tari community examined the ways in which a digital asset issuer might identify themselves on the Tari network. One idea is that asset issuers can register...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-17.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "17"
  },
  {
    "slug": "2019-01-21-tari-protocol-discussion-16",
    "content": "\nOn Monday‚Äôs architecture discussion, the Tari community discussed the possibility of enabling P2P mining pools for merged mining. It's a topic that has been mentioned in the past on [Monero's official subreddit](https://www.reddit.com/r/Monero/comments/4emz61/wondering_how_to_make_a_p2p_mining_pool/) and could potentially be applied to merged mining for the Tari protocol.\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (11am EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n\n```\n11:06 AM <@cjs77> Hey everybody\n11:07 AM <Hansie> Hi\n11:08 AM <simian_za> Ello\n11:08 AM <Hansie> Interesting question posted by fluffypony today: \"Can we do p2pool with merged mining?\"\n11:09 AM <Hansie> This is intriguing, found this post for Monero: https://www.reddit.com/r/Monero/comments/4emz61/wondering_how_to_make_a_p2p_mining_pool/\n11:10 AM ‚áê el00ruobuob_[m] quit (~el00ruobu@212.121.161.50) Ping timeout: 272 seconds\n11:11 AM <@cjs77> Yeah it's a cool concept. For context, P2P mining can potentially break the dominance & excessive influence of large mining pools. I think BlueMatt is driving this from Bitcoin.\n11:12 AM <@cjs77> Is there a reason it wouldn't work with merge mining?\n11:13 AM <Hansie> Can not think why not, but the post mentioned some people had some ideas.\n11:13 AM <Hansie> It seems that maybe there were not enough interest at the time\n11:15 AM <simian_za> I can't see why it wouldn't work, the mechanics of merge mining and the distribution of work to the workers is pretty much the same\n11:15 AM <neonknight> It is interesting, the only small issue is that every mining worker has to run a full node\n11:15 AM <@cjs77> I think it's one of those things that aren't core to the system working, so it's a matter of who's incentivised to build it?\n11:17 AM <Hansie> I think it may be to the network's advantage if mining is more decentralized, apart from  being attractive for 'small-time-miners'\n11:18 AM <@cjs77> I want to remind the Rust devs (both current and future) that the waffle.io board for Tari has loads of \"Good first issues\". Feel free to chat here to get yourself assigned to something you'd like to work on\n11:18 AM <@cjs77> https://waffle.io/tari-project/tari\n11:18 AM <simian_za> We will likely still need to leave it until after we have helped the main monero pools integrate with Tari to ramp up our hash rate as quickly as possible\n11:20 AM <Hansie> Yip, also fix it for Tari then it is fixed for Monero, or the other way round as well\n11:22 AM <Hansie> @cjs77, how can people with no write access add issues to waffle.io?\n11:24 AM <simian_za> If they can make issues on Github it should appear in waffle so I suspect they will be able to make them in waffle too\n11:24 AM <@cjs77> they don't -- they add them in github and then we can triage them\n11:24 AM <@cjs77> we = folks with write access\n11:25 AM <Hansie> So can anyone add issues to GitHub?\n11:26 AM <@cjs77> yeah, they should be able to\n11:32 AM <Hansie> Wondered if some key DAN instructions/transactions should make use of embedded consensus in the base layer before being action-ed on\n11:33 AM <Hansie> Thus post the intention to do something, when it is mined and available in the base layer, act on it\n11:37 AM <simian_za> So beyond registration and checkpointing of digital assets?\n11:38 AM <simian_za> registration of VNs that is\n11:39 AM <Hansie> Yes, like important once-off or course altering transactions\n11:40 AM <neonknight> Is there value in registering an asset on the base layer? Probably not if it is private\n11:42 AM <Hansie> Later then, got to go\n11:44 AM <Blackwolfsa> I think so, you could probably go around it, but you would add code complexity..\n11:44 AM <mikethetike> does p2pool use a different protocol to standard mining pools?\n11:45 AM <simian_za> there is a protocol to build the block to be mined\n11:45 AM <simian_za> i believe\n11:45 AM <simian_za> and then also to keep track of the shares due\n11:46 AM <mikethetike> regarding transactions on the base layer, I think we should try jot down some initial data structure layouts as a reference for what can and can't be done\n11:46 AM <mikethetike> I've seen some code in the repo, but I'd like to see how some of the 2nd layer stuff gets squished in\n12:01 PM ‚Üí el00ruobuob_[m] and learninandlurkin joined  \n1:54 PM <@cjs77> That's not a bad idea\n1:56 PM ‚áê lurkinandlearnin quit (~lurkinand@2a02:c7d:b7d8:4100:3de7:325e:878f:215f) Ping timeout: 252 seconds\n2:31 PM <@cjs77> Looking at some crypto backend implementations; what does the crypto community generally use to express keys - little, or big endian? i.e. would k=5 as a 32 byte hex string be `0x101000....000` or `0x000....000101`?\n2:32 PM <@cjs77> lol, I mean `0x05...00` vs `0x00..05`?\n2:33 PM <@cjs77> I've been assuming big-endian, but dalek uses little-endian (which makes sense if most CPUs are AMDs these days)\n2:40 PM ‚Üí lurkinandlearnin joined  ‚áê learninandlurkin quit  \n2:48 PM <moneromooo> Monero's are little endian. OpenSSL is big endian by default IIRC.\n2:55 PM <@cjs77> Cool, so we should stick to little endian to reduce confusion then.\n2:56 PM <@cjs77> I think the asset template RFC uses big-endian examples, so I should switch that around\n2:56 PM <@cjs77> for example\n```\n",
    "title": "Tari Protocol Discussion 16",
    "date": "2019-01-21T14:00:00.000Z",
    "excerpt": "On Monday‚Äôs architecture discussion, the Tari community discussed the possibility of enabling P2P mining pools for merged mining. It's a topic that has been mentioned in the past on Monero's official...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-16.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "16"
  },
  {
    "slug": "2019-01-17-tari-protocol-discussion-15",
    "content": "\nOn Thursday‚Äôs architecture discussion, the Tari community analyzed the different protocols - or communication networks - that might be useful to satisfy the goals of the Tari ecosystem. This is the TL;DR on the topics that were covered (full transcript included below):\n\n* Which communication networks are well-suited for processes like tx transmission, checkpoint validation, and node discovery?\n* The importance of building different protocols - or communication networks - for the different actors in the Tari ecosystem (base nodes, wallets, miners, validator nodes, asset managers)\n* Weighing the different needs (speed, discoverability, privacy, security) of different actors in the Tari ecosystem \n* How end-users can maintain their privacy while making digital asset transactions\n* The process by which asset issuers and wallets will discover network nodes\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 6pm CAT (11am EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Thursday‚Äôs discussion\n\n```\n4:06 AM <@cjs77> Hi everyone\n4:09 AM <@cjs77> We've got a bunch of RFCs in the pipeline; if there's anything anyone wants to discuss related to those, feel free to engage here.\n4:10 AM <@cjs77> I've also started putting up issues on the Tari Github repo, many of which are tagged as \"Good first issue\". If you want to get involved with Tari development and are fairly new to Rust / Blockchain development, you might want to take a stab at one of those\n4:11 AM <@cjs77> The issues are also tracked on the waffle board -- https://waffle.io/tari-project/tari if you'd rather use that platform\n4:43 AM <@cjs77> Something that hasn't really been discussed yet are the various comm networks that will have to be constructed; both base and digital assets layer.\n4:43 AM <@cjs77> We've mentioned that zMQ is a great library for building out protocols, but we haven't had much talk about what those protocols should be.\n4:45 AM <@cjs77> So for example, there are several actors in the Tari ecosystem: Base Nodes, Wallets, Miners, Validator Nodes, Asset managers (i.e. digital asset wallets)\n4:45 AM <Hansie> So any thoughts on the protocols?\n4:45 AM <@cjs77> There could be different needs for the different actors' interaction viz. speed, discoverability, privacy, security and so on\n4:47 AM <Hansie> So how can a digital asset wallet end user be private and able to buy a ticket, for example?\n4:47 AM <Blackwolfsa> For example base layer might need gossip to find peers and broadcast blocks, while also using dandelion for tx transmission\n4:48 AM <neonknight> I think a kademlia DHT network between Validator Nodes and/or Asset Managers will help discovery when only something like a Public key is known.\n4:50 AM <simian_za> Hansie: in that case the user's  Asset manager+wallet is the one doing the discovery of which VN's manage the asset he wants to buy and then his Asset Manager+wallet will talk to the VNs directly once he has discovered them\n4:50 AM <Hansie> So if I connect with my digital asset wallet to some VN to buy a ticket, will my details not be publicly available after that, open for spam?\n4:52 AM <simian_za> Your asking if the discovery process will leak the details of the node doing the discovering?\n4:53 AM <Hansie> Well, let's say my PK/details are now part of the DHT, am I not exposed?\n4:55 AM <neonknight> Maybe you can create a shared secret using your private key and the VN's public key to encrypt your communication address so only the VN you are trying to talk to can decrypt it when he receives your messages. After discovery a direct comm channel can then be established.\n4:56 AM <Hansie> Right, so something like Diffe-Hellman exchange to establish a trusted comms channel then P2P after that.\n4:56 AM <simian_za> that will work, the only info thats leaked then is your public key itself and potentially that you are looking for a given PK but the actual comms will all be encrypted\n4:57 AM <Hansie> So can digital asset wallet to some VN be similarly treated as VN to VN? Or do we need something different?\n4:58 AM <Hansie> Or broadcasts?\n4:58 AM <Blackwolfsa> I dont see any differance between the two\n4:58 AM <Blackwolfsa> you dont want to broadcast, you would just send the instructions directly to a/or every vn\n4:59 AM <Blackwolfsa> encrypted that is\n4:59 AM <Hansie> Cool. So what are the performance implications of P2P on the 2nd layer then? Any issues?\n5:01 AM <neonknight> To make the discovery slightly more efficient the Asset Manager should send the discovery request instruction only to VNs that have NodeIDs that are close to the VN he wants to talk to, but he could just send it to every VN he knows.\n5:03 AM <neonknight> He could also just send it to any randomly selected VN and he will still reach the correct VN. It will just be more inefficient.\n5:04 AM <Hansie> So how does the Asset Manager (Asset Issuer?) come to know any VNs?\n5:05 AM <neonknight> The Asset Manager software should always have an initial list of VNs that can be expanded with usage of the network.\n5:05 AM <simian_za> The VNs will register themselves on the base layer and when an asset is issued on the base layer the contract should also contain the VN's that are responsible for managing that asset\n5:07 AM <Blackwolfsa> and that contract should be updated as the VN change about\n5:09 AM <neonknight> When an asset is issued on the base layer, I think that it might only have the public keys of the VNs that are servicing that asset and not the comm address. The comm addresses of VNs needs to be found using discovery on the dht network.\n5:09 AM <Hansie> simian_za: I do not follow you here \"...when an asset is issued on the base layer...\"\n5:10 AM <simian_za> The contract that represents the asset will be written to the baselayer in some form\n5:10 AM <simian_za> maybe a summary of the parameters as a hash but the public keys of the VNs in the committee will need to be in that base layer transaction\n5:11 AM <@cjs77> There are lots of good ideas here. Is this a fair summary of what we have so far?\n5:11 AM <@cjs77> https://www.irccloud.com/pastebin/CiAYinGt/\n5:13 AM <simian_za> LGTM\n5:13 AM <neonknight> I agree\n5:14 AM <@cjs77> I think the pros/cons of a single DHT \"directory\" vs multiple should be examined a bit\n5:14 AM <Hansie> cjs77: Please explain 'Whitelist' and why W <-> BN discovery is different to BN <-> BN discovery?\n5:16 AM <@cjs77> Usually your wallet will connect to a single trusted node. In general, this is a whitelist (of one).\n5:16 AM <@cjs77> A wallet doesn't usually care to maintain a full list of nodes (though maybe there might be a use case??)\n5:17 AM <Hansie> So how is the 1st trusted node discovered? Or another on if the previous one is not available?\n5:18 AM <@cjs77> from the whitelist\n5:20 AM <Hansie> So a \"permissioned\" type setup?\n5:23 AM <Hansie> And what about the digital asset wallets? I think they are missing from your table perhaps?\n5:23 AM <@cjs77> maybe not in the sense that I think you mean, but you the wallet is pretty dumb and must talk to a base node to get txs  onto the network. If you run your own full node, then you want your wallet to connect to just that node.\n5:24 AM <@cjs77> digital asset wallets are the AMs in the table\n5:24 AM <@cjs77> If I've missed a combination, lmk\n5:25 AM <Hansie> Cool, I think the table is a good summary yes.\n5:26 AM <@cjs77> Ok, so I'll add an Issue to write up an RFC to bring all this stuff together.. it looks like some digging into the capabilities of Kademlia and how it could be integrated into Tari is warranted\n5:27 AM <@cjs77> Of course one of the nicest things about all this is that you kinda get Bitcoin-like address functionality on Mimblewimble\n5:29 AM <Hansie> We may also summarize somewhere how Grin and Beam do all of this for the applicable parts, as a reference.\n5:47 AM <@cjs77> hansie: To add to the answer to your Q, So using the same approach as BNs to use a small whitelist and build a list of peers from that; and then randomly select some nodes to communicate to would work too if you trust random nodes\n5:47 AM <@cjs77> and +1 on the Grin?Beam comparison \n5:52 AM <@cjs77> Added - https://github.com/tari-project/tari/issues/66\n6:48 AM <Blackwolfsa> One thing we might need to look for, that a DHT might solve, is that we might have a lot of discovery request from wallets to find VNs \n7:37 AM <stanimal> Found it interesting to look at how a bit torrent client bootstraps the DHT - This rust implementation configures a bootstrap node (https://github.com/Luminarys/synapse/blob/257961614024f2fdfd6999b0b4ba8895689ce8e6/example_config.toml#L31) and if the routing table isn't bootstrapped it adds it to the route table (https://github.com/Luminarys/synapse/blob/257961614024f2fdfd6999b0b4ba8895689ce8e6/src/tracker/dht/mod.rs#L53) -\n7:37 AM <stanimal> seems in many/all implementations you need a bootstrap node for DHTs\n7:49 AM <mikethetike> Maybe we can use DNS seeds for the bootstrap?\n9:48 AM <@fluffypony> Monero's bootstrap process is DNS seeds -> fallback nodes -> start randomly scanning IP addresses\n```\n",
    "title": "Tari Protocol Discussion 15",
    "date": "2019-01-17T14:00:00.000Z",
    "excerpt": "On Thursday‚Äôs architecture discussion, the Tari community analyzed the different protocols - or communication networks - that might be useful to satisfy the goals of the Tari ecosystem. This is the...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-15.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "15"
  },
  {
    "slug": "2018-12-21-tari-protocol-discussion-14",
    "content": "\nMonday‚Äôs architecture discussion was a debate on the optimal block size and block time for Tari‚Äôs base layer to support its second layer ‚Äòdigital assets network‚Äô. The key questions up for debate included:\n\n* What is the minimum viable block interval for Tari‚Äôs base layer?\n* How might block propagation time constrain the possible range of block intervals?\n* How should the Tari protocol balance the speed requirements of the second layer ‚Äòdigital assets network‚Äô with block orphan rates?\n* Should the base layer have a ‚Äòtransactions per second‚Äô upper limit?\n\nThe full discussion introduced many possible block implementations including a proposal for a testnet experiment to ascertain the optimal block interval & size. After the architecture discussion, this [Medium article](https://medium.facilelogin.com/the-mystery-behind-block-time-63351e35603a?gi=a4ffa0c4fa20) and this [Bitcoin data](https://drive.google.com/file/d/12zNSpyoaA5avTiTVngK6wSEmtB3eA2Kt/view) was presented on Freenode to help the Tari community understand the fundamentals of block times and network latency.\n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n\n```\n1:04 PM <@cjs77> fluffypony: Does the dynamic blocksize work well in Monero? How often has it been tested (i.e. have there been sustained periods of full blocks?)\n1:07 PM <@cjs77> Clearly the **correct** way to have this debate is to haggle over it for 2 years; get some suits to pick a side, then have a user uprising to force the status quo; and then hard fork away to TariFV (Fluffy‚Äôs vision). But we don‚Äôt have that much time, so hopefully we can come to broad consensus in a few days ;)\n1:09 PM <simian_za> Optimistic, if it could be done that way surely someone would have tried it already?\n1:10 PM <moneromooo> There was an attack which required such a sustained high traffic period. The increase worked. That was before a lot of the recent related changes though.\n1:10 PM <moneromooo> The best way to test it is to run testnet locally with a couple daemons, and spam away.\n1:10 PM <@cjs77> And can you share why Monero switched to 2min block intervals from 1min?\n1:11 PM <moneromooo> And maybe mine with 45% of the hash keeping empty blocks, and 55% mining default rules blocks.\n1:11 PM <moneromooo> s/maybe/probably/\n1:12 PM <moneromooo> The block target thing was to decrease orphan rate, and also size to some extent.\n1:12 PM <moneromooo> Maybe other reasons, pony might know/remember.\n1:13 PM <mikethetike> the limiting factors on minimizing the block interval in my mind are: 1. The time to broadcast across the entire network. 2. The number of transactions bundled together for privacy\n1:14 PM <mikethetike> too low a block time and there will be higher possiblity of chain splits\n1:14 PM <mikethetike> but also, there will be sparse blocks\n1:15 PM <mikethetike> not sure if that is as big a problem for mw as it is for ring sigs\n1:17 PM <mikethetike> but I‚Äôm no monero expert, so disregard if I‚Äôm talking rubbish\n1:18 PM <@cjs77> I think ideally we‚Äôd want 1min blocks (or quicker) to support the 2nd layer (digital assets network); there have been huge strides in BTC to improve network propagation times. IIRC BlueMatt saying on some podcast that FIBRE has brought this down to a few seconds\n1:19 PM <simian_za> Is there a rust implementation of FIBRE?\n1:19 PM <@cjs77> ha ha\n1:19 PM <@cjs77> I‚Äôm sure it‚Äôs next on Matt‚Äôs list after Lightning-Rust :>\n1:20 PM <Hansie> Cayle: Please explain 1 minute reasoning, say vs. 2 minutes.\n1:21 PM <mikethetike> What are our options given that we are merge mined with monero?\n1:21 PM <mikethetike> can it be larger than monero‚Äôs 2 mins?\n1:21 PM <simian_za> It should be fairly simple to model a block size vs mean propagation time that determine the rates of oprhan blocks and forks caused by the longer latencies\n1:21 PM <Hansie> Can be smaller, equal or larger\n1:21 PM <@cjs77> woah.. http://bitcoinfibre.org/stats_ng.html shows 95% of nodes seeing a block in 25ms\n1:22 PM <simian_za> Are we linked to moneros block time? We are just using their proof of work\n1:22 PM <simian_za> We set our difficulty\n1:22 PM <Hansie> Block time can be smaller, equal or larger\n1:22 PM <Hansie> It is totally independent to being merged mined\n1:24 PM <simian_za> What is the typical traffic on the fibre network to sync mempools?\n1:24 PM <@cjs77> hansie: Users of the DAN will be used to things being fast. When the base layer gets involved (e.g. node registration), things slow down considerably. I‚Äôm thinking that the difference between a few confirmations at 1min blocks vs 2min blocks will feel like eternity\n1:24 PM <@cjs77> node = Validator Node\n1:27 PM <@cjs77> Actually I must be reading that graph wrong. It takes ¬±100ms for light to travel halfway around the world\n1:28 PM <simian_za> Typical sustained pings to the US are around 200‚Äì400ms\n1:28 PM <Hansie> Cayle: Ok so specific use cases of 2nd layer transactions touching the base layer will be on the value system to determine block times. Along with other practical aspects and possible attack vectors.\n1:29 PM <mikethetike> trying to catch us out hey @cjs77\n1:31 PM <mikethetike> ‚Äúthe time-to-receive a block can be seen as the time taken in excess of the speed of light through fiber‚Äù\n1:33 PM <@cjs77> ah.. thanks. so 200‚Äì350ms ..that‚Äôs ridiculously quick. BTC could have 10s blocks with that kind of efficiency :)\n1:36 PM <@cjs77> Hansie: yes, I think as fast as we can without orphan rate getting out of hand.\n1:37 PM <@cjs77> I‚Äôd argue that other things being equal, 1min 500kB blocks > 2min 1MB blocks\n1:37 PM <@cjs77> wdyt?\n1:38 PM <Hansie> What about an upper limit to the tps?\n1:38 PM <simian_za> typical transaction size will be around 1.5kb?\n1:38 PM <Hansie> Then block size is dynamic\n1:39 PM <@cjs77> ‚Äúdynamic‚Äù, in that it‚Äôs not strictly limited. Grin‚Äôs weight system is pretty good\n1:39 PM <@cjs77> It caps blocks to 1.3‚Äì1.5MB depending on what the txs look like\n1:40 PM <@cjs77> Monero is dynamic in that the blocks can grow with demand.\n1:41 PM <@cjs77> simian_za, how does Beam size their blocks?\n1:41 PM <neonknight> At 1.5kb for a typical transaction, it will result in only 5.55 transactions per second.\n1:41 PM <simian_za> 500kb 1-minute blocks is still about 7.2 gb a day. What is acceptable on that front?\n1:41 PM <Hansie> I think an upper limit to tps, say 100 tps, would be a good upper limit to calculate maximum block size.\n1:42 PM <@cjs77> I think you‚Äôll come up with a pretty big number, Hansie\n1:42 PM <mikethetike> we have a second layer that increases tps\n1:42 PM <Hansie> But it is demand driven, not fixed\n1:43 PM <simian_za> sorry am I off by one order of magnitude? its actually 720 meg a day‚Ä¶\n1:43 PM <mikethetike> simian_za: only archival nodes will have that size\n1:43 PM <Hansie> Just allows higher base layer throughput when needed, without scaling on the base layer\n1:46 PM <@cjs77> You can target X tps, but the reality is that we‚Äôre limited by network speeds and the efficiency of our implementation. The only real way to check, imho, is to pick a block interval, then start with huge blocks on testnet and then scale back until the orphan rate drops to an acceptable level (¬±0%)\n1:46 PM <Hansie> That would give us a sweet spot yes\n1:50 PM <@cjs77> tryna think.. would difficulty & hash rate impact orphan rate? Only if diff is really low, or hashrate is pushing blocks well outside the target interval right?\n1:53 PM <Hansie> I think orphan rate could be minimized with efficient communication/propagation, more than anything else. Dynamic difficulty will equalize with hash rate\n2:03 PM <@cjs77> This conversation has made me realise something. BTC needs a huge block INTERVAL war, not a block size one :)\n2:04 PM <Hansie> :-)\n```\n",
    "title": "Tari Protocol Discussion 14",
    "date": "2018-12-21T14:00:00.000Z",
    "excerpt": "Monday‚Äôs architecture discussion was a debate on the optimal block size and block time for Tari‚Äôs base layer to support its second layer ‚Äòdigital assets network‚Äô. The key questions up for debate...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-14.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "14"
  },
  {
    "slug": "2018-12-12-tari-protocol-discussion-13",
    "content": "\nThursday‚Äôs Tari protocol architecture discussion covered Tari‚Äôs second layer network and how it will handle digital assets. [From previous discussions](https://www.tari.com/blog/), the community believes Tari‚Äôs second layer should be fast and cheap. The slow, secure, and decentralized base layer can be referenced when necessary to settle disputes.\n\nThursday‚Äôs discussion examined:\n\n* How second layer validator nodes might earn fees for their work\n* How the base and second layers might achieve consensus with each other using merkle-root checkpoints\n* The benefits of non-Turing complete digital asset contracts (smaller attack surface, ease of use, no halting problem)\n\nThe full discussion set the stage for a Monday discussion on how various block times and block sizes might support the second layer ‚Äòdigital assets network‚Äô. \n\nJoin us for our next discussion on Freenode in #tari-dev.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Thursday‚Äôs discussion\n\n```\n4:04 AM <@cjs77> I think it‚Äôs time to share some ideas around how Digital Assets in Tari might be handled\n4:04 AM <@cjs77> We‚Äôve covered the bases on the Base Layer (and please comment on the PRs in Github), so let‚Äôs start felshing out some thoughts on the 2nd layer\n4:10 AM <@cjs77> The main idea is that we have a 2nd layer that is fast and cheap to handle Digital Assets (DA)\n4:11 AM <@cjs77> The second layer network (let‚Äôs call it the Digital Asset Network, or DAN) is made up of Validator Nodes‚Ää‚Äî‚Äänodes that manage all the state and execute instructions related to DAs that they manage\n4:26 AM <@cjs77> A key ideas is that Scalability is achieved by sacrificing decentralisation. Not *all* VNs manage *every* asset. Assets are managed by small sets of validator node committees. These committees reach consensus on DA state amongst themselves. But we potentially have a ‚Äúslow‚Äù and ‚Äúexpensive‚Äù base layer to fall back on in case of dispute,\n4:27 AM <@cjs77> A key ideas is that Scalability is achieved by sacrificing decentralisation. Not *all* VNs manage *every* asset. Assets are managed by small sets of validator node committees. These committees reach consensus on DA state amongst themselves. But we potentially have a ‚Äúslow‚Äù and ‚Äúexpensive‚Äù, but very secure and decentralised base layer to fall back on in case of dispute\n4:28 AM <@cjs77> VNs earn fees for their efforts.\n4:29 AM <@cjs77> or, they should. And finally, we have the idea that Digital asset contracts are not Turing complete, but are instantiated using Digital Asset templates that are defined in the DAN protocol code.\n4:32 AM <@fluffypony> how do they earn fees?\n4:32 AM <neonknight> I think non-turing complete digital asset contracts are a great idea as the cost of executing and storing that contract is basically ‚Äúfixed‚Äù\n4:32 AM <@fluffypony> or rather, how are fees paid, on the base layer\n4:33 AM <@fluffypony> question mark\n4:35 AM <simian_za> periodically the validated state of an asset will be commited to the base-layer as a merkle-root checkpoint that summarizes what happened between the last checkpoint and this checkpoint. At that stage the committee of validator nodes will come to a consensus on what fees are owed and between them and the asset issuer the fee payment transactions will be signed\n4:35 AM <simian_za> is how I feel it will happen\n4:36 AM <@cjs77> ya, if we agree that VNs should earn fees, we can debate the various ways of how that could happen, but simian_za‚Äôs idea largely reflects my thinking\n4:38 AM <@cjs77> neonknight: The other benfits of non-Turing complete are:\n4:38 AM <@cjs77> * smaller attack surface\n4:38 AM <@cjs77> * no halting problem nonsense\n4:38 AM <@cjs77> * ease of use! You don‚Äôt have to be a developer to issue assets. You select from a drop down, click some fields on a form, and off you go\n4:39 AM <@cjs77> Unpopular opinion: Ethereum has become a defacto template-based contract system already\n4:39 AM <@fluffypony> I don‚Äôt think that‚Äôs an unpopular opinion\n4:39 AM <@fluffypony> that‚Äôs all it‚Äôs really good for, see: ERC-20 and ERC-721\n4:39 AM <@cjs77> Where‚Äôs that tweet that explains that ‚Äúunpopular opinions‚Äù never are :)\n4:40 AM <@cjs77> Maybe ‚Äúinconvenient Truth‚Äù is a better label\n4:40 AM <neonknight> Non-turing complete contracts also allow you to store contracts efficiently. You only need to store the type of contract and the variable parameters of that contract.\n4:42 AM <@cjs77> +1. Good point\n4:52 AM <Hansie> An interesting viewpoint from https://chain.com/docs/1.2/protocol/papers/whitepaper. ‚ÄúThe Chain Virtual Machine (CVM) instruction set is Turing complete. To prevent unbounded use of computational resources, the protocol allows networks to set a run limit that a program is not allowed to exceed.‚Äù\n```\n",
    "title": "Tari Protocol Discussion 13",
    "date": "2018-12-12T14:00:00.000Z",
    "excerpt": "Thursday‚Äôs Tari protocol architecture discussion covered Tari‚Äôs second layer network and how it will handle digital assets. From previous discussions, the community believes Tari‚Äôs second layer...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-13.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "13"
  },
  {
    "slug": "2018-12-09-tari-protocol-discussion-12",
    "content": "\nMonday‚Äôs Tari protocol architecture discussion was all about the base layer modules of [Tari‚Äôs architecture proposal](https://github.com/tari-project/RFC/blob/master/proposals/181107-base-layer-architecture.md). Specifically, a few questions needed to be answered, as the above architecture proposal is only a rough draft. Questions like:\n\n* Are the main moving parts of the base layer covered in the architecture proposal?\n* Should the design layout for the code be grouped by function or by software stack?\n* Does the Tari protocol architecture align with the folder structure proposal?\n* Are Tari‚Äôs base layer modules sufficiently decoupled from each other?\n\nThe full discussion was one of the most vibrant Tari community discussions to date, and set the stage for a Thursday discussion on 2nd layer protocol architecture.\n\nJoin us for our next discussion on Freenode in #tari-dev.\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of Monday‚Äôs discussion\n\n```\n10:01 AM <@cjs77> Hey all\n10:01 AM <simian_za> Hiya\n10:02 AM <neonknight> Hello..\n10:02 AM <@cjs77> I thought we‚Äôd discuss the project layout tonight\n10:02 AM <Hansie> Hi there\n10:02 AM <Hansie> Sounds interesting yes\n10:03 AM <@cjs77> ref: https://github.com/tari-project/tari/pull/2\n10:04 AM <@cjs77> with context: https://github.com/tari-project/RFC/tree/master/proposals\n10:04 AM <@cjs77> In particular the high-level and base-layer proposals\n10:04 AM <tk___> hey\n10:05 AM <@cjs77> mikethetike had a suggestion:\n10:05 AM <@cjs77> > I would have put all the base_layer folders in the root, and just had the digital_assets_layer as digital_assets\n10:06 AM <stanimal> Hey everyone\n10:06 AM <@cjs77> For those who don‚Äôt RTFM, here‚Äôs a summary:\n10:06 AM <@cjs77> > The code follows a domain-driven design layout, with top-level folders falling into infrastructure, domain, or application layers.\n10:06 AM <@cjs77> The infrastructure folder contains code that is not Tari-specific. It holds the following crates:\n10:06 AM <@cjs77> comms: The networking and messaging subsystem\n10:06 AM <@cjs77> crypto: All cryptographic services, including a Curve25519 implementation\n10:06 AM <@cjs77> storage: Data persistence services, including LMDB\n10:06 AM <@cjs77> The base_layer is a domain-level folder and contains:\n10:06 AM <@cjs77> core: common classes and traits, such as Transactions and Blocks\n10:06 AM <@cjs77> blockchain: The Tari consensus code\n10:06 AM <@cjs77> mempool: The unconfirmed transaction pool implementation\n10:06 AM <@cjs77> mining: The merge-mining modules\n10:06 AM <@cjs77> p2p: The block and transaction propagation module\n10:06 AM <@cjs77> api: interfaces for clients and wallets to interact with the base layer components\n10:06 AM <@cjs77> The digital_assets_layer is a domain-level folder contains code related to the management of native Tari digital assets. Substructure TBD.\n10:06 AM <@cjs77> It‚Äôs envisaged that at least the following applications are built on top of the domain layer libraries:\n10:06 AM <@cjs77> A standalone miner (tari_miner)\n10:06 AM <@cjs77> A pool miner (tari_pool_miner)\n10:06 AM <@cjs77> A CLI wallet for the Tari cryptocurrency (cli_wallet)\n10:06 AM <@cjs77> A full node executable (tari_basenode)\n10:07 AM <simian_za> wont the digital assets layer also have its own p2p and api crates? If so then it would make sense to keep the current structure\n10:08 AM <@cjs77> https://www.irccloud.com/pastebin/I5ZeLnAX/\n10:08 AM <@cjs77> That‚Äôs better :)\n10:08 AM <@cjs77> simian_za: that‚Äôs why I ultimately proposed the current structure\n10:09 AM <@cjs77> There will be name clashes since we‚Äôre not just building a mimblewimble implem,entation, but a digital assets network as well\n10:10 AM <simian_za> In terms of the applications I feel like the tari_miner and tari_pool_miner will be more tightly coupled\n10:10 AM <Blackwolfsa> this makes more since, putting the da layer and base layer seperate\n10:11 AM <Hansie> Yip, I would go with functional groupings rather than software stack groupings\n10:12 AM <Hansie> We may potentially have multiple consensus algorithms/schemes/protocols, where would they live? Infrastructure?\n10:13 AM <simian_za> if they relate to the base-layer in /base_layer/blockchain and for the digital_assets_layer in a folder related to consensus?\n10:14 AM <@cjs77> If they‚Äôre blockchain agnostic, then they should go in infrastructure; with a suitable abstraction layer; If they use blockchain language, then they‚Äôre domain layer\n10:16 AM <@cjs77> A more clearcut example is a datastore like LMDB. It‚Äôs infra. A websocket library is infra. I‚Äôd argue that ECC libraries are also infra\n10:17 AM <Hansie> I think it would potentially be applicable to both layers, but more so the 2nd layer\n10:17 AM <Hansie> Plug-gable consensus perhaps‚Ä¶\n10:18 AM <simian_za> my gut says consensus algorithms would be fairly closely tied to their respective layers? But I suppose we might get really good at writing very modular code\n10:18 AM <neonknight> The ‚ÄúBlockchain‚Äù section of ‚Äúinfrastructure‚Äù already says ‚ÄúThe Tari consensus code‚Äù, might work well there.\n10:19 AM <@cjs77> yeah it depends what you mean by consensus algo. Nakamoto consensus is pretty tightly coupled to the base layer :)\n10:19 AM <Blackwolfsa> but going by the design, the consensus on the base and second layer would be fundamentally different\n10:21 AM <simian_za> what else would be in the base_layer/blockchain folder? the datastructures to store the blockchain, all the merkle proofs to determine the chains validity and?\n10:21 AM <Hansie> We may have some consensus re-use if there is a case where consensus is needed on the base layer for some arbitration on the 2nd layer?\n10:22 AM <simian_za> I feel like that consensus code would like in the second layer crates and then be pulled into the base_layer from there\n10:22 AM <simian_za> like = live\n10:23 AM <@cjs77> In any event, with the folder structure ¬±locked in, and given the alignment with the high-level architecture, we can start to map out some milestones and initial tickets for the independent modules\n10:23 AM <@cjs77> and then you guys can go and play with some code :)\n10:24 AM <simian_za> woop woop, finally!\n10:24 AM <neonknight> That will be a good day\n10:24 AM <Hansie> @simian_za, ‚Äúwhat else would be in the base_layer/blockchain folder?‚Äù maybe something to do with emission schedule, token management, inflation, block times, etc.\n10:28 AM <simian_za> üëå\n10:28 AM <Hansie> Where ‚Äòsmart contracts‚Äô, ‚Äòscript-less scripts‚Äô?\n10:29 AM <simian_za> hmm that‚Äôs a good question. Those will be coupled to both the base-layer and second layer\n10:29 AM <Blackwolfsa> I would probably think more base layer\n10:31 AM <Hansie> Also, perhaps an asset_management application for the asset issuer?\n10:32 AM <simian_za> perhaps just a GUI wallet that can handle interaction with the base and second layers?\n10:32 AM <mikethetike> I think most of the other coins build that into the default wallet\n10:35 AM <Hansie> I feel uneasy about that @mikethetike, adding things in one application with very little in common, or am I mistaken?\n10:36 AM <simian_za> traditionally the wallet application is where the client functionality lives\n10:36 AM <mikethetike> The wallet functionality is really small\n10:36 AM <mikethetike> in most coins\n10:36 AM <@cjs77> scriptless scripts are split between domain and infra. e.g. a generic signature aggregation scheme (e.g. MuSig) falls under infra, but an atomic swap would be built on those primitives in the domain layer\n10:36 AM <Blackwolfsa> Both would likely be written as a small library, to implement both would be trivial\n10:37 AM <@cjs77> a wallet is an executable though, and shouldn‚Äôt be in the libraries\n10:37 AM <Blackwolfsa> yes, but I would believe most of the functionality should be written as libraries\n10:37 AM <@cjs77> yeah the API will be a library\n10:38 AM <@cjs77> That makes it easy to write a CLI wallet and a GUI wallet without repeating any code\n10:39 AM <Hansie> @cjs77, you lost me with ‚Äòdomain layer‚Äô, is that in the folder structure? Or should I read between the lines‚Ä¶\n10:41 AM <@cjs77> Domain layers are layers that contain the business language & logic. For Tari there are basically 2 domain layers: The base_layer and digital_asset_layer. They‚Äôre broadly independent, hence they‚Äôre separate, but they‚Äôre both built using domain language terms like `Block`, `Transaction`, `TariAmount` etc. Does that make sense?\n10:42 AM <Hansie> Perfect thanks :-)\n10:45 AM <Hansie> So i.t.o. applications, if we have a ‚Äòtari_basenode‚Äô should we have a ‚Äòtari_validator_node‚Äô?\n10:45 AM <@cjs77> blackwolfsa: re: If I infer where you were getting at with your comment about applications‚Ää‚Äî‚Ääif we do this properly, the applications are mostly just wiring things up, right? I mean the CLI app code shouldn‚Äôt be more than a few hundred lines (read config; get input; relay to API, return results)\n10:45 AM <@cjs77> Hansie: yup\n10:45 AM <@cjs77> but we haven‚Äôt really discussed what the 2nd layer looks like yet\n10:45 AM <Blackwolfsa> yes, correct\n10:46 AM <Hansie> Good\n10:46 AM <@cjs77> Maybe we should start that conversatoin on Thurs\n10:47 AM <Hansie> Great idea\n10:51 AM <simian_za> It is a nice context to start thinking about the components we need to build\n10:51 AM <@cjs77> +1\n10:55 AM <@cjs77> Cool, so I‚Äôll merge that PR in; and then there‚Äôs a small PR for some crypto primitives that sort of illustrate my thinking around abstraction, documentation and testing, which everyone is welcome to comment on\n10:56 AM <Hansie> Cool\n10:56 AM <simian_za> üëç\n```\n",
    "title": "Tari Protocol Discussion 12",
    "date": "2018-12-09T14:00:00.000Z",
    "excerpt": "Monday‚Äôs Tari protocol architecture discussion was all about the base layer modules of Tari‚Äôs architecture proposal. Specifically, a few questions needed to be answered, as the above architecture...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-12.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "12"
  },
  {
    "slug": "2018-11-30-tari-protocol-discussion-11",
    "content": "\nYesterday‚Äôs Tari protocol discussion revolved around one specific technical question.\n\nAfter reading through one of Tari‚Äôs [rough GitHub documents](https://github.com/tari-project/RFC/tree/master/proposals), Tari community member ‚Äò@neonknight‚Äô had a question about validator nodes and reaching consensus.\n\nSpecifically, ‚Äò@neonknight‚Äô wanted to know how many second layer validator nodes are needed per asset or instruction to reach a ‚Äúreliable‚Äù consensus? The transcript below captures the opinions and thoughts presented by the Tari community.\n\nJoin us for our next discussion on Freenode in #tari-dev.\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of yesterday‚Äôs discussion\n\n```\n4:06 AM <mikethetike> let‚Äôs go!\n4:07 AM <neonknight> Hi everyone..\n4:28 AM <neonknight> How many validator nodes (on second layer) do you think is needed per asset or instruction to reach a ‚Äúreliable‚Äù consensus?\n4:42 AM <neonknight> I realise that the amount of validator nodes that might be required changes when the validator nodes were selected in a ‚ÄúPermissioned‚Äù or ‚ÄúPermissionless‚Äù sense. More Validator nodes will be required to reach a ‚Äúreliable‚Äù consensus when you don‚Äôt know the validator nodes that will be used.\n4:52 AM <@cjs77> Are there any comments on the proposed code structure for the protocol? https://github.com/tari-project/tari/pull/2\n4:58 AM <Hansie> @neonknight I think in both cases it could be up to the asset issuer to decide how many validator nodes should participate. The amount of nodes required for consensus could simply be according to whatever consensus mechanism/protocol was chosen, for example success/consensus could mean f < (n-1)/2, f<n/2 or f < n/3 with f being the nodes not in agreement or not responding.\n5:00 AM <neonknight> That makes sense..\n5:02 AM <Hansie> https://www.irccloud.com/pastebin/YKkyzS7u/\n5:02 AM <Hansie> From: https://tlu.tarilabs.com/consensus-mechanisms/BFT-consensus-mechanisms-applications/Introduction.html ‚ÄúFor systems with n nodes, of which f are Byzantine, it has been shown that no algorithm exists that solves the consensus problem for f > n/3.‚Äù\n```\n",
    "title": "Tari Protocol Discussion 11",
    "date": "2018-11-30T14:00:00.000Z",
    "excerpt": "Yesterday‚Äôs Tari protocol discussion revolved around one specific technical question. After reading through one of Tari‚Äôs rough GitHub documents, Tari community member ‚Äò@neonknight‚Äô had a question...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-11.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "11"
  },
  {
    "slug": "2018-11-27-tari-protocol-discussion-10",
    "content": "\nYesterday‚Äôs Tari protocol discussion revolved around one specific technical idea.\n\nAfter reading through one of Tari‚Äôs rough GitHub documents, Tari community member ‚Äò@mikethetike‚Äô had a question about range proofs and merkle roots.\n\nSpecifically, ‚Äò@mikethetike‚Äô wanted to know if range proofs need their own merkle roots in the transaction kernel. The transcript below captures the opinions and thoughts presented by the Tari community.\n\nJoin us for our next discussion on Freenode in #tari-dev.\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of today‚Äôs discussion\n\n```\n1:01 PM <@cjs77> Hey everyone\n1:04 PM <Krakaw> Evening\n1:16 PM <@cjs77> It‚Äôs quiet this evening\n1:17 PM <@cjs77> People still getting over their turkey comas?\n1:23 PM <@fluffypony> I don‚Äôt believe in turkeys\n1:26 PM <lurkinandlearnin> so you‚Äôre saying you weren‚Äôt thankful for today over the weekend?\n1:27 PM <mikethetike> reading through this:\n1:27 PM <mikethetike> https://github.com/tari-project/RFC/blob/master/proposals/181107-base-layer-architecture.md\n1:27 PM <mikethetike> do the range proofs need their own merkle root?\n1:27 PM <mikethetike> from this section:\n1:27 PM <mikethetike> https://www.irccloud.com/pastebin/2hoFmHpq/\n1:30 PM <@fluffypony> lurkinandlearnin: hurrrrrrr :)\n1:31 PM <@cjs77> good Q, mikethetike. Where would the merkleroot come in handy? If you need to prove that a given proof is part of the range proof set, right?\n1:33 PM <mikethetike> I suppose it might have to do with the pruning?\n1:33 PM <mikethetike> when you prune, which parts get cut?\n1:34 PM <@cjs77> I‚Äôm not sure where that would be required. In fact, some part of me thinks that in pruned mode, the range proofs are something that could potentially be chucked once a transaction is in the blockchain (the thinking being that if it‚Äôs in the chain, it‚Äôs passed a range check).\n1:34 PM <mikethetike> for some reason I thought the range proofs would live with the actual transactions\n1:34 PM <@cjs77> Range proofs themselves are in the outputs, yes.\n1:37 PM <mikethetike> On this note: A Commitment which blinds the value of the output (MW protocol suggests Pedersen commitments‚Ää‚Äî‚Ääis it worthwhile abstracting this to allow other commitment types?)\n1:39 PM <mikethetike> What other commitments are there?\n1:39 PM <sarang> hash commitments\n1:39 PM <Hansie> Hi there. @mikethetike, not sure if this is worthwhile, except if one would like open/non-confidential commitments\n1:40 PM <@cjs77> Hansie mentioned an alternative once. The name escapes me now\n1:40 PM <Hansie> ElGmal‚Ää‚Äî‚Ääbut to make Pedersen more secure in future\n1:40 PM <@cjs77> ^ That was it\n1:41 PM <Hansie> Has more calculational overhead\n1:41 PM <Hansie> ElGamal‚Ä¶\n1:42 PM <mikethetike> like elgamal custard?\n1:44 PM <Hansie> Going from Pedersen to ElGamal will change commitment properties: Perfectly hiding to computationally hiding, computationally binding to perfectly binding.\n1:44 PM <Hansie> @mikethetike, do not know about custard :-)\n1:51 PM <@cjs77> mike, if you store the range proof merkle root as a pruning node, you can discard the range proofs, but still verify later that a given set of proofs (provided by an archival perr node perhaps) are the correct ones if you wish to verify at a later stage.\n1:53 PM <mikethetike> I‚Äôm just wondering if there‚Äôs a way to use a single tree\n1:53 PM <mikethetike> or a need\n1:53 PM <@cjs77> i see\n1:54 PM <mikethetike> basically: what parts of the block we going to be transferring over the wire at different stages\n1:59 PM <mikethetike> let me think over it for a bit and see if I can work it out in my head\n1:59 PM <@cjs77> üíØ\n1:59 PM <Hansie> great\n2:00 PM <mikethetike> btw: from a quick scan, it doesn‚Äôt seem like elgamal is necessary unless the discrete log is broken\n2:00 PM <Hansie> Yip, for when it happens\n```\n",
    "title": "Tari Protocol Discussion 10",
    "date": "2018-11-27T14:00:00.000Z",
    "excerpt": "Yesterday‚Äôs Tari protocol discussion revolved around one specific technical idea. After reading through one of Tari‚Äôs rough GitHub documents, Tari community member ‚Äò@mikethetike‚Äô had a question about...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-10.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "10"
  },
  {
    "slug": "2018-11-23-tari-protocol-discussion-9",
    "content": "\nYesterday‚Äôs Tari protocol discussion covered key points highlighted in the rough [GitHub documents](https://github.com/tari-project/RFC/tree/master/proposals) that were presented during last discussion. \n\nThis is the TL;DR of yesterday's conversation (full transcript included below):\n\n* How well could a Counterparty type model fit for instruction-transactions on the 2nd layer‚Ää‚Äî‚Ääwhere some things have to go via the base layer?\n\n* Will base layer primitives help if we have a second layer failure where the checkpoints are not good enough to recover the second layer state?\n\n* What kind of info should be on the base layer that could provide value to the second layer beyond what checkpoints provide?\n\nJoin us for our next discussion on Freenode in #tari-dev.\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of today‚Äôs discussion\n\n```\n3:15 AM <Hansie> Hi, anyone there?\n3:16 AM <mikethetike> Hi Hansie\n3:18 AM <Hansie> Hi @mikethetike\n3:18 AM <Hansie> Was just thinking, with ‚Äò181029-overview.md‚Äô and the Tari two layers, and the 2nd layer fall back on the base layer‚Äôs security when required‚Ä¶\n3:18 AM <Hansie> Will Merkle roots of some external information set be enough or do we need some other primitives in there as well?\n3:23 AM <Hansie> So basically, how well could a Counterparty type model fit for certain types of instruction-transactions on the 2nd layer? Where some things have to go via the base layer.\n3:25 AM <simian_za> So in counterparty what kind of extra meta-data do they use in a bitcoin transaction to facilitate actions on their second layer?\n3:26 AM <Hansie> Some write-up here: https://tari-labs.github.io/tari-university/layer2scaling/more-landscape/landscape-update.html#a2-counterparty\n3:36 AM <simian_za> So it feels like if we have a second layer failure where the checkpoints are not good enough to recover the second layer state that further base layer primitives will not help us anyway?\n3:41 AM <Hansie> It is actually simple; if only checkpoint merkle roots are written into the base layer then that is the only thing the base layer can provide in case the base layer‚Äôs security is called upon.\n3:42 AM <neonknight> We could introduce something like an archival node or an archival functionality on validator nodes to ensure all data is recoverable. It might help to improve data redundancy if all information is distributed between different validator nodes. Not sure how this would work..\n3:44 AM <mikethetike> simian_za: I think that the second layer will have to be recoverable only via the second layer, otherwise we will lose scalability\n3:45 AM <simian_za> Hansie: Yes, that makes sense. So what other kind of info were you thinking of putting on the base layer that could provide value to the second layer beyond what checkpoints provide?\n3:46 AM <mikethetike> who chooses the merkle root of the checkpoint?\n3:47 AM <simian_za> mikethetike: probably agreed upon by a committee of validator nodes under some kind of consensus rules?\n3:47 AM <Hansie> @simian_za: Maybe transfer instructions of high value assets, as an example\n3:49 AM <simian_za> Hansie: that could work, we would need to attach a hefty fee for an Asset issuer to do that though so that Asset issuers only do it if they really feel their asset is valuable\n3:49 AM <simian_za> valuable enough to justify the extra security\n3:51 AM <mikethetike> we don‚Äôt have any say in the value of the assets on tari, that‚Äôs entire up to the asset issuers\n3:51 AM <simian_za> and I doubt asset issuers are going to sit and weigh up the risk profile of second layer vs base layer. They just want to issue assets\n3:52 AM <simian_za> feels like an over-complication\n3:52 AM <neonknight> Processing an ‚Äúexpensive‚Äù asset on the base layer will also be slow\n3:53 AM <Hansie> Just as long as we understand what this means: ‚Äú2nd layer fall back on the base layer‚Äôs security when required‚Ä¶‚Äù\n3:55 AM <simian_za> Agreed, it just provides a way to confirm that a state at a given point in time (recorded fully on the second layer only) can be confirmed as true, not reconstructed without the second layer\n3:56 AM <simian_za> confirmed as true meaning that it can be compared to the base layer checkpoint which cannot be altered once its in the PoW chain\n3:57 AM <Hansie> Bye for now\n```\n",
    "title": "Tari Protocol Discussion 9",
    "date": "2018-11-23T14:00:00.000Z",
    "excerpt": "Yesterday‚Äôs Tari protocol discussion covered key points highlighted in the rough GitHub documents that were presented during last discussion.  This is the TL;DR of yesterday's conversation (full...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-9.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "9"
  },
  {
    "slug": "2018-11-21-tari-protocol-discussion-8",
    "content": "\nYesterday, a brief Tari protocol architecture discussion was held to source ideas and discussion around Tari‚Äôs GitHub repository content.\n\nRight now there are 4 rough architecture ideas on GitHub for the Tari community to review and submit pull requests on.\n\n[Some Architecture Objectives to Keep in Mind](https://github.com/tari-project/RFC/blob/master/proposals/181029-overview.md)\n\n[High Level Design Proposals](https://github.com/tari-project/RFC/blob/master/proposals/181102-high-level-design.md)\n\n[Tari Network Terminology](https://github.com/tari-project/RFC/blob/master/Glossary.md)\n\n[Base Layer Architecture Proposals](https://github.com/tari-project/RFC/blob/master/proposals/181107-base-layer-architecture.md)\n\nThe above documents are still only rough ideas that will be migrated to RFCs based on ideas, improvements, and proposals from the Tari community.\n\nJoin us for our next discussion on Freenode in #tari-dev.\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of today‚Äôs discussion\n\n```\n12:49 PM <@cjs77> Let‚Äôs get some discussion going around the content in the github repos. Keep in mind, the `proposals` are not meant to be fully-fledged RFC‚Äôs; they‚Äôre rough and ready docs meant to stimulate discussion around the ideas proposed. They‚Äôll be polished by the time they migrate to RFCs; in the meantime, submit PRs where you think the ideas are bad; even if it‚Äôs to fix typos/grammar or chat about it here first\n1:00 PM <atomicwood> looking good on the proposal, havent had a chance to research into some things deeper yet‚Ä¶ but, might discussing how the package gets packed and addressed? i like idea of the modules you outlined cj‚Ä¶\n1:04 PM <@cjs77> > the package gets packed and addressed\n1:04 PM <@cjs77> Do you mind elaborating a bit?\n1:04 PM <gagarin55> hi all, its my first time, just listen ;)\n1:04 PM <mikethetike> welcome\n1:04 PM <@cjs77> welcome, gagrin55\n1:09 PM <gagarin55> cjs77, i see you took some rust libs from ETCDEV ;) happy that it is useful for someone\n1:09 PM <mikethetike> these proposals? https://github.com/tari-project/RFC/tree/master/proposals\n1:11 PM ‚Üí cardboardoranges joined (~cardboard@65.112.8.201)\n1:11 PM <atomickid> well best i can say at this time is that might thinking about how say a mobile user might contact/interact with a larger node system? the modules might be easier to get built, thinking with this in mind? the lite tari protocal heh\n1:17 PM <atomickid> ill have something more detailed, sorry if im going to far ahead, i will reaearch the proposal soon^tm\n1:33 PM <Hansie> Hi\n1:35 PM <atomickid> hey hansie, got a DA stamp laying around?? :D\n1:36 PM <Hansie> Lost it :-)\n1:41 PM <@cjs77> gagarin55: which libs? The secp256k1 lib?\n1:44 PM <@cjs77> atomickid: yeah, that‚Äôs a great point and something we genuinely aim for. If the project is well laid out and very modular, it should make it easier for contributors to i) get up to speed and ii) build tools that they want, incl mobile clients etc\n1:48 PM <Hansie> I think the content in the github repos is a great start, so I have a question‚Ä¶\n1:48 PM <gagarin55> cjs77: yes\n1:49 PM <@cjs77> oh yeah! they were super useful\n1:49 PM <Hansie> Should the asset issuer‚Äôs investment be protected from 2nd layer validator nodes not contributing but not due to bad acting, or only from bad actors,?\n```\n",
    "title": "Tari Protocol Discussion 8",
    "date": "2018-11-21T14:00:00.000Z",
    "excerpt": "Yesterday, a brief Tari protocol architecture discussion was held to source ideas and discussion around Tari‚Äôs GitHub repository content. Right now there are 4 rough architecture ideas on GitHub for...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-8.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "8"
  },
  {
    "slug": "2018-11-20-tari-protocol-discussion-7",
    "content": "\nOn Thursday, a brief Tari protocol architecture discussion was held to analyze the first set of Tari protocol proposals.\n\nRight now there are 4 rough architecture ideas on GitHub for the Tari community to review and submit pull requests on.\n\n[Some Architecture Objectives to Keep in Mind](https://github.com/tari-project/RFC/blob/master/proposals/181029-overview.md)\n\n[High Level Design Proposals](https://github.com/tari-project/RFC/blob/master/proposals/181102-high-level-design.md)\n\n[Tari Network Terminology](https://github.com/tari-project/RFC/blob/master/Glossary.md)\n\n[Base Layer Architecture Proposals](https://github.com/tari-project/RFC/blob/master/proposals/181107-base-layer-architecture.md)\n\n\nJoin us for our next discussion on Freenode in #tari-dev.\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of today‚Äôs discussion\n\n```\n4:09 AM <@cjs77> I invite everyone to take a look at the first set of proposals on https://github.com/tari-project/RFC\n4:10 AM <@cjs77> The content there a primarily a distillation of the conversation on this channel to date\n4:11 AM <@cjs77> It‚Äôs still very rough; there are lots of typos I‚Äôm sure; so I‚Äôd love any / all in the community to get involved and submit PRs for improvements and / or discuss issues and concerns about the proposals here\n4:12 AM <@cjs77> The focus so far is on i) The base layer and ii) building a common vocabulary. The second layer proposals are still incubating :)\n4:13 AM <Hansie> Looking good\n4:14 AM ‚Üí el00ruobuob joined (~el00ruobu@212.121.161.50)\n4:14 AM <@cjs77> Also, if anyone has some crazy good ideas to solve any of the (many) problems a digital assets network presents, you‚Äôre free to open a PR with a _new_ proposal; and we can hash out the ideas on the channel\n4:15 AM <@cjs77> The broad idea is that the proposals eventually become RFCs which will basically form the spec for the Tari protocol.\n4:17 AM <tk___> üëå\n4:23 AM <Hansie> Q: In ‚Äò181107-base-layer-architecture.md‚Äô, with ‚ÄòMessageBus‚Äô, how resilient is the MessageBroker?\n4:28 AM <@cjs77> It is essentially this patter: http://zguide.zeromq.org/page:all#toc39\n4:29 AM <@cjs77> PH claims a single thread can handle 1Gb/s of throughput\n4:29 AM <@cjs77> Not sure if that answers your question\n4:31 AM <Hansie> I was wondering if the MessageBroker could be distributed in itself, to be able to run via multiple nodes.\n4:50 AM <@cjs77> The idea of the MessageBroker is to collect messages from various sources and send them to things that are interested in those messages *within a single node‚Äôs ecosystem*. You‚Äôd have one (or more, depending) broker per node. The proposal doesn‚Äôt actually cover P2P communication. fluffy suggested zMTP as the protocol for that, which is totally compatible with the proposed architecture\n4:53 AM <@cjs77> But essentially what happens is, a node sends a message to a peer via the connection they have, which will hit the receiving node‚Äôs `MessagePublisher` that‚Äôs responsible for listening for messages from peers, and pass the message onto _its_ `MessageBroker`. Does that make sense?\n4:53 AM <tk___> ‚ÄúTODO: Difference between pruned nodes and archival nodes, particularly WRT to syncing‚Äù is Tari considering having 3 types of nodes (full, pruned and archival) or am I reading this incorrectly?\n4:58 AM <@cjs77> Since MimbleWimble offers cut-through, there‚Äôs an opportunity to dramatically shrink the blockchain state; I‚Äôm calling that a pruned node, maybe there‚Äôs a better name; but some nodes might want to track the full transaction history. They‚Äôre both full nodes; and their seeding strategies might be different\n4:58 AM <@cjs77> *full base layer nodes\n5:00 AM <Hansie> @cjs77: Yes thanks, this makes sense‚Ää‚Äî‚Ää*within a single node‚Äôs ecosystem*\n```\n",
    "title": "Tari Protocol Discussion 7",
    "date": "2018-11-20T14:00:00.000Z",
    "excerpt": "On Thursday, a brief Tari protocol architecture discussion was held to analyze the first set of Tari protocol proposals. Right now there are 4 rough architecture ideas on GitHub for the Tari...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-7.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "7"
  },
  {
    "slug": "2018-11-14-tari-protocol-discussion-6",
    "content": "\nMonday‚Äôs Tari protocol architecture discussions focused on validator nodes and their role in executing Tari digital asset instructions. \n\nThis is the TL;DR of Monday‚Äôs conversation (full transcript included below):\n\nValidator nodes\n* Can a single validator node perform digital asset instructions on its own or should there always be a number of them that work together?\n* What transaction fee models might work best?\n* Under what circumstances would it be more profitable to be a base layer miner node vs. a second layer asset validator node?\n\nJoin us for our next discussion on Freenode in #tari-dev.\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of today‚Äôs discussion\n\n```\n1:01 PM <@cjs77> We‚Äôve been throwing some ideas around about how the Tari 2nd layer might work. So base layer = PoW, merge-mined with Monero, handles Tari coin transfers. 2nd Layer = Digital assets layer.\n1:01 PM ‚Üí unknownids joined (unknownids@gateway/vpn/privateinternetaccess/unknownids)\n1:02 PM <cardboardoranges> nice\n1:03 PM <@cjs77> cardboardoranges: you can quickly catch up by scanning the archive for the last week or so\n1:03 PM <cardboardoranges> how do I do that\n1:03 PM <cardboardoranges> is there a pstebin somewhere\n1:03 PM <@cjs77> One sec.\n1:05 PM <@cjs77> Tari-dev logs https://usercontent.irccloud-cdn.com/file/EKrtcDXi/%23tari-dev-121118.txt\n1:06 PM <mikethetike> On medium as well\n1:06 PM <mikethetike> https://medium.com/tari-labs/today-we-hosted-the-first-of-many-discussions-about-taris-proposed-architecture-875ee07f4c8\n1:06 PM <cardboardoranges> oh you really gave me everything ha\n1:07 PM <cardboardoranges> the medium one is clean\n1:07 PM <mikethetike> I think there are 4 on medium\n1:08 PM <@cjs77> We‚Äôve been discussing this idea of ‚Äúvalidator nodes‚Äù (for want of a better descriptor) that post some collateral in order to execute Tari instructions.\n1:09 PM <@cjs77> Tari instructions are things that change the state in Tari Digital assets (DAs)\n1:09 PM <cardboardoranges> and validator nodes stand separately from ‚Äúregular‚Äù nodes?\n1:10 PM <@cjs77> e.g. ‚ÄúTransfer ownership this ticket token for a Beyonce concert to this public key‚Äù\n1:10 PM <@cjs77> ‚Äúregular‚Äù nodes, like on the base layer?\n1:10 PM <@cjs77> i.e. validating Tari coin transfers?\n1:10 PM <@cjs77> Yes, they‚Äôre different\n1:13 PM <@fluffypony> I think figuring out those incentives is going to be hard\n1:14 PM <@fluffypony> I wonder if the asset issuer can‚Äôt set the amount they‚Äôre willing to pay\n1:14 PM <@fluffypony> for each state update\n1:20 PM <mikethetike> should the state update be performed by the validator node creating a state update transaction on the base layer? if so, how do we envisage the fee being signed over? Maybe that‚Äôs too detailed for this point in the conversation\n1:21 PM <@fluffypony> mikethetike: then everything is in the base layer\n1:21 PM <@fluffypony> defeats the point of having a secondary layer\n1:21 PM <@fluffypony> 5 billion state updates a second\n1:22 PM <@cjs77> fluffypony: That makes sense for a lot of state updates, but not all, surely. If Alice buys a token and then wants to transfer it to Charlie, the asset issuer doesn‚Äôt need to be involved at all. In this case either A or C should pay the millTari (or whatever) to process the transaction. In any event, wouldn‚Äôt the market determine what the fee should be? In a permissionless setup, a validator node should have the right to say\n1:22 PM <@cjs77> ‚Äúno thanks‚Äù if it thinks the fee is too low. Then either the fee *is* too low, or there will be other nodes that spring up to take those fees.\n1:23 PM <@cjs77> I think you have a strong case for setting fees apriori in ‚Äúpermissioned‚Äù mode where the asset issuer nominates specific nodes for validation\n1:24 PM <mikethetike> it might be useful to get a glossary or set of terms defined. I was thinking of state checkpoints, not state updates\n1:24 PM <@cjs77> I‚Äôm working on it :)\n1:24 PM <Hansie> \\me Hi there\n1:25 PM <@fluffypony> what‚Äôs a state checkpoint\n1:25 PM <@cjs77> What you cross to get from East to West Berlin\n1:26 PM <neonknight> Can a single validator node perform the instruction on its own or should there always be a number of them that work together?\n1:27 PM <Hansie> I guess it could depend on the asset issuer, how the initial contract was set up\n1:29 PM <@fluffypony> cjs77: LOL\n1:31 PM <Hansie> I do not understand how it could be possible for Alice and Bob to transact in assets that potentially only live on the 2nd layer without a validator node being involved, to perform the state update. Sure the two parties could transfer base layer tokens without validator nodes, but I wonder about the rest.\n1:34 PM <@cjs77> @neonknight: As Hansie said, what if the DA issuer could decide? Either nominate nodes X,Y,Z (permissioned mode), or use some algorithm like ‚Äúany n nodes that have >= 1000 Tari as collateral‚Äù (permissionless mode). It would be assumed that the issuer trusts the nodes in the former case, but I presume a consensus mechanism is a must in the latter case\n1:34 PM <simian_za> During a transfer like that does the asset issuer pay the fee or does Alice/Bob?\n1:35 PM <Hansie> @cjs77: Yip, makes sense\n1:40 PM <Hansie> @simian_za: The question in my mind is about economics and incentives. If I am a validator node and someone asks me to perform an asset type instruction I would want to be paid. If I am a base layer node and needs to construct transactions in a block and mine it I would want to be paid. I guess the asset issuer would pay all instructions that is of direct benefit, example a check point merkle root of the asset state on the\n1:40 PM <Hansie> block chain, but would not really care about paying transfers costs between 3rd parties.\n1:41 PM <simian_za> Suppose some instructions are paid for by the token owners (transfers) and so. E instructions are paid for by the asset issuer (e.g. Ticket redemption)\n1:43 PM <simian_za> Hansie: agreed, if an asset issuer was responsible for transfer fees token owners could drain the issuers fee pool by transferring among themselves.\n1:48 PM <Hansie> I wonder if it would be more profitable to be a base layer miner node or a 2nd layer asset validator node, and if the motivation and incentives for the two types of nodes could be like two different prime groups in ECC, not intersecting at all‚Ä¶\n1:50 PM <simian_za> Miners will require different hardware setups (more compute) and be more expensive to run so the incentives will hopefully reflect that\n1:51 PM <neonknight> I might be missing something, but I have an issue with the DA issuer being able to nominate nodes. Imagine a bad player (DA issuer) creates an asset and nominates his own bad validator nodes, wont he be able to perform some bad instructions without the base layer knowing the difference. This could potentially spam the base layer or even worst cause reputational damage to tari for allowing these instructions.\n1:54 PM <Hansie> @simian_za: Mmmm‚Ä¶ So Tari token mining could be some money on the side for the Monero miners, and the 2nd layer nodes could be in a different economic space\n1:56 PM <Hansie> @neonknight: Bad DA issuer with bad nodes‚Ää‚Äî‚Ääexample creating tickets for an event that does not exist, then scam people into buying tickets tickets that is worthless?\n1:59 PM <simian_za> Or issue real assets and then fake transfers but accept real Tari as payment?\n2:00 PM <Hansie> Bye for now\n2:00 PM <@cjs77> neonknight: So what if there was a bounty of a validator nodes‚Äô collateral to anyone who could provide a fraud proof that the node was malicious?\n2:01 PM <Hansie> Ok, so I am back again. @cjs77, godidea\n2:01 PM <Hansie> good idea\n2:01 PM <tk___> maybe this would increase complexity but maybe the DA can choose any 2 of 5 nodes i.e 3 are randomly selected, and the DA can only select 2\n2:03 PM <neonknight> This requires some thinking\n2:03 PM <simian_za> Will need to be a cost to attempting to claim such a bounty or else there will be a lot accusations\n2:04 PM <@cjs77> I know this is easier said than done, and now we need to get some number of (presumably) honest nodes to act in judgement of the accused nodes which is blech, but maybe there‚Äôs an elegant solution in there somewhere\n2:04 PM <@cjs77> We just have a sign saying ‚ÄúOnly honest nodes allowed‚Äù\n2:04 PM <@cjs77> :-/\n2:04 PM <@cjs77> Crypto is easy\n2:05 PM <tk___> with a constitution that nodes have to sign it will work\n2:05 PM <@cjs77> ya know?! I was thinking the same thing\n2:05 PM <simian_za> A digitial pinky swear?\n2:06 PM <@cjs77> BTW, I‚Äôm working on a proposal for github, which will provide some meat for these discussions, but I keep diving down rabbit holes, so it‚Äôs taking longer than I initially estimated.\n```\n",
    "title": "Tari Protocol Discussion 6",
    "date": "2018-11-14T14:00:00.000Z",
    "excerpt": "Monday‚Äôs Tari protocol architecture discussions focused on validator nodes and their role in executing Tari digital asset instructions.  This is the TL;DR of Monday‚Äôs conversation (full transcript...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-6.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "6"
  },
  {
    "slug": "2018-11-09-tari-protocol-discussion-5",
    "content": "\nYesterday, the Tari community discussed the trade-offs needed for the Tari protocol's second layer. Speed, decentralization, and security are all opposing forces, and yesterday‚Äôs discussion was about balancing each component.\n\nThis is the TL;DR of yesterday‚Äôs conversation (full transcript included below):\n\nSpeed vs. decentralization trade-off\n* Every second layer node doesn‚Äôt need to execute every asset‚Äôs instructions (instructions refer to digital asset state changes)\n* Speed is valuable for digital assets‚Ää‚Äî‚Ääeven if it comes at the expense of some second layer decentralization\n\nSyncing first and second layers by invoking collateral requirements\n* Helps punish bad actors\n* Makes it expensive to run a sybil attack\n* How long should collateral be locked up?\n\nJoin us for our next discussion on Freenode in #tari-dev.\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of today‚Äôs discussion\n\n```\n10:07 AM <@cjs77> Onto the architecture discussion; we seem to be converging on this idea of a MimbleWimble base layer merge-mined with Monero; and a fast second layer handling digital assets\n10:14 AM <simian_za> Has there been any thought to the options for BFT on the second layer. Which ones are ‚Äúfast‚Äù?\n10:17 AM <@cjs77> On the 2nd layer, there‚Äôs no need for every 2nd-layer node to validate every instruction wrt to every digital asset that exists on the network. I‚Äôd argue that it‚Äôs a necessary (and desirable tbh) trade off to offer up some decentralisation to gain speed. With that said, what about this (very rough) idea:\n10:17 AM <@cjs77>‚Ää‚Äî‚ÄäA user/wallet submits an instruction to the network (Transfer 100 Tari to (output) for this token on DA #ta123)\n10:17 AM <@cjs77>‚Ää‚Äî‚ÄäA 2nd-layer node picks up the instruction and looks up in a hash table that it‚Äôs keeping in sync with it‚Äôs peers, which Nodes are responsible for executing transactions for that asset\n10:17 AM <@cjs77>‚Ää‚Äî‚ÄäIt relays the instruction (via the messaging layer, which might go via Tor, I2P, or whatever) to those node(s).\n10:17 AM <@cjs77>‚Ää‚Äî‚ÄäThe node(s) execute the instruction and reach consensus on the new state for DA #ta123 (consensus mechanism TBD)\n10:17 AM <@cjs77>‚Ää‚Äî‚ÄäEvery so often, 2nd-layer nodes bundle up the asset state into a merkle tree and post a checkpoint transaction onto the base layer\n10:19 AM <Blackwolfsa> I believe we need to look at some kind of ‚Äúoffline‚Äù solution here for speed, because we are looking at very high throughput for some scenarios we cant rely on the slow speed of the blockchain for each transaction\n10:19 AM <@fluffypony> offline as in?\n10:21 AM <Blackwolfsa> Not requiring input from the blockchain each time. I am thinking perhaps almost like lightning network operates, but not in a channel between 2 peer‚Äôs but more than that\n10:21 AM <@cjs77> I forgot to mention In Step 2, the node would have to check that the Tari transfer is a valid base layer transaction too. This leads to a question around payment channels on the 2nd layer, since if there‚Äôs a ~1:1 Tari transaction for each asset instruction, that won‚Äôt scale if every Tari tx has to be reflected on the base layer.\n10:21 AM <@cjs77> balckwolfsa: you mean offchain :)\n10:21 AM <simian_za> So how do nodes indicate they are responsible for processing a specific DA? Do they opt in on certain assets or does the network dish the responsibility out?\n10:23 AM <mikethetike> Maybe something like how the tor hidden services have a meeting point?\n10:23 AM <neonknight> If multiple 2nd layer nodes can provide a verifiable history of a token, then you probably do not have to query the block chain\n10:24 AM <@cjs77> In the early days, I wouldn‚Äôt be surprised if asset issuers would want the ability to authorise specific nodes to handle their assets; so we should support that. But we should also introduce a mechanism for nodes to opt in in some way so that Tari is also a permissionless network\n10:24 AM <Blackwolfsa> yes, but you need to have a way of dealing with funds. Someone needs to pay some fee for modify/transfer of tokens. Those require tari, which requires base layer\n10:26 AM <Blackwolfsa> @cjs77, @mikethetike, what about either you chose your own specific nodes(on their keys), or the network choses specific nodes for you(in some non deterministic way)?\n10:26 AM <mikethetike> With the second layer running out of step with the first layer, the fees might need to be prepaid/locked up before you can invoke second layer actions\n10:27 AM <Blackwolfsa> That would be fine with for example tickets. We know they will be redeemed once, so we can lock those up before hand with the ticket. But what about transfer or modify\n10:28 AM <tk___> will the node opt-in include some sort of Tari token staking?\n10:28 AM <mikethetike> It has to be expensive to 51% attack an asset on the second layer\n10:30 AM <mikethetike> so staking could work (although staking sounds like proof of stake, which is different)\n10:30 AM <neonknight> Staking is important, it should be expensive enough to limit bad players from spawning many bad nodes but cheap enough so you have multiple nodes storing the same data to create redundancy.\n10:32 AM <tk___> I was thinking of this vector: DA1 chooses Node2 & Node4. Node4 says he is available to handle the asset, a few mins after DA1 chooses Node4, the node suddenly disappears. Leaving DA1 with eggface\n10:33 AM <tk___> mikethetike: maybe we call it something else then so it doesn‚Äôt sound like POS üòã\n10:34 AM <mikethetike> let‚Äôs call it bail money :D\n10:34 AM <havik> collateral :)\n10:35 AM <simian_za> collateral is good\n10:35 AM <@cjs77> tk: DA1 needs to trust the nodes though, right?. Permissioned networks are not trustless.\n10:38 AM <mikethetike> I think for the simple hobbiest wanting to earn some fees, they will just download a 2nd node binary and select a bunch of assets from a select box\n10:38 AM <tk___> ok true. But whether trustless or trust(ful?), is Tari thinking of staki‚Ä¶‚Ä¶collateral?\n10:40 AM <simian_za> So collateral has two uses, punishing a detected bad actor but also, as neonknight said, making it expensive to conduct a sybil attack\n10:42 AM <Hansie> The assets on the 2nd layer should only go live when there has been a valid transaction to the base layer confirming the conditions, i.e. which 2nd layer nodes will serve the asset, bonded contracts between the asset issuer and the 2nd layer nodes, etc. So even the simple hobbiest will have to pay something.\n10:44 AM <neonknight> tk.. the ‚Äúslow‚Äù base layer will use PoW, while the ‚Äúfast‚Äù 2nd layer will use Collateral locked using the bonded contracts\n10:44 AM <tk___> üëç\n10:47 AM <mikethetike> So does the asset issuer choose how much collateral is needed for the nodes to process their asset?\n10:48 AM <Blackwolfsa> I think so yes?\n10:48 AM <simian_za> Will need to make it easy for them so will need to express some sort of risk profile based on the value of the assets in question\n10:51 AM <simian_za> Will probably also be a trade off of how much risk they want to take (i.e. the number of nodes that need to validate every instruction on their asset and the amount of collateral they have put up) vs the speed at which an asset needs to be processed\n10:52 AM <mikethetike> I assume this will be time based?\n10:52 AM <simian_za> Now that is an interesting point‚Ä¶consensus on time in a distributed network is a bit tricky‚Ä¶\n10:53 AM <mikethetike> otherwise eventually the fees I‚Äôm earning are above my collateral\n10:53 AM <mikethetike> I meant more like, after a few months, my stake is returned to me\n10:54 AM <mikethetike> and I have to put down collateral again\n10:54 AM <mikethetike> potentially at a higher price\n10:55 AM <simian_za> hmm does the fact that you have made a profit (more fees earned that collateral) reduce the disincentive of losing your collateral? That would be a relative thing vs how much you total capital is and we cannot know that.\n10:55 AM <simian_za> if you have 1 000 000 tari in the bank and the collateral was 100 tari, you earn 110 tari in fees. Is the disincentive much less?\n10:58 AM <neonknight> For how long should the Collateral be locked, the lifetime of an asset? Probably ok for tickets but not for game assets..\n10:58 AM <Blackwolfsa> colleteral should be more than the fees, risk /reward should be > 1\n11:01 AM <@cjs77> neonknight: assuming the notion of asset lifetime is clearly defined, I‚Äôd argue collateral is locked up for lifetime + ŒîT\n11:02 AM <@cjs77> ŒîT might be a few weeks or months‚Ää‚Äî‚Ääthe right amount of time is something that needs to be modelled\n11:02 AM <Blackwolfsa> we could always do checkpoint + ŒîT\n```\n",
    "title": "Tari Protocol Discussion 5",
    "date": "2018-11-09T14:00:00.000Z",
    "excerpt": "Yesterday, the Tari community discussed the trade-offs needed for the Tari protocol's second layer. Speed, decentralization, and security are all opposing forces, and yesterday‚Äôs discussion was about...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-5.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "5"
  },
  {
    "slug": "2018-11-06-tari-protocol-discussion-4",
    "content": "\nThe Tari community examined merge-mining pool implementations, wire protocol choices, in-process communication options, threading models, and code dependency audits during today‚Äôs Tari protocol architecture discussion.\n\nThis is the TL;DR on what was covered (full transcript included below):\n\nHow will Monero mining pools get the tools they need in order to support Tari merge-mining?\n* PRs are submitted or someone has to fork the OSS mining pool software\n* Closed source pools would need to do it themselves or talk to someone in the Tari community\n\nWhich wire protocols should be considered?\n* In-process, ZeroMQ looks interesting\n* Still looking at gRPC / http / hand-rolled also as some alternatives\n\nWhat are possible in-process communication options & threading models?\n* ZeroMQ is the preferred choice\n* actix, Rust native (mpsc), tokio, mio, hand-rolled message brokers are possible alternatives\n* More testing is needed to check speed of inprocess comms for ZeroMQ\n\nHow should code dependencies be handled?\n* Audit every dependency\n* Evaluate whether the risks < benefits, and go for battle-hardened, proven technologies where available\n* It‚Äôs hubris to reinvent libraries that have millions of CPU hours behind them, but also it‚Äôs folly to chuck in a lib with 50 dependencies just to save 2 lines of boilerplate code\n\nJoin us for our next discussion on Freenode in #tari-dev.\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of today‚Äôs discussion\n\n```\n7:05 PM <@cjs77> Hey all\n7:07 PM <el00ruobuob_[m]> hi\n7:08 PM <Krakaw> evening\n7:08 PM <@fluffypony> cjs77: there aren‚Äôt tons of different pool implementations that would need PRs to support merge mining\n7:08 PM <@fluffypony> just the two, as moneromooo pointed out\n7:08 PM <@fluffypony> and then the ones running their own stuff must play catch-up\n7:09 PM <@cjs77> Cool, so those pool have open-sourced their code?\n7:10 PM <@cjs77> Any links?\n7:10 PM <tk___> hey\n7:12 PM <moneromooo> https://github.com/zone117x/node-cryptonote-pool is the original one, not sure what fork is the most current one though.\n7:12 PM <@fluffypony> sammy007 will know\n7:12 PM <mikethetike> anything specific on the agenda tonight?\n7:13 PM <simian_za> Evening\n7:14 PM <@cjs77> There are a couple of active topics:\n7:14 PM <@cjs77> * Monero mining pools‚Ää‚Äî‚Ääand what we‚Äôd need to provide to help them support Tari merge mining\n7:14 PM <@cjs77> Rollover from From last week:\n7:14 PM <nioc> Snipa wrote the other pool software and hangs out in #monero-pools\n7:15 PM <@cjs77> * wire protocol choice\n7:15 PM <@cjs77> * in-process communication options & threading models\n7:15 PM <@cjs77> * use of dependencies in code\n7:15 PM <nioc> I guess it‚Äôs somewhere on github\n7:15 PM <@cjs77> Thanks nioc\n7:18 PM <@cjs77> ITO wore protocol, I‚Äôve been doing some reading and there are a coupla alternatives:\n7:18 PM <@cjs77> * NIH‚Ää‚Äî‚ÄäI believe Grin went this route\n7:18 PM <@cjs77> * gRPC‚Ää‚Äî‚Äägreat cross platform support\n7:18 PM <@cjs77> * zMQ‚Ää‚Äî‚Äähands down winner imho\n7:20 PM <simian_za> Zmq is also good for your second point? Interprocess comms and threading?\n7:21 PM <json_> gRPC well supported in rust? What was the reason grin went with http?\n7:22 PM <neonknight> gRPC and zMQ have rust bindings..\n7:23 PM <@cjs77> neonknight: I really think it can be. Rust has some alternatives, like mio, tokio (which is built on mio), Actix (which is built on tokio).\n7:23 PM <@cjs77> So the problem is: it‚Äôs really one stack (Rust is possibly not mature enough to have a suite of options); mio and tokio aren‚Äôt that easy to use; but Actix has a HUGE number of dependencies. Whereas ZMQ is simple, does the job; does it incredibly well; and let‚Äôs you build on top of it without much fuss\n7:24 PM <mikethetike> The docs for actix-web are not bad, but for actix itself, they are very bare\n7:25 PM <mikethetike> 8 out of 11 pages of the user guide just say ‚Äú[WIP]‚Äù\n7:25 PM <simian_za> Tokio is also very dependancy heavy\n7:26 PM <@fluffypony> I‚Äôm a big fan of 0MQ\n7:26 PM <@fluffypony> and vtnerd has done great work integrating it in Monero\n7:26 PM <@fluffypony> he can give input in to that experience\n7:27 PM <@cjs77> So to step back a sec; I like the idea of using message passing (even internally) because it allows for a very decoupled architecture; the question is that if this is the approach to take, is zmQ / 0mq performant enough on its `inproc` sockets to use a sinlge library for both ‚Äúinternal‚Äù and external messaging?\n7:28 PM <@fluffypony> so like microservices?\n7:28 PM <@cjs77> yup\n7:28 PM <@cjs77> maybe not per the strict definition (like the modules would still run on the same box for performance)\n7:30 PM <@cjs77> but, if you _wanted_ to run the e.g. block validator module on a different machine to the mempool (I don‚Äôt know why you would, but hey), you could change `inproc` to `tcp` and off you go (more or less)\n7:32 PM <mikethetike> What did monero use before 0mq\n7:33 PM‚Ää‚Äî‚Ää@cjs77 gathers around the fireplace to listen to fluffypony regale us with tales of yore\n7:34 PM <Hansie> Hi there\n7:35 PM <Hansie> zMQ: Inter plaform‚Ää‚Äî‚Ääyes, inter process‚Ää‚Äî‚Ääyes, inner process‚Ää‚Äî‚Äämaybe\n7:36 PM <@fluffypony> mikethetike: JSON over HTTP\n7:36 PM <@fluffypony> it still supports that\n7:36 PM <@fluffypony> and the CLI wallet still talks to the daemon over that\n7:36 PM <Hansie> A couple of simple spike tests will tell if zMQ can handle all three. If so, good\n7:36 PM <@fluffypony> but it‚Äôs not really IPC, it‚Äôs more RPC\n7:36 PM <@cjs77> Yeah, it‚Äôs the ‚Äúmaybe‚Äù I‚Äôm looking to see if anyone has some definitive experience on\n7:38 PM <@fluffypony> https://grokbase.com/t/zeromq/zeromq-dev/102s8rzsvs/inter-thread-zmq-inproc-performance\n7:39 PM <@fluffypony> that looks positive\n7:39 PM <@fluffypony> http://zeromq.org/results:perf-howto\n7:39 PM <@fluffypony> To run an inter-thread latency test, use inproc_lat instead of the above. It is a single executable and doesn‚Äôt require specifying an endpoint:\n7:40 PM <@fluffypony> To run an inter-thread throughput test, use inproc_thr instead of the above. It is a single executable and doesn‚Äôt require specifying an endpoint:\n7:41 PM <@cjs77> That looks great, actually.\n7:41 PM <mikethetike> I suppose we‚Äôll still need to expose parts of the API via http for android wallets etc\n7:41 PM <mikethetike> or can 0mq do that natively\n7:42 PM <@fluffypony> mikethetike: Android can talk via 0MQ over TCP\n7:42 PM <@cjs77> I did some tests on the mac using `tcp` loopback last week and got 10,000,000 messages/sec throughput, so even that is pretty quick\n7:42 PM <@fluffypony> there are bindings for Java\n7:42 PM <mikethetike> noice\n7:42 PM <Hansie> My experience is with ACE TAO Corba (The ACE Orb)‚Ää‚Äî‚Ääreal-time Corba. The native OS messaging infrastructure (semaphore, WaitForSingleObject, etc.) was more efficient for inner process communication. Seems to be a heavier implementation than zMQ though.\n7:43 PM <@cjs77> If we have LMDB as a key-value store and 0mq as a the message broker, I think we have a little pocket rocket on ur hands\n7:45 PM <@fluffypony> yuuuuup\n7:45 PM <@fluffypony> hyc would be so proud\n7:45 PM <@fluffypony> *wipes tear*\n7:45 PM <@cjs77> btw Googling ‚Äúcorba rust implementation‚Äù doesn‚Äôt come up with anything\n7:46 PM <Hansie> LMDB + zMQ 0MG sounds good, but the proof is in the pudding. I am a fan of a couple of small spike projects to proof.\n7:46 PM <@fluffypony> lol corba\n7:49 PM <@cjs77> Yeah, we can pull up some tests. fluffy‚Äôs link had some benchmark code references\n7:50 PM <@cjs77> Ok, great progress on this front. It also implicitly addresses the dependency issue.\n7:50 PM <@cjs77> .. implicitly to some degree\n7:51 PM <@fluffypony> cjs77: so in Monero we‚Äôve had to submodule some deps for building static bins\n7:51 PM <@fluffypony> how does Rust handle deps?\n7:51 PM <@cjs77> Cargo is a packagae manager ala npm for node\n7:51 PM <mikethetike> but you can also cargo a submodule if needed\n7:52 PM <@cjs77> compiling in rust is (99% of the time) as simple as `cargo build`\n7:52 PM <@fluffypony> ok but then is there static and dynamic binding like with C?\n7:52 PM <@cjs77> nah, everything is a crate\n7:52 PM <@fluffypony> are crates binary packages or source code?\n7:52 PM <@cjs77> but a crate can be a gtihub link to specific commit for example\n7:52 PM <mikethetike> crates are source\n7:52 PM <@cjs77> source code\n7:52 PM <@fluffypony> ah ok so it always builds every dep\n7:53 PM <mikethetike> but you can also build a dynamic linkable binary I believe\n7:53 PM <@fluffypony> let‚Äôs hope we never have boost for rust :-P\n7:53 PM <@fluffypony> dynamic libraries and DLLs were always a dumb idea, imho\n7:53 PM <mikethetike> I think compiling from source is what we‚Äôll be doing most of the time though\n7:53 PM <@fluffypony> DLL hell is a real thing for developers\n7:54 PM <@cjs77> afaik even something ike 0mq, which are rust wrappers around the C library, will build the C code as part of the build, but I may be worng\n7:54 PM <@fluffypony> kk\n7:55 PM <mikethetike> I do think we need to be careful about which dependencies we use\n7:56 PM <@cjs77> fluffypony: I def looks like Rust expects `libssl` and `libc` to be on your system at runtime, so there are still a few dynamic linked libs. This is by default, and I suspect you could force linking those in too if you wished\n7:56 PM <mikethetike> otherwise we‚Äôll be reviewing code in those repos forever\n7:57 PM <@cjs77> mikethetike: agreed. Wich is why the ability to freeze crate versions or even commit versions is a nice feature\n7:57 PM <@fluffypony> yeah like submodules are at a commit hash\n7:57 PM <@fluffypony> so same but different\n7:57 PM <@fluffypony> cjs77: I guess libssl is pretty standard by now\n7:58 PM <Hansie> I like the ability to link to certain commit versions.\n7:58 PM <neonknight> I think we should limit the number of dependencies to the bare minimum. It will be crazy to reinvent the wheel every time.\n7:59 PM <@cjs77> fluffypony: yeah, on any standard system (and we supply instructions for things like building a docker image on alpine linux, for example)\n8:00 PM <@cjs77> neonknight: it sounds like part b is contradicting part a?\n8:00 PM <@fluffypony> lol\n8:00 PM <@cjs77> it‚Äôs a thing! :)\n8:01 PM <neonknight> Hehhe It is late in South Africa, some dependencies are better than none.\n8:01 PM <@cjs77> kk. gotcha\n8:04 PM <Hansie> neonknight: Yes, we should invent tokens not wheels\n8:05 PM <@cjs77> Yeah, walk the line. Audit every dependency. Really evaluate whether the risks << the benefits, and go for battle-hardened, proven technologies where available. It‚Äôs hubris to think we could improve on libraries that have millions of CPU hours behind them, but also it‚Äôs folly to chuck in a lib with 50 dependencies just to save 2 lines of boilerplate code here and there.\n8:05 PM <mikethetike> agreed\n8:05 PM <endogenic> there‚Äôs the argument one ends up maintaining any dependency anyway\n8:05 PM <mikethetike> Also no auto-updating of dependencies\n8:06 PM <Hansie> If sense is with us sanity will prevail\n```\n",
    "title": "Tari Protocol Discussion 4",
    "date": "2018-11-06T14:00:00.000Z",
    "excerpt": "The Tari community examined merge-mining pool implementations, wire protocol choices, in-process communication options, threading models, and code dependency audits during today‚Äôs Tari protocol...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-4.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "4"
  },
  {
    "slug": "2018-11-02-tari-protocol-discussion-3",
    "content": "\nThe two main ideas discussed during today's Tari protocol architecture discussion were possible use cases for private digital assets on public networks and possible MimbleWimble implementations. \n\nThis is the TL;DR on what we covered (full transcript included below):\n\nThe ideas that were covered in this discussion were:\n* A continuation of the philosophical / high-level discussion around the 2nd layer and how that might work\n* Soliciting some opinions on some MimbleWimble implementation specifics\n\nThe 2nd layer discussion revolved around the following core questions:\n* Configurable privacy in digital Assets\n* What are some use cases for private DAs in a public network?\n\nWhile the MimbleWimble implementation discussion tackled the following ideas:\n* Choice of ECC curve\n* In-memory DB and persistence strategy / DB choice\n* Wire protocol choice\n\nJoin us for our next discussion on Freenode in #tari-dev.\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of today‚Äôs discussion\n\n```\n10:04 AM <‚Ä¢cjs77> Good morning all\n10:07 AM <‚Ä¢cjs77> I suggest ‚Äúforking‚Äù the discussion today along two paths. On one, we continue the philosophical / high-level discussion around the 2nd layer. In particular, Monday‚Äôs chat posed a few good questions, that we should thrash out:\n10:07 AM <‚Ä¢cjs77> * Configurable privacy in digital Assets. What are some use cases for private DAs in a public network?\n10:07 AM <‚Ä¢cjs77> * Which configuration of network overlay & consensus algorithm will be the simplest, and still work?\n10:07 AM <‚Ä¢cjs77> * Start to think about how the 2nd layer and base layer interact.\n10:07 AM <‚Ä¢cjs77> * Long-lived vs short-lived digital assets? How does this influence the incentive / funding model?\n10:07 AM <‚Ä¢cjs77> or reference, here‚Äôs a summary of the conversation so far: https://github.com/tari-project/RFC/blob/4f929788409113ee4f1ac057000a4ff33388fedb/proposals/181029-overview.md\n10:08 AM C‚Ää‚Äî‚Ää‚Ä¢cjs77 takes a breath\n10:11 AM C<‚Ä¢cjs77> Then on the other ‚Äúbranch‚Äù, I‚Äôd love to solicit some opinions on some MimbleWimble implementation specifics:\n10:11 AM <‚Ä¢cjs77> * Choice of ECC curve\n10:11 AM <‚Ä¢cjs77> * in-memory DB and persistence strategy / DB choice\n10:11 AM <‚Ä¢cjs77> * wire protocol choice\n10:11 AM <‚Ä¢cjs77> * in-process communication options & threading models\n10:11 AM <‚Ä¢cjs77> * use of dependencies\n10:11 AM <‚Ä¢cjs77> * Anything else we‚Äôve forgotten\n10:29 AM <simian_za> So the choice of ECC curve is quite important and obviously we want to choose one that is secure in a mathematical sense but we also need it to be secure in terms of its implementation. What are the options being considered?\n10:31 AM <Hansie> Good background information here http://safecurves.cr.yp.to/\n10:32 AM <simian_za> So there seem to be a number of options with green ticks across the board. Which have mature implementations available?\n10:34 AM <Hansie> When is it mature? There must be some metrics out there.\n10:35 AM <simian_za> Suppose it might be more useful to start with asking which of those curves have Rust implementations available at all\n10:37 AM <neonknight> Not many.. curve25519 has one: https://github.com/dalek-cryptography/curve25519-dalek\n10:37 AM <‚Ä¢cjs77> Obv secp256k1 is a strong contender, since it‚Äôs used in Bitcoin+clones and pwuille‚Äôs library is rock solid\n10:38 AM <‚Ä¢cjs77> Monero uses curve25519 which has several well-documented advantages over secp256k1 (see the link Hansie posted)\n10:38 AM <Hansie> I suppose not all the green-tick-curves-across-the-board are compatible with Schnorr signatures?\n10:38 AM <‚Ä¢cjs77> ü§∑\n10:40 AM <Blackwolfsa> But do we want to use a curve that might have security vulnerabilities when we can choice one that doesnt\n10:40 AM <neonknight> Curve41417 also has a few rust implementations\n10:41 AM <‚Ä¢cjs77> imho, IsisLoveCruft‚Äôs ed25519‚Äôs library is the best Rust implementation (https://github.com/isislovecruft/ed25519-dalek?files=1). Question is: Is it battle-tested enough?\n10:42 AM <‚Ä¢cjs77> neonknight: Is that curve used in any big projects? It‚Äôs a new one to me\n10:42 AM <mikethetike> so it‚Äôs a protocol‚Ää‚Äî‚Äänot an implementation‚Ää‚Äî‚Äädecision, but if we‚Äôre merge mining with Monero, won‚Äôt we have to choose a curve25519 rust lib\n10:42 AM <mikethetike> anyway\n10:43 AM <Hansie> I think that is independent though\n10:44 AM <mikethetike> Blackwolfsa: On behalf of the bad guys who are too shy, I‚Äôm going to say yes\n10:44 AM <‚Ä¢cjs77> That doesn‚Äôt *force* us to choose it for TariMW (though it is a string argument in favour of it)\n10:45 AM <‚Ä¢cjs77> @fluffypony wdyt?\n10:47 AM `thread::spawn(move || { db.choice? });`\n10:47 AM <simian_za> sqlite?\n10:47 AM <‚Ä¢cjs77>I‚Äôm going to some out and say it, LMDB seems the clear winner. _[citations abound]_\n10:48 AM <mikethetike> The dalek library and mimblewimble aren‚Äôt in the same fantasy universes. Is that going to be a problem?\n10:48 AM <‚Ä¢cjs77> but open to alternatives\n10:48 AM <‚Ä¢cjs77> mikethetike: crossover movie incoming!\n10:49 AM <neonknight> Curve41417 seem to be a new generation curve from Daniel J. Bernstein, with higher security than curve25519, but I cant find who actually uses it.\n10:49 AM <mikethetike> :D\n10:49 AM <‚Ä¢cjs77> Solved problem: https://www.wattpad.com/story/3291555-harry-potter-and-the-secrets-untold-harry-potter\n10:52 AM <neonknight> LMDB seems like the winner. It is difficult to compare them, as you cant trust any of the online benchmarks testing key store libraries.\n10:53 AM <simian_za> That also solves any future cross-over problems. We can just write our own fanfic as required\n10:56 AM <tk___> neonknight: there is pure-Rust implementation of Curve41417 https://github.com/seb-m/curve41417.rs\n10:56 AM <tk___> we could be the first to use it :‚ÄùThis code is experimental, don‚Äôt use it for anything real.‚Äù Are blockchains even real?\n11:02 AM <Hansie> To answer one of @cjs77 questions: Use case for ‚ÄúConfigurable privacy in digital Assets‚Äù. Could be in a game, where you not not want the opposition to know what resources you have.\n11:02 AM <xethron> I don‚Äôt know much about LMDB, but I always run into issues with SQLite not supporting some critical feature in SQL\n11:03 AM <simian_za> Hansie: Also, if an asset is very valuable you might well not want people to know you have it as it could make you a target\n11:04 AM <Hansie> People can come to your house\n11:05 AM <simian_za> sure, though there are many vectors for remote attack\n11:05 AM <Hansie> I think ‚ÄúConfigurable privacy in digital Assets‚Äù is a good idea\n11:06 AM <minamoo> ‚Äúuse cases of privacy in DAs‚Äù: could apply for ICOs and STOs (if ever they take off)\n11:08 AM <‚Ä¢cjs77> That would be the default setting for all digital assets, I would think. ala MW, ownership would be governed by a public-private keypair, which is unique for each transaction. So it would be hard to link a pubkey to any given individual. Making an asset ‚Äúpublic‚Äù would then be opt-in, where a known identity would sign a message with the token‚Äôs private key\n```\n",
    "title": "Tari Protocol Discussion 3",
    "date": "2018-11-02T14:00:00.000Z",
    "excerpt": "The two main ideas discussed during today's Tari protocol architecture discussion were possible use cases for private digital assets on public networks and possible MimbleWimble implementations. ...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-3.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "3"
  },
  {
    "slug": "2018-10-29-tari-protocol-discussion-2",
    "content": "\nThe Tari protocol is all about native digital assets. So the architecture must support the particular requirements of a digital assets platform.\n\nToday the Tari community came together to think about different ways the Tari protocol could be built.\n\nThese digital assets will define and contain asset tokens. For example, in a ticketing context, a single event asset will contain many ticket tokens. The ticket tokens will have a state, such as its current owner and whether it has been redeemed or not.\nThe Tari network must manage and execute asset instructions, including asset creation, token transfers and state changes.\n\nThe critical must have requirements for digital assets and their token are:\n* Security\n* Speed (perhaps in the order of 1,000 TPS)\n* Scalable (think millions of in-game items + metadata)\n\nThe following features would be highly desirable and add to the Tari protocol‚Äôs value proposition:\n* Opt-in privacy (depending on the needs of the asset issuer)\n* Configurable decentralisation (depending on the needs of the asset issuer)\n\nFor example, a given issuer might want only their node(s) be allowed to execute asset instructions (a permissioned system), whereas others will prefer completely decentralised management of their assets (permissionless).\n\nThese broad requirements are in some ways mutually exclusive. Consider the distributed system trilemma of wanting a network to be:\n* Fast\n* Cheap\n* Secure\n\nbut only being able to pick at most two.\n\nThis suggests the partitioning of the Tari network into two layers:\n\n|  | Base Layer | Second Layer \n--- | --- | ---\nSpeed | Slow | Fast\nScalability | Moderate | Very high\nSecurity | High | Mod (High with fallback)\nDecentralization | High | Low - Med\nProcesses Tari token tx | Yes | No\nProcesses digital asset instructions | Only checkpoints | Yes \n\n\nQuestions to think about:\n* Configurable privacy in digital Assets? What are some use cases for private DAs in a public network?\n* Which configuration of network overlay & consensus algorithm will be the simplest, and still work?\n* How will the 2nd layer and base layer interact?\n* Long-lived vs short-lived digital assets? How does this influence the incentive/funding model?\n\nJoin us for our next discussion on Freenode in #tari-dev.\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of today‚Äôs discussion\n\n```\n[20:00:31] <@cjs77> Let's kick off this 2nd Tari architecture discussion! Welcome to everyone from the far western and eastern hemispheres, who weren't up in the middle of the night for the first one :)\n[20:02:11] <@cjs77> ICYMI the logs from Thursday's chat are here: https://paste.fedoraproject.org/paste/MyJRvustYF1Qt6dlpEIARg/raw\n[20:05:53] <@cjs77> I'd love to get some thoughts / ideas on what the 2nd layer (digital assets layer) might look like. The goals here are *scalability* and *speed*. We're willing to trade off decentralisation to achieve this.\n[20:06:38] <sarang> What about transparency?\n[20:08:16] <@cjs77> I've thought about this a bit and have refined by thinking around the comments I made above. Of the options for a 2nd layer, the design choice basically boil down to a choice for maintaining an overlay network, coupled with a consensus mechanism.\n[20:08:39] <@cjs77> Overlay network options:\n[20:08:39] <@cjs77> * Each node maintains a list of nodes, but no other information about it (e.g. Bitcoin); Node capabilities are\n[20:08:39] <@cjs77> obtained by querying peers.\n[20:08:39] <@cjs77> * Each node tracks it's \"neighbourhood\" of the network, and perhaps some metadata (e.g. DHT's like Kademlia)\n[20:08:39] <@cjs77> * Each node tries to maintain a full list of peers, along with information about which DAs each node is authorised to\n[20:08:39] <@cjs77> process instructions for. Queries about a specific DA can be routed directly to the node(s) that are tracking it.\n[20:08:40] <@cjs77> Consensus options:\n[20:08:41] <@cjs77> * A full second-layer blockchain. This is probably overkill and unlikely to achieve the speed and cost targets we would\n[20:08:41] <@cjs77> like, particularly if it's a proof-of-work blockchain.\n[20:08:41] <@cjs77> * State Channel network. Ideas like Plasma etc., are interesting, but are incredibly complex. Complexity increases the\n[20:08:42] <@cjs77> system's attack surface, and is more prone to failure and bugs. One feels that there are simpler and more elegant solutions\n[20:08:43] <@cjs77> to this problem.\n[20:08:43] <@cjs77> * \"Permissioned\" DAs. In this model, DA issuers must nominate (trusted) nodes to run their DAs for them. Specifying\n[20:08:44] <@cjs77> multiple nodes serves more as insurance against DoS attacks than protecting against Byzantine agents. Bonded\n[20:08:44] <@cjs77> contracts between issuer and nodes on the base layer can provide additional incentives to maintain uptime and honesty\n[20:08:45] <@cjs77> (though the incentive structure must be carefully thought out to prevent co-ordinated attacks by rogue asset issuers\n[20:08:45] <@cjs77> colluding with malicious nodes)\n[20:08:46] <@cjs77> * Directed Acyclic Graphs. DAG implementations, like Spectre, PARSEC, HoneyBadgerBFT etc. are an interesting\n[20:08:46] <@cjs77> possibility. DAGs have the potential to provide reasonable speed and scalability whilst still offering true BFT\n[20:08:47] <@cjs77> tolerance and thus promising a truly permissionless second layer.\n[20:08:47] <@cjs77> sarang: transparency?\n[20:09:12] <sarang> Of data on the chain and other layers\n[20:10:17] <@cjs77> If we use MimbleWimble, then all transactions are confidential\n[20:10:19] <mikethetike> DA = digital asset for anyone who is wondering\n[20:10:59] <@cjs77> (MW on base layer). On 2nd layer, there's room for debate.\n[20:11:40] <@cjs77> I can see a use case for \"open\" assets (ala Ethereum contracts) that are publicly readable\n[20:12:31] <@cjs77> Though I don't see why we couldn't also have private assets. You've probably heard fluffypony talk about \"Privacy sliders\" in Tari.\n[20:13:06] <mikethetike> as in the contracts are open or the ownership of the assets and their state is open?\n[20:13:32] <moneromooo> \"privacy slider\" makes me think of the sliding hole covers in prison cells. Not a great image to associate with.\n[20:13:59] <@cjs77> as in, their state is readable\n[20:14:34] <@cjs77> moneromoo: lol. TIL\n[20:22:00] <neonknight> Maybe a good first step is to decide if the 2nd layer should have only a few very reliable / trustworthy nodes or many semi reliable / trustworthy nodes?\n[20:23:33] <mikethetike> I think we have to assume that they are all not trustworthy\n[20:24:07] <kngako> By how much would the \"privacy slider\" increase the complexity of the possible consensus options?\n[20:24:50] <@cjs77> One approach is to build out the network in stages. Start with the \"permissioned\" system wherein nodes are defacto trusted, and once that's working expand to include untrusted nodes\n[20:30:51] <mikethetike> I think that we should start out assuming they are all untrustworthy and then only allow them to be incentivised if they act in a trustworthy manner\n[20:31:22] <Hansie> With bonded contacts; it could be possible to determine the cost of an asset at creation and bond that amount - issuer with the nodes selected to service it?\n[20:31:27] <mikethetike> or maybe penalized if they don't?\n[20:32:13] <Hansie> Nodes also stake something . Then we have balance between issuer and nodes\n[20:34:35] <Hansie> Then as the DA contract is serviced through its lifetime costs are allocated to 2nd layer nodes that were involved?\n[20:36:49] <@cjs77> Good question, kngako. I haven't given the \"full privacy\" section of the privacy slider a ton of thought; we'd need to talk through some use cases in more detail\n[20:39:00] <jnsmk> Catching up was a bit late :D\n[20:39:53] <@cjs77> For tickets / in-game items etc, item owners would typically just look like public keys, and so would be basically anonymous unless the someone decided to prove ownership by singing something with the associated private key\n[20:40:11] <@cjs77> *signing\n[20:40:51] <havik> Or if there was a rule requiring identity\n[20:41:41] <havik> or something identifying at least\n[20:42:02] <Hansie> Identity could be proven but still kept private if required I think\n[20:42:14] <mikethetike> > singing something with the associated private key\n[20:42:29] <mikethetike> <snicker>\n[20:42:29] <@cjs77> in C#-minor\n[20:42:47] <Hansie> Too much singing\n[20:44:04] <kngako> Cool, I'm with mikethetike on the assuming untrustworthiness. For a permissioned system, would the nomination of the set of trusted nodes have a mechanism to avoid \"paying/kickbacks for nominations\" scenarios? The node(s) who offer the most kickbacks will most likely get the most (recurring) nominations, or that should be considered as the system moves into a more trustless setup?\n[20:44:30] <jnsmk> Who would be the trusted nodes ? maintained by Tari legal entity ?\n[20:45:11] <@cjs77> nope\n[20:45:13] <havik> No\n[20:45:26] <@cjs77> Tari wouldn't be involved at all.\n[20:45:53] <@cjs77> An asset issuer would say, when creating an asset, \"I authorise nodes X,Y,Z to process instructions for this asset\"\n[20:46:05] <Hansie> I do not know about assuming un-trustworthiness at the outset\n[20:46:06] <jnsmk> I see that's already makes more sense\n[20:46:50] <kngako> Hmm... Cool.\n[20:46:52] <jnsmk> I think assuming complete untrustworthiness might slow down / be overkill\n[20:47:02] <Hansie> Yip. I like the idea of bonding/trusting/authorizing.\n[20:47:23] <mikethetike> I think as with block rewards, it must be more profitable to provide valid data than to cheat the system.\n[20:47:32] <@cjs77> We could have nodes register on the base layer and post a bond.\n[20:47:59] <Hansie> Each party to perform according to that bond\n[20:48:08] <@cjs77> What's cool about this is that the base layer acts as a registrar of 2nd layer nodes, but it's not a central authority :)\n[20:49:33] <jnsmk> what are usecases where total untrustworthiness would be required ? I agree that for ticket selling for a concert it's not required\n[20:50:41] <Hansie> Do you mean \"untrustworthiness would be assumed\" or \"untrustworthiness would be required\"?\n[20:51:09] <jnsmk> I mean, where choosing \"trusted\" node to bootstrap would not be possible\n[20:51:11] <mikethetike> I think there are going to be cases where the issuer just doesn't know any of the nodes, hence will go with any set of nodes\n[20:52:22] <Hansie> Low value assets can go with less trust, but not something like a rock concert\n[20:53:33] <havik> Unless its something like Slipknot where the band members wear masks :P\n[20:54:57] <jnsmk> Let's say I'm an independant game designer making a card game and I want to issue them using Tari. I just have to choose a random set of peers, would that give me enough confidence about issuing my cards ?\n[20:55:03] <mikethetike> Choosing a specific set of nodes would probably be an advanced use case\n[20:55:49] <@cjs77> jnsmk: sure, if an asset issuer is authorising nodes, he's not going to randomly assign them. In permissioned mode, he's typically running the nodes himself / or knows who is.\n[20:56:16] <jnsmk> Yea that's what I thought, you basically setup your own set of nodes\n[20:56:20] <@cjs77> Things get more interesting in permissionless mode for sure.\n[20:57:15] <mikethetike> personally I would start with permissionless (if it were me creating the game)\n[20:58:10] <Hansie> I cannot really think about a use case where trust will not be important. Lets take your card game example jnsmk. The nodes would liketo know they will get paid for their service through the lifetime of the game. The issuer would like to know the game asset will be serviced. That is a trusted setup, even if the nodes are not known.\n[20:58:12] <mikethetike> until there was big money involved\n[21:00:18] <jnsmk> @mikethetike why would you choose the permissionless ?\n[21:00:46] <@cjs77> @jnsmk: Great scenario. So what if you stated as a condition of managing your card assets that only nodes that have > N Tari in a bonded contract are eligible?\n[21:01:08] <@cjs77> That way, if anyone wants to cheat, they put an amount of Tari that you specify at risk\n[21:02:28] <@cjs77> Now, to compensate nodes for tying up Tari, and risking having their bonds slashed (though if they're honest, that risk is ~zero), they earn tiny fees for each instruction related to your card assets that they process?\n[21:04:11] <@cjs77> Since, there are multiple nodes managing your cards now, we need a consensus algo to keep all the state in sync (this is hard) and to catch out cheaters (also non-trivial); and is why the permissionless scenario is trickier than the trusted one\n[21:05:09] <@cjs77> ..but something we should have Tari handle, obviously :)\n[21:05:59] <mikethetike> so say I have this idea for *cryptokitties 2 - caturday night fever* - hypothetical of course - I don't know if it's going to work, and I don't really want to mess around with choosing issuers, because I don't know who's who, so I just put it out there for whoever wants to earn fees\n[21:06:03] <Hansie> Part of the bond from the card game issuer to the authorized nodes could be a bonus payout at the end if the asset was serviced well, say ~10% of the total servicing cost\n[21:06:43] <Krakaw> @mikethetike: of course that's going to work!\n[21:07:35] <mikethetike> * choosing nodes, not *issuers*\n[21:08:49] <Hansie> @mikethetike In the bonded scenario you would have to put up some Tari to issue the kitties, but you would not need to know who will service them\n[21:10:01] <Krakaw> What's the relative stake for the nodes if they're going to bond?\n[21:11:42] <@cjs77> The hour is up; but everyone is free to continue the discussion (please do).\n[21:11:42] <@cjs77> What I'd like to do is take the discussion from these first 2 sessions and work them up into something vaguely coherent and drop them as an RFCon Github. Then more focussed critiques and suggestions can happen via the PR system. How does that sound?\n[21:11:54] <jnsmk> Ok so the overall idea is : incentivizing unknown node to be honest by putting their stake at risk and being rewarded if they does a good job\n[21:12:00] <Hansie> @krakaw Must be in equilibrium/pro-ratio with (a) the cost of servicing the asset during its life-time and (b) the perceived value of the asset.\n[21:13:04] <Hansie> @jnsmk It would seem so yes, as an economic model that can be self sustained\n[21:13:30] <mikethetike> Bond/stakes is just one idea though right? there are other ways of reaching consensus/keep nodes honest\n[21:13:50] Hansie Hansie must do some chores now\n[21:14:05] <kngako> +1 on the RFC repo getting an update\n[21:14:36] <jnsmk> My last question would be : what about asset that would last a lifetime ? in the ratio you're talking about @Hansie\n[21:14:49] <jnsmk> Ah well I guess I'll keep this one for a PR then :D\n[21:15:02] <@cjs77> mike: Looking forward to hearing alternatives\n[22:02:47] <@fluffypony> moneromooo: a slider is a GUI element\n[22:03:18] <@fluffypony> most of the Google entries for \"slider\" are UI related\n[22:03:32] <moneromooo> Yes, I got that.\n[22:04:08] <@fluffypony> I'm open to a better term, I've not heard of privacy sliders in prisons\n[22:04:53] <moneromooo> I don't know if it's the actual name. It's just the thing that came to my mind reading it :)\n```\n",
    "title": "Tari Protocol Discussion 2",
    "date": "2018-10-29T14:00:00.000Z",
    "excerpt": "The Tari protocol is all about native digital assets. So the architecture must support the particular requirements of a digital assets platform. Today the Tari community came together to think about...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-2.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "2"
  },
  {
    "slug": "2018-10-25-tari-protocol-discussion-1",
    "content": "\nToday we hosted the first of many discussions about the architecture for the Tari protocol on Freenode in #tari-dev.\n\nThe primary goal was to collaborate with the Tari community to generate high-level architecture ideas for how the Tari protocol could be built.\n\nJoin us for our next architecture discussion.\n\nDiscussion times proposed by the Tari community:\n\n**Mondays: 8pm CAT (1pm EST)**\n**Thursdays: 11am CAT (4am EST)**\n\nTo keep up with the latest Tari developments, you can follow the project on [Twitter](https://twitter.com/tari).\n\n### Transcript of today‚Äôs discussion\n\n```\n[11:02:11] <lessless> Hi\n[11:03:00] <@fluffypony> hi frenz\n[11:04:27] <Krakaw> Hey\n[11:05:00] <cjs77> Ok, let's kick things off. To begin with today, we'd like to get some ideas rolling on what the very high-level architecture for Tari will look like. To build out this picture, however, it's probably pertinent to get an idea of what Tari should do as a protocol.\n[11:06:15] <cjs77> If we consider that The Tari protocol is all about *native digital assets*. So the architecture should really support the particular requirements of a digital assets platform.\n[11:07:01] <@fluffypony> so...Ethereum?\n[11:07:02] <@fluffypony> :-P\n[11:07:40] <Krakaw> Haha\n[11:12:18] <jnsmk> I had in mind from the start that Tari was about issuance of non fungible tokens\n[11:16:52] <@fluffypony> well fungible and non-fungible\n[11:16:58] <@fluffypony> I don't see why it shouldn't be able to do both\n[11:17:17] <@fluffypony> if you can solve for non-fungible then you're effectively solving for fungible, given sufficient privacy\n[11:18:27] <jnsmk> That is a fact indeed\n[11:18:30] <@cjs77> So what kind of NFTs or digital assets might Tari want to handle; and what would the user expectation for interacting with those be?\n[11:18:30] <@cjs77> e.g.: for tickets, there tends to be very high demand on the network when tickets go on-sale (suggesting we need high throughput), but also when tickets get redeemed, the validation and redemption of the ticket needs to happen really quickly (so that queues of people can move quickly)\n[11:20:20] <jnsmk> What about card games for example ?\n[11:20:29] <@fluffypony> same goes for ICO tokens / security tokens, there's that massive throughput during a token sale\n[11:20:50] <@fluffypony> jnsmk: I think they'd have non-fungibility and ease of transfer properties\n[11:20:53] <minamoo> in-game items? if Tari will be doing any of that\n[11:20:59] <@fluffypony> minamoo: definitely\n[11:21:18] <@fluffypony> card games and in-game items have similar properties\n[11:21:26] <@fluffypony> I suspect loyalty points and in-game currencies do, too\n[11:21:29] <@cjs77> otoh, in-game items might have significant amounts of metadata attached to it (e.g. graphics), and tons of state (item history / experience); so there needs to be some way of effectively managing that state. In this case, I hope it's clear that it would be nuts to expect *every* node to manage *every* digital asset (so... NOT Ethereuem, @fluffypony ;) )\n[11:21:43] <@cjs77> Though I know you knew that :-)\n[11:21:58] <@fluffypony> cjs77: does that metadata need to be expressed in Tari in any meaningful way?\n[11:22:02] <@fluffypony> why can't it just be a hash of some data set?\n[11:22:24] <@cjs77> Yeah, I think that's a reasonable approach\n[11:22:26] <jnsmk> I don't see the need either, hash can just be a key to locally stored asset amirite ?\n[11:22:28] <Blackwolfsa> we just need to prove the state of it\n[11:24:16] <@cjs77> but someone still needs to deliver that metadata at some point. If it's a single game server, and the asset issuer is happy with that, then so be it. Other issuers may want some redundancy, but I think the Tari protocol can be agnostic about that in general\n[11:24:17] <@fluffypony> Blackwolfsa: you mean the state of individual metadata pieces, or the state overall?\n[11:28:04] <neonknight> So the Tari token should rather focus on storing the ownership information and a unique identifier or DNA of the actual media content\n[11:29:15] <Blackwolfsa> @fluffypony that bring up an interesting question. Proving state overall should be easy, but state of each individual meta data piece will not be trivial. But what happens when you change one meta data piece, then the whole thing becomes \"changed\". This might be one of those things that can be a case by case thing depending on the meta data\n[11:29:19] <lessless> Is it ok to just agree on a size of the metadata that individual token can hold?\n[11:29:37] <jnsmk> Yup I was thinking that, we need to prove ownership and carry some basic informations (in case of IG token would be an UUID for that item for example)\n[11:30:05] <jnsmk> +lessless or that indeed\n[11:30:12] <@cjs77> Metadata aside, there is still state that needs to be tracked, which is non-negligible. Let's say a concert has 10,000 tickets. At the minimum, someone needs to track who owns each of the 10,000 tickets and redemption state (has it been used).\n[11:30:49] <simian_za> and some inherent conditions under which it can be transferred?\n[11:31:22] <lessless> proving ownership is a topic of a paramount importance! how to prove that only one person owns an asset?\n[11:31:29] <@cjs77> Is it fair to say that it's infeasible to have this state data live on a blockchain?\n[11:31:38] <@cjs77> ^ on the base layer, at least\n[11:32:09] <minamoo> will every node be required to track that or can there be e.g nodes that issue, nodes that track state, and relay info or will that be convoluted?\n[11:32:26] <lessless> cjs77 ownership transfer should be secured as much as possible\n[11:32:43] <@cjs77> lessless: If we track the public key of an owner, a simple digital signature by the owner will suffice\n[11:33:55] <lessless> cjs77 what about receiving reoccurring dividends - should it be possible to verify ownership automatically, so payments can go through w/o any delay?\n[11:34:45] <@cjs77> Can you explain a bit more? I'm not sure I follow your use case. Are you talking about a hypothetical security token?\n[11:35:10] <@fluffypony> minamoo: which bit, the metadata or the ownership?\n[11:36:40] <@cjs77> minamoo: imho, I think it would be crazy to expect every node to track every state change. It's one of the main issues with ethereum.\n[11:37:37] <@fluffypony> what if we had a merkle tree\n[11:37:49] <@fluffypony> and each bit of metadata was represented on that tree\n[11:37:53] <@fluffypony> and then only the merkle root changes\n[11:37:54] <minamoo> fluffypony: I was refering to the ownership aspect as per the example that csj77 gave about tracking ticket states\n[11:38:09] <jnsmk> And ETH don't even have \"that much\" tokens. In case of wide adoption only for concert tickets, with everything happening in only one big city if would be crazy amount to track\n[11:38:49] <@cjs77> to be clear though, Tari transfers (Tari being the fungible token of the network) should proceed via usual consensus\n[11:38:50] <@fluffypony> minamoo: I think that \"state\" is often somewhat localised, eg. the only people that care about the redemption state of a ticket are the people at the gate and the people buying tickets in the parking lot, and they can connect to a single server or a cluster of servers\n[11:40:53] <jnsmk> @fluffypony in the case of tickets I see the localisation. I see less localisation in the case of an MMORPG somehow\n[11:41:23] <@fluffypony> jnsmk: well they're still \"localised\" wrt to needing to hit a central server / group of servers right?\n[11:41:39] <lessless> cjs77 I just think that it should be possible to verify ownership without owner signing anything off\n[11:41:53] <jnsmk> That's right\n[11:42:37] <lessless> fluffypony what if those are tickets for the online webinar? then auditory can be geographically distributes. There are a bunch of online learning classes with limited number of seats\n[11:43:00] <@fluffypony> lessless: to clarify I didn't mean geographically localised\n[11:43:07] <@fluffypony> I meant that localised among a small group of people\n[11:43:17] <lessless> ah, thanks, got it\n[11:43:18] <moneromooo> lessless: Do you mean \"I just think it should be possible for a central party to track down a target without the target's knowledge\" ?\n[11:43:39] <jnsmk> Would that mean that somehow only the localised interested people would maintain the state of ownership and for example only the supply information would be globally stored ?\n[11:44:00] <@fluffypony> jnsmk: I think what cjs77 is correct, ownership is a special state and should use consensus\n[11:44:09] <@fluffypony> but something like \"is this ticket redeemed\" is not special\n[11:44:17] <@fluffypony> and it can be shared among that localised group\n[11:44:58] <lessless> moneromooo fair enough\n[11:44:58] <@cjs77> fluffypony: the merkle root is perfect for \"checkpointing\" DA state. Then if I want to make a request to the network that says \"Who owns ticket 5124 for asset #a3fabb212344?\", then a node tracking that state must reply with a result and a merkle proof; and it's easy to verify.\n[11:47:48] <AlexAnarcho> sup everybody\n[11:48:50] <moneromooo> Since it's silent now, I think thought should be given to how old stuff is going to get kicked off the chain after it gets obsolete. Like all these concert tickets should not be taking space long after the concert is over.\n[11:48:59] <hahsun> hi all\n[11:49:26] <@fluffypony> moneromooo: well\n[11:49:27] <@fluffypony> yes and no\n[11:49:33] <minamoo> so special states would need to be defined and node functionality, correct? The state (\"is this ticket redeemed\") determining which node to query (ie. \"localised\" or every node)?\n[11:49:34] <moneromooo> So, a way to excise a prticular asset type (or most of it) from the chain at some (possibly predetermined) time.\n[11:49:41] <@fluffypony> what if you went to the last Michael Jackson concert and want to keep your ticket stub?\n[11:50:15] <moneromooo> You can keep a local proof.\n[11:50:18] <@fluffypony> and if we're doing it the MimbleWimble way then just the kernel is stored to represent ownership\n[11:50:23] fluffypony ponders\n[11:50:48] <simian_za> and for auditing purposes by the promoters and artists? There could be a way to archive stuff though and just store a merkle root of it?\n[11:50:50] <moneromooo> A local proof might need chain input though...\n[11:50:59] <jnsmk> We still need possibility to \"burn\" assets\n[11:51:34] <@fluffypony> jnsmk: agreed\n[11:51:48] <@fluffypony> maybe the asset issuer can mark it as \"burnable\"?\n[11:51:52] <jnsmk> Consider the case of ingame item that can be broken by a \"durability\" system of whatever\n[11:52:14] <@cjs77> That's just a piece of state though\n[11:52:49] <moneromooo> Subchains might fix the \"old stuff takes space\" problem.\n[11:53:01] <moneromooo> However that might work ^_^\n[11:53:02] <neonknight> The game can limit the use of that asset, even if the asset still exists\n[11:53:17] <@cjs77> jnsmk: in principle, the \"durability\" field could be updated in the DA state\n[11:56:09] <jnsmk> It might be more \"responsive\" to give the possibility to completely forget it though, not sure\n[11:57:45] <Hansie> Not sure if ownership of a ticket can live in the Mimblewimble base layer though, maybe just a merkle root pointing to a persistent data set somewhere. Don't we need a 2nd layer for assets?\n[11:57:52] <@cjs77> It seems like there needs to be two (at least) layers: A base layer that tracks low volume data that needs to be highly secure, e.g. Tari token ownership; DA checkpoints; etc.\n[11:57:52] <@cjs77> and a state management layer that keeps local track of all DA state (that the node cares about), can handle state change instructions and can interacts with a base layer as needed. This 2nd layer can be much more centralised, since we're not as concerned with security as we are with performance and speed, but the base layer is there to fall back on in case of issues.\n[11:58:49] <@fluffypony> cjs77: yeah agreed - hence moneromooo's subchains suggestion\n[11:58:57] <mikethetike> how will a new node get the latest state of the digital assets\n[11:59:03] <@fluffypony> mikethetike: \"sharding\"\n[11:59:52] <@cjs77> mikethetike: It would have to request a sync and verify against the last checkpoint\n[12:00:55] <neonknight> What if the asset owner willingly decides to mark an asset for destruction so he can claim a small deposit, like a glass bottle deposit?\n[12:01:20] <@fluffypony> neonknight: that's a VERY interesting idea\n[12:01:28] <@fluffypony> incentivised to save space\n[12:02:28] <jnsmk> \"burn after reading\"\n[12:03:20] <neonknight> Some people might want to keep their ticket stubs for their collection, but the majority probably do not care.\n[12:04:20] <minamoo> neonknight: +1\n[12:04:47] <Hansie> Similar to BEAM's re-usable Mimblewimble kernels, users being incentivized for it\n[12:06:10] <@fluffypony> it could even be a nice prompted thing where the wallet is like \"now that you've gone to the concert, do you want to keep your ticket stub or delete it and get a 1 Tari bonus?\"\n[12:07:00] <jnsmk> That's great imo\n[12:07:34] <AlexAnarcho> what about in-game items or cosmetics that remain. if i buy a skin i want it to remain in my possession and not disappear after first use\n[12:08:15] <moneromooo> Gotta make sure the 1 tari tx is smaller than the original ticket thing :)\n[12:08:33] <@fluffypony> AlexAnarcho: those are going to have to live on, but tickets are temporal\n[12:08:46] <@fluffypony> DRM tokens (eugh) is also temporal\n[12:08:55] <@fluffypony> s/is/are\n[12:09:08] <Blackwolfsa> @moneromooo it can probably be a % of the contract/amount of tickets thing\n[12:10:03] <@cjs77> Some other things to get some thoughts on re: the base layer:\n[12:10:03] <@cjs77> * implemented using a PoW chain merge-mined with Monero,\n[12:10:03] <@cjs77> * use MimbleWimble protocol\n[12:10:41] <Hansie> One can even opt in for ticket stub deletion when the ticket is purchased, minimizing network interaction\n[12:10:45] <jnsmk> I like the merge-mining, would give great security right ?\n[12:11:00] <@fluffypony> I think short of something else amazing being dropped on Tor in the next week, MW is the most sound, scalable \"base layer\" protocol we know\n[12:11:07] <@fluffypony> jnsmk: yup\n[12:11:26] <jnsmk> But what if (and I don't hope that :D) monero network dies off ?\n[12:11:32] <Hansie> Mimblewimble is great\n[12:12:15] <@fluffypony> jnsmk: I think that's a disaster scenario, but merge-mined chains can continue independently\n[12:12:43] <@fluffypony> presumably with weaker security, but if Monero is dying then the miners would switch to mining something else, possibly Tari, so not sure if it would even lead to weaker security\n[12:12:51] <@fluffypony> but that's really an unimaginable scenario\n[12:13:09] <moneromooo> It was clearly just imagined :P\n[12:13:29] <@fluffypony> lol\n[12:13:31] <@fluffypony> unfathomable\n[12:14:03] <jnsmk> Yea I just wondered about the level of dependency of the mergemined network\n[12:14:14] <@cjs77> lol\n[12:14:30] <jnsmk> Then merge-mined seems like a great option to me given the high level of security that would be inherited from the first minute\n[12:14:34] <@fluffypony> jnsmk: there's a Tari Labs University on merge mining\n[12:14:37] <@cjs77> ^ this\n[12:15:08] <Hansie> Merged mining can also suffer from mining power centralization issues\n[12:15:27] <@fluffypony> https://tari-labs.github.io/tari-university/merged-mining/merged-mining.html\n[12:15:29] <Hansie> It must be distributed to multiple players\n[12:15:36] <@fluffypony> https://tari-labs.github.io/tari-university/merged-mining/merged-mining-scene/MergedMiningIntroduction.html\n[12:15:43] <@cjs77> and there are various strategies we could employ if things go wrong. See the TLU writeup https://tari-labs.github.io/tari-university/merged-mining/merged-mining.html\n[12:15:47] <jnsmk> @fluffypony I indeed need to read up all the Tari book :D\n[12:16:54] cjs77 must get some lunch\n[12:18:22] <moneromooo> About the \"redeeming for kickback\" thing above. AIUI, MW removes \"internal\" links between original inputs and existing outputs.\n[12:18:46] <moneromooo> So, thinking about this redeeming a ticket for a kickback would not actually do much overall, would it ?\n[12:19:01] moneromooo doesn't know much about MW\n[12:19:13] <Hansie> If it is the 2nd layer it might\n[12:19:17] <@fluffypony> ^^\n[12:19:27] <simian_za> That would be for the fungible Tari on the base layer but for the non-fungible tokens you wouldnt want to prune\n[12:19:41] <simian_za> unless its on purpose of course\n[12:19:53] <moneromooo> OK, so no MW for tickets and stuff, is what you're saying ?\n[12:20:28] <Hansie> Yes, preferably all of that on a 2nd layer\n[12:35:35] <@fluffypony> ok now I'm all architected out\n[12:35:56] <@fluffypony> cjs77: do you want to have some sort of cadence for these discussions or just keep it ad-hoc?\n[12:38:32] <jnsmk> I also start to see the big picture. BTW I like what you guys are doing the the tari-university, it will surely give the opportunity to guys like me to contribute\n[12:44:25] <AlexAnarcho> yes, the education is so essential! Great job, at first glance it looks very informative\n[12:50:20] <@cjs77> FluffyPony: I suggest we keep things going adhoc, but keep this time every week as a \"formal\" discussion slot so as to maintain momentum.\n[12:50:30] <@fluffypony> sounds good\n[12:50:35] <@cjs77> We can increase the frequency if needed\n[12:50:41] <@fluffypony> weekly architecture meeting\n[12:50:54] <@fluffypony> time might be inconvenient for Americans - thoughts on doing it a bit later?\n[12:51:19] <@cjs77> Also give some thought to an evening slot for Pacific folks to interact live\n[12:54:57] <@cjs77> What about Tuesdays 8pm and Thursdays 11am?\n[12:55:47] <@fluffypony> Tuesday evenings are bad for me...Monday?\n[12:55:53] <p3t3_R> +1\n[12:56:12] <@cjs77> Jnsmk: glad you like tlu. That was the idea behind getting it going\n[12:57:07] <@cjs77> Monday is good\n[12:57:20] <@fluffypony> kk\n```\n",
    "title": "Tari Protocol Discussion 1",
    "date": "2018-10-25T14:00:00.000Z",
    "excerpt": "Today we hosted the first of many discussions about the architecture for the Tari protocol on Freenode in #tari-dev. The primary goal was to collaborate with the Tari community to generate high-level...",
    "thumbnail": "/assets/posts/img/assets/img/posts/protocol-discussion-1.png",
    "author": "Tari Team",
    "categories": [
      "Protocol"
    ],
    "postNumber": "1"
  }
]